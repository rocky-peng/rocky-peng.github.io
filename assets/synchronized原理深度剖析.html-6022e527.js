const e=JSON.parse('{"key":"v-7da84f98","path":"/software/java-basic/synchronized%E5%8E%9F%E7%90%86%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90.html","title":"Sync的实现原理","lang":"zh-CN","frontmatter":{"title":"Sync的实现原理","date":"2017-03-07T00:00:00.000Z","description":"sync是jvm的内置锁，底层是通过对象监视器(ObjectMonitor)来实现。而对象监视器的底层实现是通过cas+自旋或者操作系统的互斥量来实现的。通过javap -c 命令可以查看到sync方法前后有成对的monitorenter/monitorexit指令。 ObjectMonitor的结构 cas: compare and swap ，比对并交换。 这个操作是cpu指令级的功能，可以保证原子性。 这个操作需要三个参数：1.数据存放的地址Addr 2.原来的值A 3.期望改变后的值B。 只有当Addr数据为A的时候才会成功把值更改为B","head":[["link",{"rel":"canonical","href":"https://justsoso.fun/software/java-basic/synchronized%E5%8E%9F%E7%90%86%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90.html"}],["meta",{"property":"og:url","content":"https://justsoso.fun/software/java-basic/synchronized%E5%8E%9F%E7%90%86%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90.html"}],["meta",{"property":"og:site_name","content":"技术加油站"}],["meta",{"property":"og:title","content":"Sync的实现原理"}],["meta",{"property":"og:description","content":"sync是jvm的内置锁，底层是通过对象监视器(ObjectMonitor)来实现。而对象监视器的底层实现是通过cas+自旋或者操作系统的互斥量来实现的。通过javap -c 命令可以查看到sync方法前后有成对的monitorenter/monitorexit指令。 ObjectMonitor的结构 cas: compare and swap ，比对并交换。 这个操作是cpu指令级的功能，可以保证原子性。 这个操作需要三个参数：1.数据存放的地址Addr 2.原来的值A 3.期望改变后的值B。 只有当Addr数据为A的时候才会成功把值更改为B"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-20T07:03:49.000Z"}],["meta",{"property":"article:published_time","content":"2017-03-07T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-20T07:03:49.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sync的实现原理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-03-07T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-20T07:03:49.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"CAS的三大问题","slug":"cas的三大问题","link":"#cas的三大问题","children":[]},{"level":2,"title":"锁的升级过程","slug":"锁的升级过程","link":"#锁的升级过程","children":[]},{"level":2,"title":"注意","slug":"注意","link":"#注意","children":[]},{"level":2,"title":"sync和ReentrantLock的区别","slug":"sync和reentrantlock的区别","link":"#sync和reentrantlock的区别","children":[]},{"level":2,"title":"扩展","slug":"扩展","link":"#扩展","children":[{"level":3,"title":"矛盾1","slug":"矛盾1","link":"#矛盾1","children":[]},{"level":3,"title":"矛盾2","slug":"矛盾2","link":"#矛盾2","children":[]},{"level":3,"title":"矛盾3","slug":"矛盾3","link":"#矛盾3","children":[]},{"level":3,"title":"矛盾4","slug":"矛盾4","link":"#矛盾4","children":[]},{"level":3,"title":"矛盾5","slug":"矛盾5","link":"#矛盾5","children":[]}]},{"level":2,"title":"系统推荐","slug":"系统推荐","link":"#系统推荐","children":[]}],"git":{"createdTime":1671976155000,"updatedTime":1734678229000,"contributors":[{"name":"rocky-peng","email":"rocky.peng@qq.com","commits":343},{"name":"rocky.peng","email":"rocky.peng@qq.com","commits":22}]},"readingTime":{"minutes":7.68,"words":2305},"filePathRelative":"software/java-basic/synchronized原理深度剖析.md","localizedDate":"2017年3月7日","excerpt":"<p>sync是jvm的内置锁，底层是通过对象监视器(ObjectMonitor)来实现。而对象监视器的底层实现是通过<strong>cas+自旋</strong>或者<strong>操作系统的互斥量</strong>来实现的。通过javap -c 命令可以查看到sync方法前后有成对的monitorenter/monitorexit指令。</p>\\n<p>ObjectMonitor的结构\\n<img src=\\"https://cdn.justdopay.com/xiaoshujiang/1629079090127.png\\" alt=\\"\\" loading=\\"lazy\\"></p>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code>cas<span class=\\"token operator\\">:</span> compare and swap ，比对并交换。\\n这个操作是cpu指令级的功能，可以保证原子性。\\n这个操作需要三个参数：<span class=\\"token number\\">1.</span>数据存放的地址<span class=\\"token class-name\\">Addr</span>  <span class=\\"token number\\">2.</span>原来的值<span class=\\"token class-name\\">A</span>  <span class=\\"token number\\">3.</span>期望改变后的值<span class=\\"token class-name\\">B</span>。\\n只有当<span class=\\"token class-name\\">Addr</span>数据为<span class=\\"token class-name\\">A</span>的时候才会成功把值更改为<span class=\\"token class-name\\">B</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","copyright":{},"autoDesc":true}');export{e as data};
