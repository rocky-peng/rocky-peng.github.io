import{_ as o,$ as l,a0 as p,a1 as n,a3 as e,a4 as t,a5 as r,a2 as s,w as d}from"./framework-b3a0f150.js";const c={},i=r(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>在数据分析中，我们常常需要将纵向排列的数据转换为横向展示，以便更直观地进行分析或生成报告。这个过程就是 行转列，又称为 Pivot 操作。在 SQL 中，如何将行数据高效转换为列数据是一项非常实用的技巧，无论是生成动态报表，还是在数据透视分析中应用，都能够大显身手。</p><p>在这篇博文中，我将带你从零开始，深入理解 SQL 中行转列的原理，并通过常见的数据库示例逐步展示行转列的多种实现方式。</p><h2 id="行转列是什么" tabindex="-1"><a class="header-anchor" href="#行转列是什么" aria-hidden="true">#</a> 行转列是什么</h2><p>行转列操作可以帮助我们将多行数据转换成不同的列，尤其在处理 <strong>数据透视</strong> 时非常有用。行转列广泛应用于需要汇总、整理数据的场景，如报表生成和业务分析。</p><p>假设有一张销售表 <code>sales</code>，记录了每个季度的销售额：</p><table><thead><tr><th>year</th><th>quarter</th><th>revenue</th></tr></thead><tbody><tr><td>2023</td><td>Q1</td><td>5000</td></tr><tr><td>2023</td><td>Q2</td><td>7000</td></tr><tr><td>2023</td><td>Q3</td><td>6000</td></tr><tr><td>2023</td><td>Q4</td><td>8000</td></tr></tbody></table><p>我们的目标是将不同季度的销售额变成每一年的列展示，比如：</p><table><thead><tr><th>year</th><th>Q1</th><th>Q2</th><th>Q3</th><th>Q4</th></tr></thead><tbody><tr><td>2023</td><td>5000</td><td>7000</td><td>6000</td><td>8000</td></tr></tbody></table><h2 id="常见行转列方法" tabindex="-1"><a class="header-anchor" href="#常见行转列方法" aria-hidden="true">#</a> 常见行转列方法</h2><h3 id="方法-1-使用-case-when-实现行转列" tabindex="-1"><a class="header-anchor" href="#方法-1-使用-case-when-实现行转列" aria-hidden="true">#</a> <strong>方法 1：使用 CASE WHEN 实现行转列</strong></h3><p><code>CASE WHEN</code> 是行转列的经典方式，也是我最喜欢使用的方式，这个方式适用于大多数 SQL 数据库。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token keyword">SELECT</span>
  <span class="token keyword">year</span><span class="token punctuation">,</span>
  <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> quarter <span class="token operator">=</span> <span class="token string">&#39;Q1&#39;</span> <span class="token keyword">THEN</span> revenue <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Q1<span class="token punctuation">,</span>
  <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> quarter <span class="token operator">=</span> <span class="token string">&#39;Q2&#39;</span> <span class="token keyword">THEN</span> revenue <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Q2<span class="token punctuation">,</span>
  <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> quarter <span class="token operator">=</span> <span class="token string">&#39;Q3&#39;</span> <span class="token keyword">THEN</span> revenue <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Q3<span class="token punctuation">,</span>
  <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> quarter <span class="token operator">=</span> <span class="token string">&#39;Q4&#39;</span> <span class="token keyword">THEN</span> revenue <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Q4
<span class="token keyword">FROM</span> sales
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">year</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>通过 <code>CASE WHEN</code> 判断每一行属于哪个季度，使用 <code>SUM</code> 聚合数据，确保同一年内的季度销售额正确归类到各自的列中。</li><li><code>GROUP BY</code> 按年份分组，以获得每年的季度销售额汇总。</li></ol><h3 id="方法-2-使用-pivot-语句" tabindex="-1"><a class="header-anchor" href="#方法-2-使用-pivot-语句" aria-hidden="true">#</a> <strong>方法 2：使用 PIVOT 语句</strong></h3><p>某些数据库（如 SQL Server 和 Oracle）提供了专门的 <code>PIVOT</code> 语句来实现行转列。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> sales
<span class="token keyword">PIVOT</span> <span class="token punctuation">(</span>
  <span class="token function">SUM</span><span class="token punctuation">(</span>revenue<span class="token punctuation">)</span>
  <span class="token keyword">FOR</span> quarter <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;Q1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Q2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Q3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Q4&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">AS</span> pivot_table<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>PIVOT</code> 语句自动将季度 (<code>quarter</code>) 转为列，并对销售额 (<code>revenue</code>) 进行汇总。</li><li>相比于 <code>CASE WHEN</code>，<code>PIVOT</code> 更加简洁，但并非所有数据库都支持。</li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>其实从我个人而言，更喜欢用case when的方式，这个方式更通用，也方便理解和记忆</p><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,22),u=n("p",null,[n("br"),n("br"),n("br"),n("br"),n("br"),n("br")],-1),k=n("hr",null,null,-1),h=n("hr",null,null,-1),E=n("ul",null,[n("li",null,[n("strong",null,"随机毒鸡汤"),s("：像我这么单纯的人，做不来这么有心机的数学题。 "),n("br"),n("br"),n("img",{src:"https://images.pexels.com/photos/31196726/pexels-photo-31196726.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Free stock photo of authentic japan, cultural japan, explore japan",loading:"lazy"})])],-1);function A(v,m){const a=d("RouterLink");return l(),p("div",null,[i,n("ul",null,[n("li",null,[e(a,{to:"/software/unclassified/RSA%20%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E5%A4%9A%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88.html"},{default:t(()=>[s("RSA 加密解密多语言实现方案")]),_:1})]),n("li",null,[e(a,{to:"/software/middleware/redis/Redis%E7%AC%94%E8%AE%B0.html"},{default:t(()=>[s("Redis笔记")]),_:1})]),n("li",null,[e(a,{to:"/other/JetBrains%20IDE%20%E5%85%A8%E7%A0%B4%E8%A7%A3.html"},{default:t(()=>[s("JetBrains IDE 全破解")]),_:1})]),n("li",null,[e(a,{to:"/software/unclassified/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D%E7%AC%AC%E5%87%A0%E4%B8%AA%E7%AC%A6%E5%8F%B7%E9%97%AE%E9%A2%98.html"},{default:t(()=>[s("正则表达式匹配第几个符号问题")]),_:1})]),n("li",null,[e(a,{to:"/other/Spring%20RetryTemplate.html"},{default:t(()=>[s("Spring RetryTemplate")]),_:1})]),n("li",null,[e(a,{to:"/other/Spring%20Boot%E5%8D%87%E7%BA%A7%E5%88%B02%206%20x%E8%B8%A9%E7%9A%84%E5%9D%91.html"},{default:t(()=>[s("Spring Boot升级到2 6 x踩的坑")]),_:1})]),n("li",null,[e(a,{to:"/software/java-basic/AQS%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"},{default:t(()=>[s("AQS源码解读")]),_:1})]),n("li",null,[e(a,{to:"/other/JetBrains-License-Server.html"},{default:t(()=>[s("JetBrains-License-Server")]),_:1})]),n("li",null,[e(a,{to:"/software/java-basic/CountDownLatch%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"},{default:t(()=>[s("CountDownLatch源码解读")]),_:1})]),n("li",null,[e(a,{to:"/software/docker/Docker%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E4%BF%A1%E6%96%B9%E6%A1%88.html"},{default:t(()=>[s("Docker跨主机通信方案")]),_:1})]),n("li",null,[e(a,{to:"/other/Linux%20dev%20shm%E7%9B%AE%E5%BD%95.html"},{default:t(()=>[s("Linux dev shm目录")]),_:1})]),n("li",null,[e(a,{to:"/other/https%E5%92%8Chttp%E6%B7%B7%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html"},{default:t(()=>[s("https和http混用解决办法")]),_:1})])]),u,k,h,E])}const b=o(c,[["render",A],["__file","行转列不再复杂：SQL高手都在用的技巧揭秘.html.vue"]]);export{b as default};
