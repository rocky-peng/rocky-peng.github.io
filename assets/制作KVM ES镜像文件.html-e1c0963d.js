import{_ as r,$ as i,a0 as c,a1 as s,a2 as a,a3 as e,a4 as t,a5 as p,w as l}from"./framework-b3a0f150.js";const u={},d={href:"https://note.youdao.com/ynoteshare1/index.html?id=d641f8e6125142a0c2f19a9b416534ac&type=note?auto",target:"_blank",rel:"noopener noreferrer"},m=p(`<ol><li>进入centos服务器，上传es的安装文件到服务器并解压到/usr/share/elasticsearch目录，然后已root用户执行下面步骤：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adduser elastic

<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft nofile 125536&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard nofile 125536&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft nproc  8096&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard nproc  8096&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf


<span class="token builtin class-name">echo</span> <span class="token string">&quot;vm.max_map_count=522144&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token function">sysctl</span> <span class="token parameter variable">-p</span>

<span class="token function">chown</span> <span class="token parameter variable">-R</span> elastic:elastic /usr/share/elasticsearch

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要开启 bootstrap.memory_lock: true，则还需要执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard memlock unlimited&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft memlock unlimited&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改jvm.options文件</p><p>已elastic用户修改es的配置文件，然后执行 bin/elasticsearch -d</p><h2 id="编写自启动脚本" tabindex="-1"><a class="header-anchor" href="#编写自启动脚本" aria-hidden="true">#</a> 编写自启动脚本</h2><ol><li>vi /usr/lib/systemd/system/elasticsearch.service</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>elasticsearch <span class="token function">service</span>
  
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">User</span><span class="token operator">=</span>elastic
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/share/elasticsearch/bin/elasticsearch
  
<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>systemctl enable elasticsearch</p></li><li><p>systemctl start elasticsearch</p></li></ol><h2 id="docker部署" tabindex="-1"><a class="header-anchor" href="#docker部署" aria-hidden="true">#</a> Docker部署</h2><p>由于需要sshd服务，所以我们没有直接使用es7.4.1的docker镜像，而是使用的一个centos的docker镜像</p><p>然后同样执行上面的步骤，然后启动docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network create <span class="token parameter variable">-d</span> macvlan  <span class="token parameter variable">--subnet</span><span class="token operator">=</span><span class="token number">172.26</span>.43.0/24 <span class="token parameter variable">--gateway</span><span class="token operator">=</span><span class="token number">172.26</span>.43.129 <span class="token parameter variable">-o</span> <span class="token assign-left variable">parent</span><span class="token operator">=</span>bond0 mynet   

<span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">TZ</span><span class="token operator">=</span><span class="token string">&quot;Asia/Shanghai&quot;</span> <span class="token parameter variable">--name</span> es172_26_43_136 <span class="token parameter variable">-h</span> es172_26_43_136 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--network</span><span class="token operator">=</span>mynet <span class="token parameter variable">--ip</span> <span class="token number">172.26</span>.43.136 <span class="token parameter variable">--cpus</span><span class="token operator">=</span><span class="token number">15</span> <span class="token parameter variable">--memory</span><span class="token operator">=</span>27g --memory-swap<span class="token operator">=</span>27g <span class="token parameter variable">--ulimit</span> <span class="token assign-left variable">memlock</span><span class="token operator">=</span>-1:-1 <span class="token parameter variable">--privileged</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">ES_JAVA_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Xms13g -Xmx13g&quot;</span> <span class="token parameter variable">-v</span> /opt/es/es-172.26.43.136/elasticsearch-7.4.1:/usr/share/elasticsearch <span class="token parameter variable">-v</span> /opt/es/es-172.26.43.136/backups:/opt/csbit/backups csbit-elasticsearch /usr/sbin/init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：这里虽然限制了cpus为15，但是进入到容器内部执行lscpu仍然会显示40个（和宿主机一样的）</p><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,17),E=s("p",null,[s("br"),s("br"),s("br"),s("br"),s("br"),s("br")],-1),v=s("hr",null,null,-1),b=s("hr",null,null,-1),h=s("ul",null,[s("li",null,[s("strong",null,"随机毒鸡汤"),a("：一只羊骑在你身上，打一个字，——羞。 "),s("br"),s("br"),s("img",{src:"https://images.pexels.com/photos/307008/pexels-photo-307008.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Man enjoys a scenic view of Es Vedrà at sunset from a cliff in San Juan Bautista, providing a perfect summer escape.",loading:"lazy"})])],-1);function k(B,f){const o=l("ExternalLinkIcon"),n=l("RouterLink");return i(),c("div",null,[s("p",null,[a("安装KVM，创建centos虚拟机的步骤，参考："),s("a",d,[a("https://note.youdao.com/ynoteshare1/index.html?id=d641f8e6125142a0c2f19a9b416534ac&type=note?auto"),e(o)])]),m,s("ul",null,[s("li",null,[e(n,{to:"/software/java-basic/synchronized%E5%8E%9F%E7%90%86%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90.html"},{default:t(()=>[a("synchronized原理深度剖析")]),_:1})]),s("li",null,[e(n,{to:"/software/middleware/es/ES6.2.3(3%E8%8A%82%E7%82%B9)%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%88%B0ES7.4.1(5%E8%8A%82%E7%82%B9).html"},{default:t(()=>[a("ES6.2.3(3节点)数据迁移到ES7.4.1(5节点)")]),_:1})]),s("li",null,[e(n,{to:"/other/CloudFlare%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AF%81%E4%B9%A6%E7%9A%84%E4%BD%BF%E7%94%A8.html"},{default:t(()=>[a("CloudFlare 客户端证书的使用")]),_:1})]),s("li",null,[e(n,{to:"/other/PostgreSQL%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD.html"},{default:t(()=>[a("PostgreSQL定时备份")]),_:1})]),s("li",null,[e(n,{to:"/other/MongoDB%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:t(()=>[a("MongoDB高可用")]),_:1})]),s("li",null,[e(n,{to:"/software/unclassified/%E6%B5%8B%E8%AF%95%E4%B8%A4%E5%8F%B0%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%97%B4%E7%9A%84%E7%BD%91%E9%80%9F.html"},{default:t(()=>[a("测试两台服务器间的网速")]),_:1})]),s("li",null,[e(n,{to:"/software/java-basic/%E5%B8%B8%E7%94%A8%E9%98%9F%E5%88%97.html"},{default:t(()=>[a("常用队列")]),_:1})]),s("li",null,[e(n,{to:"/other/Lombok%E7%9A%84Accessors%E5%AF%BC%E8%87%B4EasyExcel%E8%AF%BB%E5%8F%96%E5%A4%B1%E8%B4%A5.html"},{default:t(()=>[a("Lombok的Accessors导致EasyExcel读取失败")]),_:1})]),s("li",null,[e(n,{to:"/other/Mermaid%E7%A4%BA%E4%BE%8B.html"},{default:t(()=>[a("Mermaid示例")]),_:1})]),s("li",null,[e(n,{to:"/other/%E5%85%8D%E8%B4%B9%20API%20%E6%AF%8F%E6%97%A5%E6%8F%90%E4%BE%9B%E6%91%B8%E9%B1%BC%E6%97%A5%E6%8A%A5%EF%BC%8C%E8%87%AA%E5%8A%A8%E8%BF%94%E5%9B%9E%E6%97%A0%E6%B0%B4%E5%8D%B0%E5%9B%BE%E7%89%87%EF%BC%8C%E9%80%82%E7%94%A8%E4%BA%8E%E5%85%AC%E4%BC%97%E5%8F%B7%E5%92%8C%E5%B0%8F%E7%A8%8B%E5%BA%8F.html"},{default:t(()=>[a("免费 API 每日提供摸鱼日报，自动返回无水印图片，适用于公众号和小程序")]),_:1})]),s("li",null,[e(n,{to:"/other/Linux%20dev%20shm%E7%9B%AE%E5%BD%95.html"},{default:t(()=>[a("Linux dev shm目录")]),_:1})]),s("li",null,[e(n,{to:"/software/raft/raft%E5%8D%8F%E8%AE%AE.html"},{default:t(()=>[a("raft协议")]),_:1})])]),E,v,b,h])}const A=r(u,[["render",k],["__file","制作KVM ES镜像文件.html.vue"]]);export{A as default};
