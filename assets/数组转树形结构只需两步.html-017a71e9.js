import{_ as e,$ as l,a0 as c,a1 as n,a3 as t,a4 as p,a5 as o,a2 as s,w as i}from"./framework-b3a0f150.js";const u={},r=o(`<p>已很经典的菜单为例，假设结构如下：</p><ul><li>id</li><li>parent_id</li><li>name</li><li>xxx1</li><li>xxx2</li><li>….</li></ul><p>按照一比一构造一个类（只增加一个children字段）：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XXXX</span><span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">Long</span> parentId<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> xxx1<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> xxx2<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> children<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> <span class="token function">treeMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> xxxxs <span class="token operator">=</span> xxxxDao<span class="token punctuation">.</span><span class="token function">menuList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//第一步分组</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> parentId2Children <span class="token operator">=</span>
        xxxxs<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">groupingBy</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//第二步构造树</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> roots <span class="token operator">=</span> parentId2Children<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">buildTree</span><span class="token punctuation">(</span>roots<span class="token punctuation">,</span> parentId2Children<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> roots<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">buildTree</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> parents<span class="token punctuation">,</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> parentId2Children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>parents<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    parents<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span><span class="token constant">XXXX</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token constant">XXXX</span> parent <span class="token operator">:</span> parents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> parentId2Children<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        parent<span class="token punctuation">.</span><span class="token function">setChildren</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">buildTree</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> parentId2Children<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,7),d=n("p",null,[n("br"),n("br"),n("br"),n("br"),n("br"),n("br")],-1),k=n("hr",null,null,-1),v=n("hr",null,null,-1),m=n("ul",null,[n("li",null,[n("strong",null,"随机毒鸡汤"),s("：黑云压城城欲摧，作业压人人悲催。 "),n("br"),n("br"),n("img",{src:"https://images.pexels.com/photos/6552208/pexels-photo-6552208.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Dramatic aerial view of lush green mountains and a winding road under a cloudy sky.",loading:"lazy"})])],-1);function b(h,E){const a=i("RouterLink");return l(),c("div",null,[r,n("ul",null,[n("li",null,[t(a,{to:"/software/unclassified/Oh%20My%20ZSH.html"},{default:p(()=>[s("Oh My ZSH")]),_:1})]),n("li",null,[t(a,{to:"/software/jvm/JVM%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE.html"},{default:p(()=>[s("JVM参数设置")]),_:1})]),n("li",null,[t(a,{to:"/other/Censys%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%AD%A6%E4%B9%A0.html"},{default:p(()=>[s("Censys搜索引擎学习")]),_:1})]),n("li",null,[t(a,{to:"/other/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E6%8B%BC%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%90%97%EF%BC%9F.html"},{default:p(()=>[s("你真的会拼接字符串吗？")]),_:1})]),n("li",null,[t(a,{to:"/software/maccms/MAC%20CMS.html"},{default:p(()=>[s("MAC CMS")]),_:1})]),n("li",null,[t(a,{to:"/software/java-basic/%E5%B8%B8%E7%94%A8%E9%98%9F%E5%88%97.html"},{default:p(()=>[s("常用队列")]),_:1})]),n("li",null,[t(a,{to:"/software/unclassified/linux_no_space_left_on_device.html"},{default:p(()=>[s("linux_no_space_left_on_device")]),_:1})]),n("li",null,[t(a,{to:"/software/middleware/mysql/%E5%88%86%E5%BA%93%E5%88%86%E8%A1%A8.html"},{default:p(()=>[s("分库分表")]),_:1})]),n("li",null,[t(a,{to:"/software/unclassified/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF.html"},{default:p(()=>[s("前后端常用技术")]),_:1})]),n("li",null,[t(a,{to:"/intro.html"},{default:p(()=>[s("intro")]),_:1})]),n("li",null,[t(a,{to:"/other/MySQL%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%88%B0PGSQL.html"},{default:p(()=>[s("MySQL数据迁移到PGSQL")]),_:1})]),n("li",null,[t(a,{to:"/other/https%E5%92%8Chttp%E6%B7%B7%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html"},{default:p(()=>[s("https和http混用解决办法")]),_:1})])]),d,k,v,m])}const f=e(u,[["render",b],["__file","数组转树形结构只需两步.html.vue"]]);export{f as default};
