import{_ as p,$ as o,a0 as l,a1 as n,a3 as t,a4 as e,a5 as c,a2 as s,w as i}from"./framework-b3a0f150.js";const u={},r=c(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><p>现在有个后端下载csv文件的接口，在浏览器地址栏直接请求这个接口，下载的文件用office的excel打开不乱码（wps也能正常显示），但通过页面点击按钮来下载，保存的文件用office的excel打开就乱码（wps还是能正常显示）。</p><p>后端代码大概这样：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 *
 * <span class="token keyword">@param</span> <span class="token parameter">response</span>
 * <span class="token keyword">@param</span> <span class="token parameter">checkResultFileUrl</span> 这个文件要求是gkb编码
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downloadCheckResult</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> checkResultFileUrl<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;GBK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;attachment; filename=checkResult.csv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/csv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">ServletOutputStream</span> outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">InputStream</span> is <span class="token operator">=</span> fileStorageService<span class="token punctuation">.</span><span class="token function">getFileInputStream</span><span class="token punctuation">(</span>checkResultFileUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">readFully</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> is<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端代码大概这样：</p><figure><img src="https://cdn.justdopay.com/notion/md5-516bea5d2551055e6fbf71d2f7fa6a42.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h2 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h2><p>发起请求的时候不设置 responseType: &#39;blob&#39;,并且在downLoadFile函数中类似下面的修改</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>let resData <span class="token operator">=</span><span class="token char">&#39;\\ufeff&#39;</span> <span class="token operator">+</span> row<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
<span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>resData<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> &#39;text<span class="token operator">/</span>csv<span class="token punctuation">,</span>charset<span class="token operator">=</span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span>&#39;
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功！！！ 关键点是在返回的data 上加上&#39;\\ufeff’</p><figure><img src="https://cdn.justdopay.com/notion/md5-e65d409adbe72c698846b8b4a1876c68.gif" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,13),d=n("p",null,[n("br"),n("br"),n("br"),n("br"),n("br"),n("br")],-1),k=n("hr",null,null,-1),m=n("hr",null,null,-1),v=n("ul",null,[n("li",null,[n("strong",null,"随机毒鸡汤"),s("：有一种悲哀叫做，这道数学题已经超出了，我的语文理解范围。 "),n("br"),n("br"),n("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=c8fc2621-7dbb-4dc4-8155-5365c2338e3e",alt:"",loading:"lazy"})])],-1);function E(f,h){const a=i("RouterLink");return o(),l("div",null,[r,n("ul",null,[n("li",null,[t(a,{to:"/software/unclassified/MyBatis.html"},{default:e(()=>[s("MyBatis")]),_:1})]),n("li",null,[t(a,{to:"/software/middleware/mysql/MySQL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"},{default:e(()=>[s("MySQL常用命令")]),_:1})]),n("li",null,[t(a,{to:"/software/java-basic/%E5%BC%B1%E5%BC%95%E7%94%A8%E7%A4%BA%E4%BE%8B.html"},{default:e(()=>[s("弱引用示例")]),_:1})]),n("li",null,[t(a,{to:"/software/shodowsocks/ShadowsockServer.html"},{default:e(()=>[s("ShadowsockServer")]),_:1})]),n("li",null,[t(a,{to:"/other/PGSQL%20GIN%E7%B4%A2%E5%BC%95%E2%80%9C%E5%A4%B1%E6%95%88%E2%80%9D.html"},{default:e(()=>[s("PGSQL GIN索引“失效”")]),_:1})]),n("li",null,[t(a,{to:"/other/Hadoop%20%E4%B8%80.html"},{default:e(()=>[s("Hadoop 一")]),_:1})]),n("li",null,[t(a,{to:"/software/java-basic/%E4%B8%8D%E9%87%8D%E5%90%AF%20JVM%EF%BC%8C%E5%A6%82%E4%BD%95%E6%9B%BF%E6%8D%A2%E6%8E%89%E5%B7%B2%E7%BB%8F%E5%8A%A0%E8%BD%BD%E7%9A%84%E7%B1%BB%EF%BC%9F.html"},{default:e(()=>[s("不重启 JVM，如何替换掉已经加载的类？")]),_:1})]),n("li",null,[t(a,{to:"/software/unclassified/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF.html"},{default:e(()=>[s("前后端常用技术")]),_:1})]),n("li",null,[t(a,{to:"/other/SpringBoot%E6%9C%8D%E5%8A%A1%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%AE%8C%E6%88%90%E5%89%8D%E8%A2%AB%E6%8F%90%E5%89%8D%E6%B3%A8%E5%86%8C%E5%88%B0nacos.html"},{default:e(()=>[s("SpringBoot服务在服务启动完成前被提前注册到nacos")]),_:1})]),n("li",null,[t(a,{to:"/other/vuepress-theme-hope%20%E6%B7%BB%E5%8A%A0%E8%B0%B7%E6%AD%8C%E5%B9%BF%E5%91%8A.html"},{default:e(()=>[s("vuepress-theme-hope 添加谷歌广告")]),_:1})]),n("li",null,[t(a,{to:"/other/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87%E5%9C%A8%E7%BA%BF%E6%8E%A5%E5%8F%A3.html"},{default:e(()=>[s("随机图片在线接口")]),_:1})]),n("li",null,[t(a,{to:"/software/unclassified/BBR%E5%8A%A0%E9%80%9F.html"},{default:e(()=>[s("BBR加速")]),_:1})])]),d,k,m,v])}const B=p(u,[["render",E],["__file","前端axios下载csv文件乱码.html.vue"]]);export{B as default};
