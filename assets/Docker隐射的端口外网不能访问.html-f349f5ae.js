import{_ as i,$ as t,a0 as o,a1 as e,a3 as l,a4 as s,a5 as d,a2 as a,w as r}from"./framework-6821ba0c.js";const c={},p=d(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><p>比如现在有一台公网服务器，公网ip是111.111.111.111，内网ip是：10.1.1.1 。在这台服务器上面跑了两个服务：</p><ol><li><p>mysql</p><p>非docker方式，暴露的端口是3306，绑定的ip是0.0.0.0</p></li><li><p>nacos</p><p>docker方式，映射到宿主机的端口有8848和9848。连接的mysql地址是：111.111.111.111:3306/nacos</p></li></ol><p>现在发现的问题有：</p><ol><li>nacos总起不来，总提示<code>No DataSource set</code> ，但在本地却能连接 111.111.111.111:3306/nacos，并能读写数据</li><li>后面把nacos的mysql连接地址改10.1.1.1:3306/nacos后，nacos能启动成功了，但外网访问不了nacos的控制台</li></ol><p>这台服务器之前两个服务都能正常在公网访问，突然有一天发现不行了</p><p>查看防火墙端口设置：</p><figure><img src="https://cdn.justdopay.com/notion/md5-500b800b6d84bf28a0a3c1adc4b156aa.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p>8848端口也开了的，在服务器上执行<code>telnet 127.0.0.1 8848</code>也是通的，但执行<code>telnet 111.111.111.111 8848</code>就不通</p><p>网上各种乱搜，发现了始作俑者：<strong>ip_forward</strong></p><h2 id="解决过程" tabindex="-1"><a class="header-anchor" href="#解决过程" aria-hidden="true">#</a> 解决过程</h2><p>通过是否开启了路由转发 cat /proc/sys/net/ipv4/ip_forward</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>输出<span class="token number">0</span>表示没有开启，<span class="token number">1</span>表示开启了。此时输出的是<span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>为0，表示禁用了路由转发，也就是说禁止了本机网卡之间的通信。</p><p>禁用后，在docker容器内部也就无法访问公网</p><p>也就是解释了为什么nacos的mysql地址设置为111.111.111.111:3306/nacos的时候启动不了</p><p>设置为1</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>不能直接vim /proc/sys/net/ipv4/ip_forward 来修改.

正确姿势：
vim /etc/sysctl.conf

找到net.ipv4.ip_forward，将其值修改为<span class="token number">1</span>. 或者在文末追加这个配置

net.ipv4.ip_forward = <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使其生效</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>sysctl -p
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>到此可以验证下在docker容器内部能否访问外网，我这里是重启了docker</p><p>至此，上面的服务都能正常访问了</p><h2 id="溯源" tabindex="-1"><a class="header-anchor" href="#溯源" aria-hidden="true">#</a> 溯源</h2><p>之前这两个服务一直都是好的，为啥“突然”就不行了。</p><p>回忆下来估计是中途按照了BBR，并重启了一次服务器，基本可以确定和这个有关系。</p><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,27),u=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),m=e("hr",null,null,-1),h=e("hr",null,null,-1),E=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),a("：蠢萌的前提是萌，不是蠢。 "),e("br"),e("br"),e("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=ce2516e7-1c77-4612-9515-4ed1fae47fd4",alt:"",loading:"lazy"})])],-1);function _(f,v){const n=r("RouterLink");return t(),o("div",null,[p,e("ul",null,[e("li",null,[l(n,{to:"/software/unclassified/MyBatis.html"},{default:s(()=>[a("MyBatis")]),_:1})]),e("li",null,[l(n,{to:"/software/jvm/JVM%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html"},{default:s(()=>[a("JVM垃圾收集器")]),_:1})]),e("li",null,[l(n,{to:"/software/jvm/JVM%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE.html"},{default:s(()=>[a("JVM参数设置")]),_:1})]),e("li",null,[l(n,{to:"/software/unclassified/Markdown%20Mermaid%E7%94%BB%E5%9B%BE%E5%AE%9E%E4%BE%8B.html"},{default:s(()=>[a("Markdown Mermaid画图实例")]),_:1})]),e("li",null,[l(n,{to:"/software/shodowsocks/ShadowsockServerUpdatePort.html"},{default:s(()=>[a("ShadowsockServerUpdatePort")]),_:1})]),e("li",null,[l(n,{to:"/software/middleware/mysql/%E5%BC%82%E5%9C%B0%E5%A4%9A%E6%B4%BB.html"},{default:s(()=>[a("异地多活")]),_:1})]),e("li",null,[l(n,{to:"/software/middleware/es/ES%E6%9D%82%E9%A1%B9.html"},{default:s(()=>[a("ES杂项")]),_:1})]),e("li",null,[l(n,{to:"/software/unclassified/%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%AD%E7%9A%84%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{default:s(()=>[a("批量替换文件名中的指定字符串")]),_:1})]),e("li",null,[l(n,{to:"/software/spring/SpringCloud%E6%80%BB%E4%BD%93%E8%AE%A4%E8%AF%86.html"},{default:s(()=>[a("SpringCloud总体认识")]),_:1})]),e("li",null,[l(n,{to:"/software/linux/Linux.html"},{default:s(()=>[a("Linux")]),_:1})]),e("li",null,[l(n,{to:"/other/PostgreSQL%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:s(()=>[a("PostgreSQL高可用")]),_:1})]),e("li",null,[l(n,{to:"/other/Linux%20dev%20shm%E7%9B%AE%E5%BD%95.html"},{default:s(()=>[a("Linux dev shm目录")]),_:1})])]),u,m,h,E])}const B=i(c,[["render",_],["__file","Docker隐射的端口外网不能访问.html.vue"]]);export{B as default};
