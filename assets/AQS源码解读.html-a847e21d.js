const e=JSON.parse('{"key":"v-3d257f21","path":"/software/java-basic/AQS%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html","title":"AQS源码解读","lang":"zh-CN","frontmatter":{"title":"AQS源码解读","date":"2017-03-04T00:00:00.000Z","description":"谈谈你对AQS的理解 总的来说，个人认为AQS可以理解为一个排队系统，是一个CLH队列（clh的变体），是一个双向非循环队列。 这个队里有独占节点，也有共享节点，这两种节点在这个队列交叉排列。这些节点会争夺一个共享资源的使用权， AQS则制定了一套模板方法来协调这些节点对资源的获取和释放。当把AQS的独占锁、共享锁的实现原理了解清楚后， 也能大致知道了sync关键字的背后的实现原理 AQS是很多同步器的基础，很多同步器都是在AQS的基础上实现的，比如ReentrantLock/Semaphore/CountDownLatch/CyclicBarrier/ReadWriteLock","head":[["link",{"rel":"canonical","href":"https://justsoso.fun/software/java-basic/AQS%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"}],["meta",{"property":"og:url","content":"https://justsoso.fun/software/java-basic/AQS%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"}],["meta",{"property":"og:site_name","content":"技术加油站"}],["meta",{"property":"og:title","content":"AQS源码解读"}],["meta",{"property":"og:description","content":"谈谈你对AQS的理解 总的来说，个人认为AQS可以理解为一个排队系统，是一个CLH队列（clh的变体），是一个双向非循环队列。 这个队里有独占节点，也有共享节点，这两种节点在这个队列交叉排列。这些节点会争夺一个共享资源的使用权， AQS则制定了一套模板方法来协调这些节点对资源的获取和释放。当把AQS的独占锁、共享锁的实现原理了解清楚后， 也能大致知道了sync关键字的背后的实现原理 AQS是很多同步器的基础，很多同步器都是在AQS的基础上实现的，比如ReentrantLock/Semaphore/CountDownLatch/CyclicBarrier/ReadWriteLock"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-29T00:41:03.000Z"}],["meta",{"property":"article:published_time","content":"2017-03-04T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-29T00:41:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"AQS源码解读\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-03-04T00:00:00.000Z\\",\\"dateModified\\":\\"2024-12-29T00:41:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"谈谈你对AQS的理解","slug":"谈谈你对aqs的理解","link":"#谈谈你对aqs的理解","children":[]},{"level":2,"title":"独占锁","slug":"独占锁","link":"#独占锁","children":[{"level":3,"title":"获取独占锁","slug":"获取独占锁","link":"#获取独占锁","children":[]},{"level":3,"title":"释放独占锁","slug":"释放独占锁","link":"#释放独占锁","children":[]}]},{"level":2,"title":"共享锁","slug":"共享锁","link":"#共享锁","children":[{"level":3,"title":"获取共享锁","slug":"获取共享锁","link":"#获取共享锁","children":[]},{"level":3,"title":"释放共享锁","slug":"释放共享锁","link":"#释放共享锁","children":[]}]},{"level":2,"title":"加锁和释放总结","slug":"加锁和释放总结","link":"#加锁和释放总结","children":[{"level":3,"title":"获取共享锁和独占锁过程的区别","slug":"获取共享锁和独占锁过程的区别","link":"#获取共享锁和独占锁过程的区别","children":[]},{"level":3,"title":"释放共享锁和独占锁的区别","slug":"释放共享锁和独占锁的区别","link":"#释放共享锁和独占锁的区别","children":[]}]},{"level":2,"title":"ConditionObject(条件队列)","slug":"conditionobject-条件队列","link":"#conditionobject-条件队列","children":[{"level":3,"title":"await相关代码","slug":"await相关代码","link":"#await相关代码","children":[]},{"level":3,"title":"signal相关代码","slug":"signal相关代码","link":"#signal相关代码","children":[]}]},{"level":2,"title":"补充资料","slug":"补充资料","link":"#补充资料","children":[{"level":3,"title":"可中断独占锁加锁过程","slug":"可中断独占锁加锁过程","link":"#可中断独占锁加锁过程","children":[]},{"level":3,"title":"超时独占锁加锁过程","slug":"超时独占锁加锁过程","link":"#超时独占锁加锁过程","children":[]},{"level":3,"title":"AQS的三个成员变量","slug":"aqs的三个成员变量","link":"#aqs的三个成员变量","children":[]},{"level":3,"title":"获取state控制权限的六个方法","slug":"获取state控制权限的六个方法","link":"#获取state控制权限的六个方法","children":[]},{"level":3,"title":"释放state控制权的两个方法（是否排他，不区分是否可中断）","slug":"释放state控制权的两个方法-是否排他-不区分是否可中断","link":"#释放state控制权的两个方法-是否排他-不区分是否可中断","children":[]},{"level":3,"title":"ReentrantLock的公平与不公平","slug":"reentrantlock的公平与不公平","link":"#reentrantlock的公平与不公平","children":[]},{"level":3,"title":"sync和AQS实现的数据结构类似","slug":"sync和aqs实现的数据结构类似","link":"#sync和aqs实现的数据结构类似","children":[]},{"level":3,"title":"sync和reentrantlock的区别","slug":"sync和reentrantlock的区别","link":"#sync和reentrantlock的区别","children":[]}]},{"level":2,"title":"代码补充","slug":"代码补充","link":"#代码补充","children":[{"level":3,"title":"addWaiter","slug":"addwaiter","link":"#addwaiter","children":[]},{"level":3,"title":"Node节点结构","slug":"node节点结构","link":"#node节点结构","children":[]}]},{"level":2,"title":"AQS 组件总结","slug":"aqs-组件总结","link":"#aqs-组件总结","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[{"level":3,"title":"什么时候使用内部类","slug":"什么时候使用内部类","link":"#什么时候使用内部类","children":[]}]},{"level":2,"title":"系统推荐","slug":"系统推荐","link":"#系统推荐","children":[]}],"git":{"createdTime":1671976155000,"updatedTime":1735432863000,"contributors":[{"name":"rocky-peng","email":"rocky.peng@qq.com","commits":360},{"name":"rocky.peng","email":"rocky.peng@qq.com","commits":22}]},"readingTime":{"minutes":14.71,"words":4412},"filePathRelative":"software/java-basic/AQS源码解读.md","localizedDate":"2017年3月4日","excerpt":"<h2> 谈谈你对AQS的理解</h2>\\n<p>总的来说，个人认为AQS可以理解为一个排队系统，是一个CLH队列（clh的变体），是一个双向非循环队列。\\n这个队里有独占节点，也有共享节点，这两种节点在这个队列交叉排列。这些节点会争夺一个共享资源的使用权，\\nAQS则制定了一套模板方法来协调这些节点对资源的获取和释放。当把AQS的独占锁、共享锁的实现原理了解清楚后，\\n也能大致知道了sync关键字的背后的实现原理</p>\\n<p>AQS是很多同步器的基础，很多同步器都是在AQS的基础上实现的，比如ReentrantLock/Semaphore/CountDownLatch/CyclicBarrier/ReadWriteLock</p>","copyright":{},"autoDesc":true}');export{e as data};
