import{_ as l,$ as c,a0 as r,a1 as s,a2 as n,a3 as a,a4 as t,a5 as i,w as o}from"./framework-349591b1.js";const u={},d=i(`<p>笔记内容：CentOS7上安装并配置KVM，以及通过KVM安装CentOS系统 笔记日期：2018-03-07 28.5 Centos7上安装KVM 28.6 配置网卡 28.7 创建虚拟机安装CentOS7 28.8 虚拟机管理 Centos7上安装KVM 首先我们需要一台配置较高的CentOS7虚拟机，当然用物理机也可以，我这里用的是虚拟机，配置如下：</p><p>硬盘需要新增一个，其中的新硬盘用于在KVM里安装操作系统时需要用到，内存的大小最好有4个G，最低2个G，因为我这里物理机的内存有16G所以就给分了8G。具体的需要根据你物理机的配置进行分配，CPU的核心最少要给2个。 然后最好做一个快照，中途出现什么问题方便重置：</p><p>进入到系统后，关闭iptables或者firewalld，关闭selinux。并且检查cpu参数是否支持虚拟化：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># systemctl stop firewalld</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># systemctl stop iptables</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># systemctl disable firewalld</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># systemctl disable iptables</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># getenforce </span>
Disabled
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># grep -Ei &#39;vmx|svm&#39; /proc/cpuinfo</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果有过滤出vmx或svm关键字就代表支持虚拟化，vmx是Intel的CPU，svm是AMD的CPU。 然后格式化新磁盘，挂载到/kvm_data，当然这个路径可以自定义，我这里使用的是/kvm_data。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># fdisk -l |grep Disk</span>
Disk /dev/sdb: <span class="token number">53.7</span> GB, <span class="token number">53687091200</span> bytes, <span class="token number">104857600</span> sectors
Disk /dev/sda: <span class="token number">21.5</span> GB, <span class="token number">21474836480</span> bytes, <span class="token number">41943040</span> sectors
Disk label type: dos
Disk identifier: 0x000f0eb3
Disk /dev/mapper/centos-root: <span class="token number">19.8</span> GB, <span class="token number">19826475008</span> bytes, <span class="token number">38723584</span> sectors
Disk /dev/mapper/centos-swap: <span class="token number">1073</span> MB, <span class="token number">1073741824</span> bytes, <span class="token number">2097152</span> sectors
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkfs.ext4 /dev/sdb  # 会有询问，输入y即可</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># blkid /dev/sdb  # 检查是否已格式化</span>
/dev/sdb: <span class="token assign-left variable">UUID</span><span class="token operator">=</span><span class="token string">&quot;5a7cf162-f8f3-4d02-ad72-17bde010efc8&quot;</span> <span class="token assign-left variable">TYPE</span><span class="token operator">=</span><span class="token string">&quot;ext4&quot;</span> 
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mkdir /kvm_data  # 创建挂载目录</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># mount /dev/sdb /kvm_data  # 将新磁盘挂载到/kvm_data目录下</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># vim /etc/fstab  # 配置开机时挂载</span>
/dev/sdb        /kvm_data       ext4    defaults        <span class="token number">0</span> <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>最后就是安装kvm：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># yum install -y  virt-*  libvirt  bridge-utils qemu-img</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>配置网卡 安装完KVM之后，需要配置一下网卡，增加一个桥接网卡：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd /etc/sysconfig/network-scripts/</span>
<span class="token punctuation">[</span>root@localhost /etc/sysconfig/network-scripts<span class="token punctuation">]</span><span class="token comment"># cp ifcfg-eno16777728 ifcfg-br0  # 拷贝当前的网卡文件</span>
<span class="token punctuation">[</span>root@localhost /etc/sysconfig/network-scripts<span class="token punctuation">]</span><span class="token comment"># vim ifcfg-eno16777728  # 修改文件内容如下</span>
<span class="token assign-left variable">TYPE</span><span class="token operator">=</span>Ethernet
<span class="token assign-left variable">BOOTPROTO</span><span class="token operator">=</span>dhcp
<span class="token assign-left variable">DEFROUTE</span><span class="token operator">=</span>yes
<span class="token assign-left variable">PEERDNS</span><span class="token operator">=</span>yes
<span class="token assign-left variable">PEERROUTES</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV4_FAILURE_FATAL</span><span class="token operator">=</span>no
<span class="token assign-left variable">IPV6INIT</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV6_AUTOCONF</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV6_DEFROUTE</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV6_PEERDNS</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV6_PEERROUTES</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV6_FAILURE_FATAL</span><span class="token operator">=</span>no
<span class="token assign-left variable">NAME</span><span class="token operator">=</span>eno16777728
<span class="token assign-left variable">DEVICE</span><span class="token operator">=</span>eno16777728
<span class="token assign-left variable">ONBOOT</span><span class="token operator">=</span>yes
<span class="token assign-left variable">BRIDGE</span><span class="token operator">=</span>br0
<span class="token punctuation">[</span>root@localhost /etc/sysconfig/network-scripts<span class="token punctuation">]</span><span class="token comment"># vim ifcfg-br0  # 修改文件内容如下</span>
<span class="token assign-left variable">TYPE</span><span class="token operator">=</span>Bridge
<span class="token assign-left variable">BOOTPROTO</span><span class="token operator">=</span>dhcp
<span class="token assign-left variable">DEFROUTE</span><span class="token operator">=</span>yes
<span class="token assign-left variable">PEERDNS</span><span class="token operator">=</span>yes
<span class="token assign-left variable">PEERROUTES</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV4_FAILURE_FATAL</span><span class="token operator">=</span>no
<span class="token assign-left variable">IPV6INIT</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV6_AUTOCONF</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV6_DEFROUTE</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV6_PEERDNS</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV6_PEERROUTES</span><span class="token operator">=</span>yes
<span class="token assign-left variable">IPV6_FAILURE_FATAL</span><span class="token operator">=</span>no
<span class="token assign-left variable">NAME</span><span class="token operator">=</span>br0
<span class="token assign-left variable">DEVICE</span><span class="token operator">=</span>br0
<span class="token assign-left variable">ONBOOT</span><span class="token operator">=</span>yes
<span class="token punctuation">[</span>root@localhost /etc/sysconfig/network-scripts<span class="token punctuation">]</span><span class="token comment"># systemctl restart network  # 重启服务</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>重启完服务后，执行ifconfig命令可以看到此时eno16777728网卡的IP到br0网卡上了，这样我们的网卡就配置完成了：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost /etc/sysconfig/network-scripts<span class="token punctuation">]</span><span class="token comment"># ifconfig</span>
br0: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">416</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class="token operator">&gt;</span>  mtu <span class="token number">1500</span>
        inet <span class="token number">192.168</span>.77.130  netmask <span class="token number">255.255</span>.255.0  broadcast <span class="token number">192.168</span>.77.255
        inet6 fe80::20c:29ff:fef1:912c  prefixlen <span class="token number">64</span>  scopeid 0x2<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>link<span class="token operator">&gt;</span>
        ether 00:0c:29:f1:91:2c  txqueuelen <span class="token number">0</span>  <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>
        RX packets <span class="token number">51</span>  bytes <span class="token number">8341</span> <span class="token punctuation">(</span><span class="token number">8.1</span> KiB<span class="token punctuation">)</span>
        RX errors <span class="token number">0</span>  dropped <span class="token number">0</span>  overruns <span class="token number">0</span>  frame <span class="token number">0</span>
        TX packets <span class="token number">27</span>  bytes <span class="token number">2710</span> <span class="token punctuation">(</span><span class="token number">2.6</span> KiB<span class="token punctuation">)</span>
        TX errors <span class="token number">0</span>  dropped <span class="token number">0</span> overruns <span class="token number">0</span>  carrier <span class="token number">0</span>  collisions <span class="token number">0</span>

eno16777728: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">416</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class="token operator">&gt;</span>  mtu <span class="token number">1500</span>
        ether 00:0c:29:f1:91:2c  txqueuelen <span class="token number">1000</span>  <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>
        RX packets <span class="token number">147615</span>  bytes <span class="token number">168580073</span> <span class="token punctuation">(</span><span class="token number">160.7</span> MiB<span class="token punctuation">)</span>
        RX errors <span class="token number">0</span>  dropped <span class="token number">8</span>  overruns <span class="token number">0</span>  frame <span class="token number">0</span>
        TX packets <span class="token number">45008</span>  bytes <span class="token number">3866579</span> <span class="token punctuation">(</span><span class="token number">3.6</span> MiB<span class="token punctuation">)</span>
        TX errors <span class="token number">0</span>  dropped <span class="token number">0</span> overruns <span class="token number">0</span>  carrier <span class="token number">0</span>  collisions <span class="token number">0</span>

lo: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">7</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,LOOPBACK,RUNNING<span class="token operator">&gt;</span>  mtu <span class="token number">65536</span>
        inet <span class="token number">127.0</span>.0.1  netmask <span class="token number">255.0</span>.0.0
        inet6 ::1  prefixlen <span class="token number">128</span>  scopeid 0x1<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>host<span class="token operator">&gt;</span>
        loop  txqueuelen <span class="token number">0</span>  <span class="token punctuation">(</span>Local Loopback<span class="token punctuation">)</span>
        RX packets <span class="token number">2459</span>  bytes <span class="token number">1125227</span> <span class="token punctuation">(</span><span class="token number">1.0</span> MiB<span class="token punctuation">)</span>
        RX errors <span class="token number">0</span>  dropped <span class="token number">0</span>  overruns <span class="token number">0</span>  frame <span class="token number">0</span>
        TX packets <span class="token number">2459</span>  bytes <span class="token number">1125227</span> <span class="token punctuation">(</span><span class="token number">1.0</span> MiB<span class="token punctuation">)</span>
        TX errors <span class="token number">0</span>  dropped <span class="token number">0</span> overruns <span class="token number">0</span>  carrier <span class="token number">0</span>  collisions <span class="token number">0</span>

<span class="token punctuation">[</span>root@localhost /etc/sysconfig/network-scripts<span class="token punctuation">]</span><span class="token comment"># </span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>接下来我们就可以启动KVM的服务了：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># lsmod |grep kvm  # 检查KVM模块是否加载</span>
kvm_intel             <span class="token number">162153</span>  <span class="token number">0</span> 
kvm                   <span class="token number">525259</span>  <span class="token number">1</span> kvm_intel
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># systemctl start libvirtd  # 启动libvirtd服务</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ps aux |grep libvirtd  # 检查服务进程</span>
root       <span class="token number">5744</span>  <span class="token number">2.2</span>  <span class="token number">0.1</span> <span class="token number">614840</span> <span class="token number">14120</span> ?        Ssl  <span class="token number">23</span>:02   <span class="token number">0</span>:00 /usr/sbin/libvirtd
root       <span class="token number">5872</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span> <span class="token number">112664</span>   <span class="token number">964</span> pts/1    R+   <span class="token number">23</span>:02   <span class="token number">0</span>:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto libvirtd
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># brctl show  # 可以看到两个网卡</span>
bridge name bridge <span class="token function">id</span>       STP enabled interfaces
br0     <span class="token number">8000</span>.000c29f1912c   no      eno16777728  <span class="token comment"># 我们配置的桥接网卡</span>
virbr0      <span class="token number">8000</span>.525400240b50   <span class="token function">yes</span>     virbr0-nic  <span class="token comment"># NAT模式的网卡</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># </span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>创建虚拟机安装CentOS7 将服务成功启动后，我们就可以使用KVM安装虚拟机了，首先需要准备一个操作系统的镜像文件，我这里用的是CentOS7的镜像文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd /tmp/</span>
<span class="token punctuation">[</span>root@localhost /tmp<span class="token punctuation">]</span><span class="token comment"># ls |grep CentOS</span>
CentOS-7-x86_64-DVD-1511.iso
<span class="token punctuation">[</span>root@localhost /tmp<span class="token punctuation">]</span><span class="token comment"># </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>使用命令行安装这个CentOS7镜像文件：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virt-install --name=study01 --memory=512,maxmemory=1024 --vcpus=1,maxvcpus=2 --os-type=linux --os-variant=rhel7 --location=/tmp/CentOS-7-x86_64-DVD-1511.iso --disk path=/kvm_data/study01.img,size=10 --bridge=br0 --graphics=none --console=pty,target_type=serial  --extra-args=&quot;console=tty0 console=ttyS0&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令说明： --name 指定虚拟机的名称 --memory 指定分配给虚拟机的内存资源大小 maxmemory 指定可调节的最大内存资源大小，因为KVM支持热调整虚拟机的资源 --vcpus 指定分配给虚拟机的CPU核心数量 maxvcpus 指定可调节的最大CPU核心数量 --os-type 指定虚拟机安装的操作系统类型 --os-variant 指定系统的发行版本 --location 指定ISO镜像文件所在的路径，支持使用网络资源路径，也就是说可以使用URL --disk path 指定虚拟硬盘所存放的路径及名称，size 则是指定该硬盘的可用大小，单位是G --bridge 指定使用哪一个桥接网卡，也就是说使用桥接的网络模式 --graphics 指定是否开启图形 --console 定义终端的属性，target_type 则是定义终端的类型 --extra-args 定义终端额外的参数 开始安装后，正常的情况下会进入到这样一个界面：</p><p>这是让你配置语言、时区、安装源、网络、密码等信息，就和我们在VMware里安装CentOS虚拟机是一样的，只不过这个是命令行形式，而VMware里是图形界面罢了。 首先设置语言，按数字1，回车进入以下界面：</p><p>例如我要选Chinese就按数字68并回车即可，回车之后会让你选择是中文简体还是繁体，也是按下相应的数字并回车即可：</p><p>配置完成之后又会再次回到配置界面，这次我们来设置时区：</p><p>设置系统安装盘：</p><p>设置root用户的密码：</p><p>最后开始安装系统：</p><p>安装完成之后就会停止在以下这个界面，按一下回车即可，这时就会重启安装完的系统：</p><p>虚拟机管理 重启成功之后就会入到登录界面，可以看到我这里是成功登录的：</p><p>这时我们是处于一个虚拟终端的，因为安装了虚拟机，如果要退出来的话，应该说是切出来，按 Ctrl + ] 即可。 切出虚拟机后，可以看到/kvm_data/目录下多了一个虚拟机的磁盘目录：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ls /kvm_data/</span>
lost+found  study01.img
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># </span>
查看KVM进程：
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ps axu |grep kvm</span>
root        <span class="token number">880</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>      <span class="token number">0</span>     <span class="token number">0</span> ?        S<span class="token operator">&lt;</span>   Mar07   <span class="token number">0</span>:00 <span class="token punctuation">[</span>kvm-irqfd-clean<span class="token punctuation">]</span>
qemu       <span class="token number">6528</span>  <span class="token number">6.9</span>  <span class="token number">9.1</span> <span class="token number">1568008</span> <span class="token number">734216</span> ?      Sl   00:15   <span class="token number">0</span>:40 /usr/libexec/qemu-kvm <span class="token parameter variable">-name</span> study01 <span class="token parameter variable">-S</span> <span class="token parameter variable">-machine</span> pc-i440fx-rhel7.0.0,accel<span class="token operator">=</span>kvm,usb<span class="token operator">=</span>off,dump-guest-core<span class="token operator">=</span>off <span class="token parameter variable">-cpu</span> Haswell,-hle,-rtm <span class="token parameter variable">-m</span> <span class="token number">1024</span> <span class="token parameter variable">-realtime</span> <span class="token assign-left variable">mlock</span><span class="token operator">=</span>off <span class="token parameter variable">-smp</span> <span class="token number">1</span>,maxcpus<span class="token operator">=</span><span class="token number">2</span>,sockets<span class="token operator">=</span><span class="token number">2</span>,cores<span class="token operator">=</span><span class="token number">1</span>,threads<span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-uuid</span> eeedcd47-1546-4e5f-ab2a-f62deb0838cf <span class="token parameter variable">-display</span> none -no-user-config <span class="token parameter variable">-nodefaults</span> <span class="token parameter variable">-chardev</span> socket,id<span class="token operator">=</span>charmonitor,path<span class="token operator">=</span>/var/lib/libvirt/qemu/domain-2-study01/monitor.sock,server,nowait <span class="token parameter variable">-mon</span> <span class="token assign-left variable">chardev</span><span class="token operator">=</span>charmonitor,id<span class="token operator">=</span>monitor,mode<span class="token operator">=</span>control <span class="token parameter variable">-rtc</span> <span class="token assign-left variable">base</span><span class="token operator">=</span>utc,driftfix<span class="token operator">=</span>slew <span class="token parameter variable">-global</span> kvm-pit.lost_tick_policy<span class="token operator">=</span>delay -no-hpet -no-shutdown <span class="token parameter variable">-global</span> <span class="token assign-left variable">PIIX4_PM.disable_s3</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-global</span> <span class="token assign-left variable">PIIX4_PM.disable_s4</span><span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-boot</span> <span class="token assign-left variable">strict</span><span class="token operator">=</span>on <span class="token parameter variable">-device</span> ich9-usb-ehci1,id<span class="token operator">=</span>usb,bus<span class="token operator">=</span>pci.0,addr<span class="token operator">=</span>0x4.0x7 <span class="token parameter variable">-device</span> ich9-usb-uhci1,masterbus<span class="token operator">=</span>usb.0,firstport<span class="token operator">=</span><span class="token number">0</span>,bus<span class="token operator">=</span>pci.0,multifunction<span class="token operator">=</span>on,addr<span class="token operator">=</span>0x4 <span class="token parameter variable">-device</span> ich9-usb-uhci2,masterbus<span class="token operator">=</span>usb.0,firstport<span class="token operator">=</span><span class="token number">2</span>,bus<span class="token operator">=</span>pci.0,addr<span class="token operator">=</span>0x4.0x1 <span class="token parameter variable">-device</span> ich9-usb-uhci3,masterbus<span class="token operator">=</span>usb.0,firstport<span class="token operator">=</span><span class="token number">4</span>,bus<span class="token operator">=</span>pci.0,addr<span class="token operator">=</span>0x4.0x2 <span class="token parameter variable">-device</span> virtio-serial-pci,id<span class="token operator">=</span>virtio-serial0,bus<span class="token operator">=</span>pci.0,addr<span class="token operator">=</span>0x5 <span class="token parameter variable">-drive</span> <span class="token assign-left variable">file</span><span class="token operator">=</span>/kvm_data/study01.img,format<span class="token operator">=</span>qcow2,if<span class="token operator">=</span>none,id<span class="token operator">=</span>drive-virtio-disk0 <span class="token parameter variable">-device</span> virtio-blk-pci,scsi<span class="token operator">=</span>off,bus<span class="token operator">=</span>pci.0,addr<span class="token operator">=</span>0x6,drive<span class="token operator">=</span>drive-virtio-disk0,id<span class="token operator">=</span>virtio-disk0,bootindex<span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-drive</span> <span class="token assign-left variable">if</span><span class="token operator">=</span>none,id<span class="token operator">=</span>drive-ide0-0-0,readonly<span class="token operator">=</span>on <span class="token parameter variable">-device</span> ide-cd,bus<span class="token operator">=</span>ide.0,unit<span class="token operator">=</span><span class="token number">0</span>,drive<span class="token operator">=</span>drive-ide0-0-0,id<span class="token operator">=</span>ide0-0-0 <span class="token parameter variable">-netdev</span> tap,fd<span class="token operator">=</span><span class="token number">25</span>,id<span class="token operator">=</span>hostnet0,vhost<span class="token operator">=</span>on,vhostfd<span class="token operator">=</span><span class="token number">27</span> <span class="token parameter variable">-device</span> virtio-net-pci,netdev<span class="token operator">=</span>hostnet0,id<span class="token operator">=</span>net0,mac<span class="token operator">=</span><span class="token number">52</span>:54:00:65:d3:3f,bus<span class="token operator">=</span>pci.0,addr<span class="token operator">=</span>0x3 <span class="token parameter variable">-chardev</span> pty,id<span class="token operator">=</span>charserial0 <span class="token parameter variable">-device</span> isa-serial,chardev<span class="token operator">=</span>charserial0,id<span class="token operator">=</span>serial0 <span class="token parameter variable">-chardev</span> socket,id<span class="token operator">=</span>charchannel0,path<span class="token operator">=</span>/var/lib/libvirt/qemu/channel/target/domain-2-study01/org.qemu.guest_agent.0,server,nowait <span class="token parameter variable">-device</span> virtserialport,bus<span class="token operator">=</span>virtio-serial0.0,nr<span class="token operator">=</span><span class="token number">1</span>,chardev<span class="token operator">=</span>charchannel0,id<span class="token operator">=</span>channel0,name<span class="token operator">=</span>org.qemu.guest_agent.0 <span class="token parameter variable">-device</span> usb-tablet,id<span class="token operator">=</span>input0,bus<span class="token operator">=</span>usb.0,port<span class="token operator">=</span><span class="token number">1</span> <span class="token parameter variable">-device</span> virtio-balloon-pci,id<span class="token operator">=</span>balloon0,bus<span class="token operator">=</span>pci.0,addr<span class="token operator">=</span>0x7 <span class="token parameter variable">-msg</span> <span class="token assign-left variable">timestamp</span><span class="token operator">=</span>on
root       <span class="token number">6534</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span>      <span class="token number">0</span>     <span class="token number">0</span> ?        S    00:15   <span class="token number">0</span>:00 <span class="token punctuation">[</span>kvm-pit/6528<span class="token punctuation">]</span>
root       <span class="token number">6687</span>  <span class="token number">0.0</span>  <span class="token number">0.0</span> <span class="token number">112668</span>   <span class="token number">960</span> pts/1    S+   00:25   <span class="token number">0</span>:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto kvm
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># </span>
使用以下命令可以列出当前有多少个虚拟机，以及其状态：
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh list</span>
 Id    Name                           State
----------------------------------------------------
 <span class="token number">2</span>     study01                        running

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># </span>
以上这个命令无法列出关机状态的虚拟机，需要列出关机状态的虚拟机需要加多一个--all参数：
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh list --all</span>
 Id    Name                           State
----------------------------------------------------
 <span class="token number">2</span>     study01                        running

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># </span>
查看虚拟机配置文件：
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ls /etc/libvirt/qemu/</span>
networks  study01.xml
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ls /etc/libvirt/qemu/networks/</span>
autostart  default.xml
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ls /etc/libvirt/qemu/networks/autostart/</span>
default.xml
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># </span>
以下介绍一下管理虚拟机的一些常用命令：
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh console study01  # 进入指定的虚拟机，进入的时候还需要按一下回车</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh start study01  # 启动虚拟机</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh shutdown study01  # 关闭虚拟机</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh destroy study01  # 强制停止虚拟机</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh undefine study01  # 彻底销毁虚拟机，会删除虚拟机配置文件，但不会删除虚拟磁盘</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh autostart study01  # 设置宿主机开机时该虚拟机也开机</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh autostart --disable study01  # 解除开机启动</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh suspend study01 # 挂起虚拟机</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh resume study01 # 恢复挂起的虚拟机</span>
进入到刚刚安装的虚拟机里配置一下IP：
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># virsh console study01</span>
Connected to domain study01
Escape character is ^<span class="token punctuation">]</span>

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ip addr  # 此时还没有能联网的IP</span>
<span class="token number">1</span>: lo: <span class="token operator">&lt;</span>LOOPBACK,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">65536</span> qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet <span class="token number">127.0</span>.0.1/8 scope <span class="token function">host</span> lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope <span class="token function">host</span> 
       valid_lft forever preferred_lft forever
<span class="token number">2</span>: eth0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1500</span> qdisc pfifo_fast state UP qlen <span class="token number">1000</span>
    link/ether <span class="token number">52</span>:54:00:65:d3:3f brd ff:ff:ff:ff:ff:ff
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># dhclient eth0  # 获取IP地址</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ip addr  # 此时可以看到已经有IP地址了</span>
<span class="token number">1</span>: lo: <span class="token operator">&lt;</span>LOOPBACK,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">65536</span> qdisc noqueue state UNKNOWN 
    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet <span class="token number">127.0</span>.0.1/8 scope <span class="token function">host</span> lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope <span class="token function">host</span> 
       valid_lft forever preferred_lft forever
<span class="token number">2</span>: eth0: <span class="token operator">&lt;</span>BROADCAST,MULTICAST,UP,LOWER_UP<span class="token operator">&gt;</span> mtu <span class="token number">1500</span> qdisc pfifo_fast state UP qlen <span class="token number">1000</span>
    link/ether <span class="token number">52</span>:54:00:65:d3:3f brd ff:ff:ff:ff:ff:ff
    inet <span class="token number">192.168</span>.77.140/24 brd <span class="token number">192.168</span>.77.255 scope global dynamic eth0
       valid_lft 1793sec preferred_lft 1793sec
    inet6 fe80::5054:ff:fe65:d33f/64 scope <span class="token function">link</span> 
       valid_lft forever preferred_lft forever
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># yum install -y net-tools  # 获取到IP能联网后安装网络管理工具</span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># ifconfig  # 安装完之后就可以使用ifconfig命令了</span>
eth0: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">416</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,BROADCAST,RUNNING,MULTICAST<span class="token operator">&gt;</span>  mtu <span class="token number">1500</span>
        inet <span class="token number">192.168</span>.77.140  netmask <span class="token number">255.255</span>.255.0  broadcast <span class="token number">192.168</span>.77.255
        inet6 fe80::5054:ff:fe65:d33f  prefixlen <span class="token number">64</span>  scopeid 0x2<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>link<span class="token operator">&gt;</span>
        ether <span class="token number">52</span>:54:00:65:d3:3f  txqueuelen <span class="token number">1000</span>  <span class="token punctuation">(</span>Ethernet<span class="token punctuation">)</span>
        RX packets <span class="token number">4404</span>  bytes <span class="token number">13614102</span> <span class="token punctuation">(</span><span class="token number">12.9</span> MiB<span class="token punctuation">)</span>
        RX errors <span class="token number">0</span>  dropped <span class="token number">0</span>  overruns <span class="token number">0</span>  frame <span class="token number">0</span>
        TX packets <span class="token number">2480</span>  bytes <span class="token number">139445</span> <span class="token punctuation">(</span><span class="token number">136.1</span> KiB<span class="token punctuation">)</span>
        TX errors <span class="token number">0</span>  dropped <span class="token number">0</span> overruns <span class="token number">0</span>  carrier <span class="token number">0</span>  collisions <span class="token number">0</span>

lo: <span class="token assign-left variable">flags</span><span class="token operator">=</span><span class="token number">7</span><span class="token operator"><span class="token file-descriptor important">3</span>&lt;</span>UP,LOOPBACK,RUNNING<span class="token operator">&gt;</span>  mtu <span class="token number">65536</span>
        inet <span class="token number">127.0</span>.0.1  netmask <span class="token number">255.0</span>.0.0
        inet6 ::1  prefixlen <span class="token number">128</span>  scopeid 0x1<span class="token operator"><span class="token file-descriptor important">0</span>&lt;</span>host<span class="token operator">&gt;</span>
        loop  txqueuelen <span class="token number">0</span>  <span class="token punctuation">(</span>Local Loopback<span class="token punctuation">)</span>
        RX packets <span class="token number">0</span>  bytes <span class="token number">0</span> <span class="token punctuation">(</span><span class="token number">0.0</span> B<span class="token punctuation">)</span>
        RX errors <span class="token number">0</span>  dropped <span class="token number">0</span>  overruns <span class="token number">0</span>  frame <span class="token number">0</span>
        TX packets <span class="token number">0</span>  bytes <span class="token number">0</span> <span class="token punctuation">(</span><span class="token number">0.0</span> B<span class="token punctuation">)</span>
        TX errors <span class="token number">0</span>  dropped <span class="token number">0</span> overruns <span class="token number">0</span>  carrier <span class="token number">0</span>  collisions <span class="token number">0</span>

<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># </span>
<span class="token punctuation">[</span>root@localhost ~<span class="token punctuation">]</span><span class="token comment"># cd /etc/sysconfig/network-scripts/</span>
<span class="token punctuation">[</span>root@localhost network-scripts<span class="token punctuation">]</span><span class="token comment"># vi ifcfg-eth0 # 修改ONBOOT的值为yes</span>
<span class="token assign-left variable">ONBOOT</span><span class="token operator">=</span>yes
<span class="token punctuation">[</span>root@localhost network-scripts<span class="token punctuation">]</span><span class="token comment"># systemctl restart network</span>

<span class="token comment"># 重启网卡服务  </span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>以上我们就完成了虚拟机的安装以及配置虚拟机的IP，这时就可以像往常一样使用这台虚拟机了。</p><p>克隆命令：virt-clone -o basic（原始虚拟机名） -n application（新虚拟机名） -f /kvm_data/application.img（新虚拟机地址）</p>`,31),k={href:"https://blog.51cto.com/zero01/2083896",target:"_blank",rel:"noopener noreferrer"},m={href:"https://blog.csdn.net/wanglei_storage/article/details/51106096",target:"_blank",rel:"noopener noreferrer"},v=s("br",null,null,-1),b=s("h2",{id:"系统推荐",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#系统推荐","aria-hidden":"true"},"#"),n(" 系统推荐")],-1),f=s("p",null,[s("br"),s("br"),s("br"),s("br"),s("br"),s("br")],-1),h=s("hr",null,null,-1),g=s("hr",null,null,-1),_=s("ul",null,[s("li",null,[s("strong",null,"随机毒鸡汤"),n("：人生本来就苦短，你却还想着走捷径。 "),s("br"),s("br"),s("img",{src:"https://images.pexels.com/photos/32090079/pexels-photo-32090079.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Loudspeakers and solar panel in a rural setting with autumn leaves and warm sunlight.",loading:"lazy"})])],-1);function E(y,x){const p=o("ExternalLinkIcon"),e=o("RouterLink");return c(),r("div",null,[d,s("p",null,[s("a",k,[n("https://blog.51cto.com/zero01/2083896"),a(p)]),s("a",m,[n("https://blog.csdn.net/wanglei_storage/article/details/51106096"),a(p)])]),v,b,s("ul",null,[s("li",null,[a(e,{to:"/software/unclassified/Btrace%E5%85%A5%E9%97%A8.html"},{default:t(()=>[n("Btrace入门")]),_:1})]),s("li",null,[a(e,{to:"/software/middleware/es/ES6.2.3(3%E8%8A%82%E7%82%B9)%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%88%B0ES7.4.1(5%E8%8A%82%E7%82%B9).html"},{default:t(()=>[n("ES6.2.3(3节点)数据迁移到ES7.4.1(5节点)")]),_:1})]),s("li",null,[a(e,{to:"/other/CloudFlare%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AF%81%E4%B9%A6%E7%9A%84%E4%BD%BF%E7%94%A8.html"},{default:t(()=>[n("CloudFlare 客户端证书的使用")]),_:1})]),s("li",null,[a(e,{to:"/other/PostgreSQL%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD.html"},{default:t(()=>[n("PostgreSQL定时备份")]),_:1})]),s("li",null,[a(e,{to:"/other/K8S%20%E6%97%A0%E6%84%9F%E5%8F%91%E5%B8%83.html"},{default:t(()=>[n("K8S 无感发布")]),_:1})]),s("li",null,[a(e,{to:"/other/Cornell%20Notes%20System.html"},{default:t(()=>[n("Cornell Notes System")]),_:1})]),s("li",null,[a(e,{to:"/software/docker/Centos%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85Docker.html"},{default:t(()=>[n("Centos离线安装Docker")]),_:1})]),s("li",null,[a(e,{to:"/software/middleware/mq/RocketMQ.html"},{default:t(()=>[n("RocketMQ")]),_:1})]),s("li",null,[a(e,{to:"/other/MySQL%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%88%B0PGSQL.html"},{default:t(()=>[n("MySQL数据迁移到PGSQL")]),_:1})]),s("li",null,[a(e,{to:"/other/GitHub%20Workflow%E7%AA%81%E7%84%B6%E6%8A%A5%E9%94%99.html"},{default:t(()=>[n("GitHub Workflow突然报错")]),_:1})]),s("li",null,[a(e,{to:"/other/K8S%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"},{default:t(()=>[n("K8S常用命令")]),_:1})]),s("li",null,[a(e,{to:"/other/Hbase%20%E6%80%BB%E8%A7%88.html"},{default:t(()=>[n("Hbase 总览")]),_:1})])]),f,h,g,_])}const A=l(u,[["render",E],["__file","KVM 虚拟机安装.html.vue"]]);export{A as default};
