import{_ as c,$ as i,a0 as p,a1 as e,a2 as n,a3 as s,a4 as l,a5 as o,w as r}from"./framework-8c4427da.js";const d={},u=o('<h2 id="ca对比" tabindex="-1"><a class="header-anchor" href="#ca对比" aria-hidden="true">#</a> CA对比</h2><p>以下是主流免费 SSL 证书颁发机构（CA）的证书有效期及关键特性对比：</p><p><strong>1. Let&#39;s Encrypt</strong> • 证书有效期：90 天</p><ul><li>自动续期：支持（通过 ACME 协议，如 <code>acme.sh</code>）</li><li>通配符证书：支持（需 DNS 验证）</li><li>特点：</li></ul><p>完全免费，开源社区维护，支持多域名（SAN），全球信任度高。</p>',5),h={href:"https://letsencrypt.org/",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,[e("strong",null,"2. ZeroSSL"),n(" • 证书有效期：90 天（免费版）")],-1),_=e("ul",null,[e("li",null,[n("自动续期：支持（需使用 ACME 工具，如 "),e("code",null,"acme.sh"),n("）")]),e("li",null,"通配符证书：支持（付费版提供，免费版仅单域名）"),e("li",null,"特点：")],-1),b=e("p",null,"免费版支持单域名，需每 90 天手动续期（或通过 ACME 自动化）。",-1),k={href:"https://zerossl.com/",target:"_blank",rel:"noopener noreferrer"},g=e("p",null,[e("strong",null,"3. BuyPass"),n(" • 证书有效期：180 天")],-1),v=e("ul",null,[e("li",null,"自动续期：支持（通过 ACME 协议）"),e("li",null,"通配符证书：不支持"),e("li",null,"特点：")],-1),E=e("p",null,"有效期较长，但仅支持非通配符域名，需通过 ACME 客户端管理。",-1),f={href:"https://www.buypass.com/ssl",target:"_blank",rel:"noopener noreferrer"},A={href:"http://ssl.com/",target:"_blank",rel:"noopener noreferrer"},x=e("ul",null,[e("li",null,"自动续期：部分支持（需手动申请或付费）"),e("li",null,"通配符证书：不支持（免费版仅单域名）"),e("li",null,"特点：")],-1),S=e("p",null,"免费证书有效期短，适合短期测试，商业用途需付费升级。",-1),y={href:"https://www.ssl.com/",target:"_blank",rel:"noopener noreferrer"},C=e("p",null,[e("strong",null,"5. Google Public CA"),n(" • 证书有效期：90 天")],-1),B=e("ul",null,[e("li",null,"自动续期：支持（通过 Google Cloud 服务集成）"),e("li",null,"通配符证书：支持（需 DNS 验证）"),e("li",null,"特点：")],-1),L=e("p",null,"免费，仅限 Google Cloud 用户使用，与 GCP 服务深度集成。",-1),D={href:"https://cloud.google.com/certificate-manager",target:"_blank",rel:"noopener noreferrer"},P=e("p",null,[e("strong",null,"对比总结")],-1),N=e("thead",null,[e("tr",null,[e("th",null,"CA"),e("th",null,"免费有效期"),e("th",null,"自动续期"),e("th",null,"通配符支持"),e("th",null,"适用场景")])],-1),F=e("tr",null,[e("td",null,"Let's Encrypt"),e("td",null,"90 天"),e("td",null,"✔️"),e("td",null,"✔️"),e("td",null,"通用，高信任度，推荐长期使用")],-1),I=e("tr",null,[e("td",null,"ZeroSSL"),e("td",null,"90 天"),e("td",null,"✔️"),e("td",null,"❌（免费版）"),e("td",null,"单域名短期需求")],-1),T=e("tr",null,[e("td",null,"BuyPass"),e("td",null,"180 天"),e("td",null,"✔️"),e("td",null,"❌"),e("td",null,"非通配符域名，需较少维护")],-1),w={href:"http://ssl.com/",target:"_blank",rel:"noopener noreferrer"},j=e("td",null,"30 天",-1),q=e("td",null,"❌",-1),M=e("td",null,"❌",-1),R=e("td",null,"临时测试用途",-1),G=e("tr",null,[e("td",null,"Google CA"),e("td",null,"90 天"),e("td",null,"✔️"),e("td",null,"✔️"),e("td",null,"Google Cloud 用户专用")],-1),Z=o('<p><strong>注意事项</strong></p><ol><li>信任兼容性：所有 CA 的根证书需被客户端（如浏览器、移动设备）信任，建议优先选择 Let&#39;s Encrypt 或 Google CA。</li><li>速率限制：Let&#39;s Encrypt 和 ZeroSSL 对域名签发频率有限制（如每周 50 次）。</li><li>自动化工具：使用 <code>acme.sh</code> 或 <code>Certbot</code> 可简化证书续期流程（支持 Let&#39;s Encrypt、ZeroSSL、BuyPass 等）。</li></ol><h2 id="自动化工具" tabindex="-1"><a class="header-anchor" href="#自动化工具" aria-hidden="true">#</a> 自动化工具</h2>',3),O={href:"http://acme.sh/",target:"_blank",rel:"noopener noreferrer"},K=e("p",null,[e("strong",null,"核心功能对比")],-1),U=e("th",null,"特性",-1),Y=e("th",null,"Certbot",-1),V={href:"http://acme.sh/",target:"_blank",rel:"noopener noreferrer"},z=e("tbody",null,[e("tr",null,[e("td",null,"开发维护"),e("td",null,"由 EFF 和 Let's Encrypt 官方维护"),e("td",null,"第三方开源社区维护")]),e("tr",null,[e("td",null,"依赖环境"),e("td",null,"需 Python 环境"),e("td",null,"纯 Shell 脚本（无额外依赖）")]),e("tr",null,[e("td",null,"默认 CA"),e("td",null,"Let's Encrypt"),e("td",null,"ZeroSSL（可切换为 Let's Encrypt）")]),e("tr",null,[e("td",null,"通配符证书支持"),e("td",null,"✔️（需 DNS 验证）"),e("td",null,"✔️（支持 DNS 验证）")]),e("tr",null,[e("td",null,"多 CA 支持"),e("td",null,"❌（仅 Let's Encrypt）"),e("td",null,"✔️（Let's Encrypt、ZeroSSL、BuyPass 等）")]),e("tr",null,[e("td",null,"DNS 提供商集成"),e("td",null,"有限（需插件支持）"),e("td",null,"广泛（内置 100+ DNS API 支持）")]),e("tr",null,[e("td",null,"自动化续期"),e("td",null,"✔️（需配置 cron）"),e("td",null,"✔️（安装时自动配置 cron）")]),e("tr",null,[e("td",null,"证书安装灵活性"),e("td",null,"需手动配置路径或插件"),e("td",null,[n("支持自定义路径和命令（"),e("code",null,"--install-cert"),n("）")])]),e("tr",null,[e("td",null,"权限管理"),e("td",null,"需 root 权限操作 Web 服务器"),e("td",null,"可非 root 用户运行")]),e("tr",null,[e("td",null,"轻量化"),e("td",null,"较高（依赖 Python 包）"),e("td",null,"极低（单文件脚本）")])],-1),Q=e("h2",{id:"acme-sh实战",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#acme-sh实战","aria-hidden":"true"},"#"),n(" acme.sh实战")],-1),H={href:"http://xn--acme-kf5fx3ao66ap35bzkbmy1coi0e.sh",target:"_blank",rel:"noopener noreferrer"},J=o(`<h3 id="安装" tabindex="-1"><a class="header-anchor" href="#安装" aria-hidden="true">#</a> 安装</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 通过 curl 安装</span>
<span class="token function">curl</span> <span class="token operator">&lt;</span>https://get.acme.sh<span class="token operator">&gt;</span> <span class="token operator">|</span> <span class="token function">sh</span>

<span class="token comment"># 或通过 git 克隆</span>
<span class="token function">git</span> clone <span class="token operator">&lt;</span>https://github.com/acmesh-official/acme.sh.git<span class="token operator">&gt;</span>
<span class="token builtin class-name">cd</span> acme.sh
./acme.sh <span class="token parameter variable">--install</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>安装后，脚本会自动添加到 <code>crontab</code> 实现证书自动续期。</p><h3 id="切换ca为let-s-encrypt" tabindex="-1"><a class="header-anchor" href="#切换ca为let-s-encrypt" aria-hidden="true">#</a> 切换CA为Let&#39;s Encrypt</h3><p>acme.sh默认采用的CA是ZeroSSL</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>acme<span class="token punctuation">.</span>sh <span class="token operator">--</span>set<span class="token operator">-</span><span class="token keyword">default</span><span class="token operator">-</span>ca <span class="token operator">--</span>server letsencrypt
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="配置-dns-api-密钥" tabindex="-1"><a class="header-anchor" href="#配置-dns-api-密钥" aria-hidden="true">#</a> 配置 DNS API 密钥</h3><ol><li>Cloudflare 获取 API Token：</li><li>登录 Cloudflare 控制台。</li><li>进入 My Profile &gt; API Tokens。</li><li>创建 Token，权限至少包含 <code>Zone:Zone:Read</code> 和 <code>Zone:DNS:Edit</code>。</li><li>保存生成的 Token。</li></ol><p>设置环境变量：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">CF_Token</span><span class="token operator">=</span><span class="token string">&quot;YOUR_API_TOKEN&quot;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">CF_Account_ID</span><span class="token operator">=</span><span class="token string">&quot;YOUR_CLOUDFLARE_ACCOUNT_ID&quot;</span>  <span class="token comment"># 可选，某些情况下需要</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>阿里云 DNS (Aliyun DNS) 获取 AccessKey：</li><li>登录阿里云控制台。</li><li>进入 RAM 访问控制 &gt; 用户管理，创建子账号并授予 <code>AliyunDNSFullAccess</code> 权限。</li><li>保存子账号的 <code>AccessKey ID</code> 和 <code>AccessKey Secret</code>。</li></ol><p>设置环境变量：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">ALI_Key</span><span class="token operator">=</span><span class="token string">&quot;YOUR_ALIYUN_ACCESSKEY_ID&quot;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">ALI_Secret</span><span class="token operator">=</span><span class="token string">&quot;YOUR_ALIYUN_ACCESSKEY_SECRET&quot;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="签发证书" tabindex="-1"><a class="header-anchor" href="#签发证书" aria-hidden="true">#</a> 签发证书</h3><ol><li>使用 Cloudflare DNS 挑战</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>acme.sh <span class="token parameter variable">--issue</span> <span class="token parameter variable">--dns</span> dns_cf <span class="token parameter variable">-d</span> example.com <span class="token parameter variable">-d</span> *.example.com
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ol><li>使用阿里云 DNS 挑战</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>acme.sh <span class="token parameter variable">--issue</span> <span class="token parameter variable">--dns</span> dns_ali <span class="token parameter variable">-d</span> example.com <span class="token parameter variable">-d</span> *.example.com

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>参数说明：</li><li><code>-dns dns_cf</code> 或 <code>-dns dns_ali</code>：指定 DNS 提供商。</li><li><code>d</code>：指定域名，支持通配符证书（<code>.example.com</code>）。</li></ul><h3 id="安装证书" tabindex="-1"><a class="header-anchor" href="#安装证书" aria-hidden="true">#</a> 安装证书</h3><p>证书默认保存在 <code>~/.acme.sh/example.com/</code> 目录下，生成的证书文件类似如下图所示：</p><figure><img src="https://cdn.justdopay.top/notion/md5-fe514445de5f38f85b568b40e7e51730.png" alt="image.png" tabindex="0" loading="lazy"><figcaption>image.png</figcaption></figure><p>这里简单介绍下nginx的配置，acme.sh生成的证书文件虽然后缀是cer，但格式是pem格式，所以nginx可以直接用，如下：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code>    #ssl_certificate    <span class="token operator">/</span>etc<span class="token operator">/</span>letsencrypt<span class="token operator">/</span>live<span class="token operator">/</span>xxx<span class="token punctuation">.</span>com<span class="token operator">/</span>fullchain<span class="token punctuation">.</span>pem<span class="token punctuation">;</span>
    #ssl_certificate_key    <span class="token operator">/</span>etc<span class="token operator">/</span>letsencrypt<span class="token operator">/</span>live<span class="token operator">/</span>xxx<span class="token punctuation">.</span>com<span class="token operator">/</span>privkey<span class="token punctuation">.</span>pem<span class="token punctuation">;</span>

    ssl_certificate    <span class="token operator">/</span>root<span class="token operator">/</span><span class="token punctuation">.</span>acme<span class="token punctuation">.</span>sh<span class="token operator">/</span>xxx<span class="token punctuation">.</span>com<span class="token operator">/</span>fullchain<span class="token punctuation">.</span>cer<span class="token punctuation">;</span>  
    ssl_certificate_key    <span class="token operator">/</span>root<span class="token operator">/</span><span class="token punctuation">.</span>acme<span class="token punctuation">.</span>sh<span class="token operator">/</span>xxx<span class="token punctuation">.</span>com<span class="token operator">/</span>xxx<span class="token punctuation">.</span>com<span class="token punctuation">.</span>key<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="自动续期" tabindex="-1"><a class="header-anchor" href="#自动续期" aria-hidden="true">#</a> 自动续期</h3><p><code>acme.sh</code> 已自动添加 cron 任务，无需手动操作。验证 cron 任务：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">crontab</span> <span class="token parameter variable">-l</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>如果没有，可以手动添加下，内容如下：</p><div class="language-jsx line-numbers-mode" data-ext="jsx"><pre class="language-jsx"><code><span class="token number">38</span> <span class="token number">0</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token operator">*</span> <span class="token string">&quot;/root/.acme.sh&quot;</span><span class="token operator">/</span>acme<span class="token punctuation">.</span>sh <span class="token operator">--</span>cron <span class="token operator">--</span>home <span class="token string">&quot;/root/.acme.sh&quot;</span> <span class="token operator">&gt;</span> <span class="token operator">/</span>dev<span class="token operator">/</span><span class="token keyword">null</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h3><ol><li>权限问题：确保 API Token/AccessKey 有足够的 DNS 修改权限。</li><li>环境变量持久化：若将 API 密钥写入 <code>~/.bashrc</code> 或 <code>~/.acme.sh/account.conf</code>，重启后仍有效。执行上面的命令后，api密钥会自动写入<code>~/.acme.sh/account.conf</code> 文件。 可以通过 <code>acme.sh —info</code> 查看</li><li>日志查看：使用 <code>acme.sh --list</code> 查看已签发证书，或通过 <code>-debug</code> 参数调试。</li><li>多域名支持：通过多个 <code>d</code> 参数指定多个域名或子域名。</li></ol><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,33),W=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),$=e("hr",null,null,-1),X=e("hr",null,null,-1),ee=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),n("：新年而已，对大部分人来说，只不过是把去年重复过一遍。 "),e("br"),e("br"),e("img",{src:"https://images.pexels.com/photos/31727702/pexels-photo-31727702.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Lush cherry blossoms in full bloom in a vibrant spring setting.",loading:"lazy"})])],-1);function ne(se,ae){const t=r("ExternalLinkIcon"),a=r("RouterLink");return i(),p("div",null,[u,e("p",null,[n("官方主页："),e("a",h,[n("letsencrypt.org"),s(t)])]),m,_,b,e("p",null,[n("官方主页："),e("a",k,[n("zerossl.com"),s(t)])]),g,v,E,e("p",null,[n("官方主页："),e("a",f,[n("buypass.com/ssl"),s(t)])]),e("p",null,[e("strong",null,[n("4. "),e("a",A,[n("SSL.com"),s(t)])]),n(" • 免费证书有效期：30 天")]),x,S,e("p",null,[n("官方主页："),e("a",y,[n("ssl.com"),s(t)])]),C,B,L,e("p",null,[n("官方主页："),e("a",D,[n("cloud.google.com/certificate-manager"),s(t)])]),P,e("table",null,[N,e("tbody",null,[F,I,T,e("tr",null,[e("td",null,[e("a",w,[n("SSL.com"),s(t)])]),j,q,M,R]),G])]),Z,e("p",null,[n("以下是 Certbot 和 "),e("a",O,[n("acme.sh"),s(t)]),n(" 两款主流 ACME 客户端工具的对比，涵盖功能、适用场景和操作特性：")]),K,e("table",null,[e("thead",null,[e("tr",null,[U,Y,e("th",null,[e("a",V,[n("acme.sh"),s(t)])])])]),z]),Q,e("p",null,[e("a",H,[n("个人比较喜欢用acme.sh"),s(t)]),n("，下面使用acme.sh工具来完成证书申请、自动化续期。")]),J,e("ul",null,[e("li",null,[s(a,{to:"/other/getPath%20vs%20getAbsolutePath%20vs%20getCanonicalPath.html"},{default:l(()=>[n("getPath vs getAbsolutePath vs getCanonicalPath")]),_:1})]),e("li",null,[s(a,{to:"/software/jvm/JVM%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE.html"},{default:l(()=>[n("JVM参数设置")]),_:1})]),e("li",null,[s(a,{to:"/other/MySQL%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:l(()=>[n("MySQL高可用")]),_:1})]),e("li",null,[s(a,{to:"/other/PostgreSQL%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD.html"},{default:l(()=>[n("PostgreSQL定时备份")]),_:1})]),e("li",null,[s(a,{to:"/software/java-basic/Thread%20&%20ExecutorService%20&%20ThreadPoolExecutor%20%E6%80%BB%E8%A7%88.html"},{default:l(()=>[n("Thread & ExecutorService & ThreadPoolExecutor 总览")]),_:1})]),e("li",null,[s(a,{to:"/other/Spring%20RetryTemplate.html"},{default:l(()=>[n("Spring RetryTemplate")]),_:1})]),e("li",null,[s(a,{to:"/other/Hadoop%20%E4%B8%80.html"},{default:l(()=>[n("Hadoop 一")]),_:1})]),e("li",null,[s(a,{to:"/software/unclassified/%E7%BA%BF%E4%B8%8AFullGC%E9%A2%91%E7%B9%81%E7%9A%84%E6%8E%92%E6%9F%A5.html"},{default:l(()=>[n("线上FullGC频繁的排查")]),_:1})]),e("li",null,[s(a,{to:"/other/vuepress/vuepress-theme-hope%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97.html"},{default:l(()=>[n("vuepress-theme-hope使用心得")]),_:1})]),e("li",null,[s(a,{to:"/other/Git%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1.html"},{default:l(()=>[n("Git历史记录修改用户名和邮箱")]),_:1})]),e("li",null,[s(a,{to:"/other/CentOS7%E4%B8%8BDocker%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E5%90%8E%E9%98%B2%E7%81%AB%E5%A2%99%E5%A4%B1%E6%95%88.html"},{default:l(()=>[n("CentOS7下Docker端口映射后防火墙失效")]),_:1})]),e("li",null,[s(a,{to:"/software/unclassified/%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"},{default:l(()=>[n("表单重复提交解决方案")]),_:1})])]),W,$,X,ee])}const te=c(d,[["render",ne],["__file","免费https证书、自动续期.html.vue"]]);export{te as default};
