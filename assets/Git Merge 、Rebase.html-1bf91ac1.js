import{_ as d,$ as l,a0 as n,a1 as e,a3 as i,a4 as r,a5 as o,a2 as a,w as s}from"./framework-58787b1c.js";const h={},c=o('<h1 id="git-merge-、rebase" tabindex="-1"><a class="header-anchor" href="#git-merge-、rebase" aria-hidden="true">#</a> Git Merge 、Rebase</h1><h2 id="git-merge-a" tabindex="-1"><a class="header-anchor" href="#git-merge-a" aria-hidden="true">#</a> <strong>git merge a</strong></h2><p>会找到两个分支的共同祖先、以及两个分支各自最新的提交，然后进行三方合并，并且在对合并中修改的内容形成一个新的commit</p><h2 id="git-rebase-a" tabindex="-1"><a class="header-anchor" href="#git-rebase-a" aria-hidden="true">#</a> <strong>git rebase a</strong></h2><p>也就是变基，即把当前分支的祖先更改为a分支最新的提交。此时a为<strong>基分支</strong>，当前分支为**待变基分支。**git会从两个分支的祖先开始提取待变基分支的提交，然后把当前分支指针指向基分支最新提交，然后应用刚才提取到的修改（即：以a为基底合并当前分支代码）</p><p><strong>rebase与merge的功能都是合并代码</strong></p><p>现在假设有两个分支：dev 和 dev-pqs （dev-pqs是模拟各个开发人员的开发分支）</p><p>dev-pqs基于dev分支拉出，然后进行了 A B两个提交</p><p>然后dev分支分支有个新的提交 M（比如是其他开发人员合并上去的），如下图</p><figure><img src="https://cdn.justdopay.com/notion/md5-7ee058faf958872e49825ee139b46a85.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h2 id="把dev-pqs的代码合并到dev" tabindex="-1"><a class="header-anchor" href="#把dev-pqs的代码合并到dev" aria-hidden="true">#</a> 把dev-pqs的代码合并到dev</h2><h3 id="merge" tabindex="-1"><a class="header-anchor" href="#merge" aria-hidden="true">#</a> merge</h3><ol><li>切换当前分支为dev-pqs</li><li>执行git merge dev （后续应该再切换到dev分支，然后把dev-pqs合并到dev，这个步骤就省略了，因为如果有冲突，冲突已经在1、2两个步骤解决掉了，也可以直接执行这两个步骤）</li></ol><p>结果如下：</p><figure><img src="https://cdn.justdopay.com/notion/md5-5f76033e4a96ff5ebc4dd0889fafbe34.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h3 id="rebase" tabindex="-1"><a class="header-anchor" href="#rebase" aria-hidden="true">#</a> rebase</h3><ol><li>切换当前分支为 dev-pqs</li><li>执行 git rebase dev （后续应该再切换到dev分支，然后把dev-pqs合并到dev，这个步骤就省略了，因为如果有冲突，冲突已经在1、2两个步骤解决掉了，也可以直接执行这两个步骤）</li></ol><p>rebase前，dev-pqs分支的祖先是dev那个提交，rebase后，祖先就更改为dev的最新提交，也就是m那次提交。如下图：</p><figure><img src="https://cdn.justdopay.com/notion/md5-8b5ea2514439c08c59d915aeca8e72b0.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h2><ol><li>merge操作通常会生成一个新的commit，已提交的commit的版本号不会发生编号</li><li>merge后分支的祖先信息不会丢失</li><li>merge操作后的结果能提现出时间线</li><li>rebase操作后分支祖先信息会丢失，如上图看不出dev-pqs的祖先</li><li>rebase同时会更改commit的版本号，比如上面的A、B两个提交的版本号就发生了变化。A: 11e75—&gt;c78c B: 68b0—&gt;106d</li><li>rebase操作后并不是按照时间线排列（当然可以根据提交时间判断）</li></ol><h2 id="merge还是rebase" tabindex="-1"><a class="header-anchor" href="#merge还是rebase" aria-hidden="true">#</a> merge还是rebase?</h2><p>根据上面的区别，再根据公司、项目实际情况选择使用即可</p><h2 id="git-pull" tabindex="-1"><a class="header-anchor" href="#git-pull" aria-hidden="true">#</a> git pull</h2><p>git pull 等效于 git fetch + git merge</p><p>git pull -r 等效于 git pull -rebase 又等效于 git fetch + git rebase</p><h2 id="idea的rebase操作" tabindex="-1"><a class="header-anchor" href="#idea的rebase操作" aria-hidden="true">#</a> idea的rebase操作</h2><figure><img src="https://cdn.justdopay.com/notion/md5-cdd8d72339d573499dc776d5a970319d.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p>点击红框”rebase dev-pqs onto dev” 就相当于在执行 git rebase dev，一样的效果。 这个”onto”感觉很形象，有点体现出以dev为基底的感觉</p><h2 id="idea设置" tabindex="-1"><a class="header-anchor" href="#idea设置" aria-hidden="true">#</a> idea设置</h2><figure><img src="https://cdn.justdopay.com/notion/md5-b558ba217c6076d0b70c8e922c37b5c7.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>',33),g=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),p=e("hr",null,null,-1),E=e("hr",null,null,-1),u=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),a("：白天嘈杂得不愿意醒，夜晚安静得舍不得睡。 "),e("br"),e("br"),e("img",{src:"https://tuapi.eees.cc/api.php?category=fengjing&type=302&uuid=ea3a5155-2336-4280-80bd-cf45cca0a28a",alt:"",loading:"lazy"})])],-1);function b(f,m){const t=s("RouterLink");return l(),n("div",null,[c,e("ul",null,[e("li",null,[i(t,{to:"/other/Git%E5%90%88%E5%B9%B6%E5%A4%9A%E4%B8%AA%E6%8F%90%E4%BA%A4%E5%B9%B6push%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.html"},{default:r(()=>[a("Git合并多个提交并push到远程仓库")]),_:1})]),e("li",null,[i(t,{to:"/other/Nacos-Spring%20Gateway-Spring%20boot%E6%97%A0%E6%84%9F%E5%8F%91%E5%B8%83.html"},{default:r(()=>[a("Nacos-Spring Gateway-Spring boot无感发布")]),_:1})]),e("li",null,[i(t,{to:"/software/middleware/es/ES6.2.3(3%E8%8A%82%E7%82%B9)%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%88%B0ES7.4.1(5%E8%8A%82%E7%82%B9).html"},{default:r(()=>[a("ES6.2.3(3节点)数据迁移到ES7.4.1(5节点)")]),_:1})]),e("li",null,[i(t,{to:"/other/HTTP1%200%20vs%20HTTP1%201%20vs%20WebSocket.html"},{default:r(()=>[a("HTTP1 0 vs HTTP1 1 vs WebSocket")]),_:1})]),e("li",null,[i(t,{to:"/other/%E6%8F%90%E5%8F%96Docker%E9%95%9C%E5%83%8F%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6.html"},{default:r(()=>[a("提取Docker镜像中的文件")]),_:1})]),e("li",null,[i(t,{to:"/other/K8S%20%E6%97%A0%E6%84%9F%E5%8F%91%E5%B8%83.html"},{default:r(()=>[a("K8S 无感发布")]),_:1})]),e("li",null,[i(t,{to:"/software/unclassified/KVM%E6%96%B9%E5%BC%8F%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2ES.html"},{default:r(()=>[a("KVM方式集群部署ES")]),_:1})]),e("li",null,[i(t,{to:"/other/MongoDB%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:r(()=>[a("MongoDB高可用")]),_:1})]),e("li",null,[i(t,{to:"/software/middleware/mysql/SQL%E4%BC%98%E5%8C%96.html"},{default:r(()=>[a("SQL优化")]),_:1})]),e("li",null,[i(t,{to:"/other/Mermaid%E7%A4%BA%E4%BE%8B.html"},{default:r(()=>[a("Mermaid示例")]),_:1})]),e("li",null,[i(t,{to:"/software/unclassified/%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%AD%E7%9A%84%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{default:r(()=>[a("批量替换文件名中的指定字符串")]),_:1})]),e("li",null,[i(t,{to:"/other/PostgreSQL%20JSON%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C.html"},{default:r(()=>[a("PostgreSQL JSON类型字段常用操作")]),_:1})])]),g,p,E,u])}const _=d(h,[["render",b],["__file","Git Merge 、Rebase.html.vue"]]);export{_ as default};
