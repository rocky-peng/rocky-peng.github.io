import{_ as i,$ as r,a0 as c,a1 as a,a2 as e,a3 as t,a4 as o,a5 as d,w as l}from"./framework-b3a0f150.js";const p={},u=d(`<h2 id="一-循环依赖异常" tabindex="-1"><a class="header-anchor" href="#一-循环依赖异常" aria-hidden="true">#</a> 一：循环依赖异常</h2><p>比如某个ServiceA 内部引用了自身，目的是为了防止事务注解失效</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServiceA</span> <span class="token punctuation">{</span>
	
	<span class="token annotation punctuation">@Autowired</span>
	<span class="token keyword">private</span> <span class="token class-name">ServiceA</span> serviceA<span class="token punctuation">;</span>

	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种做法在spring boot 2.6.0之前是没有问题的。</p><p>现在技术升级，把spring boot的版本从2.3.12.RELEASE升级到了2.6.0，然后出现了下面的提示：</p><blockquote><p>Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to tr</p></blockquote><p>采用的解决方案就是，</p><p>**方案一：**不直接注入自身，转而注入ApplicationContext，然后在使用的地方通过getBean的方式获取实例对象</p><p>**方案二：**使用 <code>XXX xxx = (XXX)AopContext.*currentProxy*()</code> 这个方法会放回当前类的代理对象，内部是通过threadlocal来存储。通过这个方式也能达到相同目的</p><h2 id="二-url中的双斜杠出现404" tabindex="-1"><a class="header-anchor" href="#二-url中的双斜杠出现404" aria-hidden="true">#</a> 二：url中的双斜杠出现404</h2><p>在升级前，<strong>代码中</strong>如果某个接口地中中有两个双斜杠，是能正常执行的。比如代码中某个接口的url拼接起来是：/api//xxx/xxx 用api/xxx/xxx可以正常访问</p><p>升级到2.6.x后会不在代码中去掉双斜杠的情况下，用api/xxx/xxx访问就会404，导致接口异常</p><h2 id="三-nacos的shared-config配置不生效" tabindex="-1"><a class="header-anchor" href="#三-nacos的shared-config配置不生效" aria-hidden="true">#</a> 三：nacos的shared-config配置不生效</h2><p>在spring boot 2.4.0之前采用类似下面的配置即可</p><figure><img src="https://cdn.justdopay.com/notion/md5-47f92655d02085f5a7eb3d130366ae7a.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p>但升级后2.4.0之后的版本后下面的配置是跑步起来的，会提示：</p><figure><img src="https://cdn.justdopay.com/notion/md5-3217309c59519fe70978caaefa146023.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p><strong>升级后正确的配置</strong>类似下面：</p><figure><img src="https://cdn.justdopay.com/notion/md5-91d47a5d51b8ce0f41ea139605e8edde.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>`,19),h={href:"https://github.com/alibaba/spring-cloud-alibaba/pull/2349#top",target:"_blank",rel:"noopener noreferrer"},f=a("br",null,null,-1),_=a("h2",{id:"系统推荐",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#系统推荐","aria-hidden":"true"},"#"),e(" 系统推荐")],-1),g=a("p",null,[a("br"),a("br"),a("br"),a("br"),a("br"),a("br")],-1),b=a("hr",null,null,-1),m=a("hr",null,null,-1),x=a("ul",null,[a("li",null,[a("strong",null,"随机毒鸡汤"),e("：你化成灰我都认得，但是化了妆就不一定了。 "),a("br"),a("br"),a("img",{src:"https://tuapi.eees.cc/api.php?category=fengjing&type=302&uuid=6475e74d-b64a-4491-bdbc-76c069589de0",alt:"",loading:"lazy"})])],-1);function E(v,A){const s=l("ExternalLinkIcon"),n=l("RouterLink");return r(),c("div",null,[u,a("p",null,[e("扩展看："),a("a",h,[e("https://github.com/alibaba/spring-cloud-alibaba/pull/2349#top"),t(s)])]),f,_,a("ul",null,[a("li",null,[t(n,{to:"/software/unclassified/Cordova+Umi%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4.html"},{default:o(()=>[e("Cordova+Umi项目搭建步骤")]),_:1})]),a("li",null,[t(n,{to:"/other/getPath%20vs%20getAbsolutePath%20vs%20getCanonicalPath.html"},{default:o(()=>[e("getPath vs getAbsolutePath vs getCanonicalPath")]),_:1})]),a("li",null,[t(n,{to:"/software/unclassified/MAT%E5%B7%A5%E5%85%B7.html"},{default:o(()=>[e("MAT工具")]),_:1})]),a("li",null,[t(n,{to:"/other/Nacos-Spring%20Gateway-Spring%20boot%E6%97%A0%E6%84%9F%E5%8F%91%E5%B8%83.html"},{default:o(()=>[e("Nacos-Spring Gateway-Spring boot无感发布")]),_:1})]),a("li",null,[t(n,{to:"/other/PGSQL%20GIN%E7%B4%A2%E5%BC%95%E2%80%9C%E5%A4%B1%E6%95%88%E2%80%9D.html"},{default:o(()=>[e("PGSQL GIN索引“失效”")]),_:1})]),a("li",null,[t(n,{to:"/software/java-basic/Thread%20&%20ExecutorService%20&%20ThreadPoolExecutor%20%E6%80%BB%E8%A7%88.html"},{default:o(()=>[e("Thread & ExecutorService & ThreadPoolExecutor 总览")]),_:1})]),a("li",null,[t(n,{to:"/other/istio%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"},{default:o(()=>[e("istio基础知识")]),_:1})]),a("li",null,[t(n,{to:"/software/unclassified/linux_no_space_left_on_device.html"},{default:o(()=>[e("linux_no_space_left_on_device")]),_:1})]),a("li",null,[t(n,{to:"/software/jvm/JVM%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html"},{default:o(()=>[e("JVM异常处理")]),_:1})]),a("li",null,[t(n,{to:"/software/middleware/mysql/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1Seata.html"},{default:o(()=>[e("分布式事务Seata")]),_:1})]),a("li",null,[t(n,{to:"/software/raft/sofajraft.html"},{default:o(()=>[e("sofajraft")]),_:1})]),a("li",null,[t(n,{to:"/software/linux/Linux.html"},{default:o(()=>[e("Linux")]),_:1})])]),g,b,m,x])}const B=i(p,[["render",E],["__file","Spring Boot升级到2 6 x踩的坑.html.vue"]]);export{B as default};
