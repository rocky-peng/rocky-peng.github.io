import{_ as o,$ as l,a0 as p,a1 as s,a3 as e,a4 as t,a5 as r,a2 as n,w as d}from"./framework-b3a0f150.js";const c={},i=r(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>在数据分析中，我们常常需要将纵向排列的数据转换为横向展示，以便更直观地进行分析或生成报告。这个过程就是 行转列，又称为 Pivot 操作。在 SQL 中，如何将行数据高效转换为列数据是一项非常实用的技巧，无论是生成动态报表，还是在数据透视分析中应用，都能够大显身手。</p><p>在这篇博文中，我将带你从零开始，深入理解 SQL 中行转列的原理，并通过常见的数据库示例逐步展示行转列的多种实现方式。</p><h2 id="行转列是什么" tabindex="-1"><a class="header-anchor" href="#行转列是什么" aria-hidden="true">#</a> 行转列是什么</h2><p>行转列操作可以帮助我们将多行数据转换成不同的列，尤其在处理 <strong>数据透视</strong> 时非常有用。行转列广泛应用于需要汇总、整理数据的场景，如报表生成和业务分析。</p><p>假设有一张销售表 <code>sales</code>，记录了每个季度的销售额：</p><table><thead><tr><th>year</th><th>quarter</th><th>revenue</th></tr></thead><tbody><tr><td>2023</td><td>Q1</td><td>5000</td></tr><tr><td>2023</td><td>Q2</td><td>7000</td></tr><tr><td>2023</td><td>Q3</td><td>6000</td></tr><tr><td>2023</td><td>Q4</td><td>8000</td></tr></tbody></table><p>我们的目标是将不同季度的销售额变成每一年的列展示，比如：</p><table><thead><tr><th>year</th><th>Q1</th><th>Q2</th><th>Q3</th><th>Q4</th></tr></thead><tbody><tr><td>2023</td><td>5000</td><td>7000</td><td>6000</td><td>8000</td></tr></tbody></table><h2 id="常见行转列方法" tabindex="-1"><a class="header-anchor" href="#常见行转列方法" aria-hidden="true">#</a> 常见行转列方法</h2><h3 id="方法-1-使用-case-when-实现行转列" tabindex="-1"><a class="header-anchor" href="#方法-1-使用-case-when-实现行转列" aria-hidden="true">#</a> <strong>方法 1：使用 CASE WHEN 实现行转列</strong></h3><p><code>CASE WHEN</code> 是行转列的经典方式，也是我最喜欢使用的方式，这个方式适用于大多数 SQL 数据库。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token keyword">SELECT</span>
  <span class="token keyword">year</span><span class="token punctuation">,</span>
  <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> quarter <span class="token operator">=</span> <span class="token string">&#39;Q1&#39;</span> <span class="token keyword">THEN</span> revenue <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Q1<span class="token punctuation">,</span>
  <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> quarter <span class="token operator">=</span> <span class="token string">&#39;Q2&#39;</span> <span class="token keyword">THEN</span> revenue <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Q2<span class="token punctuation">,</span>
  <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> quarter <span class="token operator">=</span> <span class="token string">&#39;Q3&#39;</span> <span class="token keyword">THEN</span> revenue <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Q3<span class="token punctuation">,</span>
  <span class="token function">SUM</span><span class="token punctuation">(</span><span class="token keyword">CASE</span> <span class="token keyword">WHEN</span> quarter <span class="token operator">=</span> <span class="token string">&#39;Q4&#39;</span> <span class="token keyword">THEN</span> revenue <span class="token keyword">ELSE</span> <span class="token number">0</span> <span class="token keyword">END</span><span class="token punctuation">)</span> <span class="token keyword">AS</span> Q4
<span class="token keyword">FROM</span> sales
<span class="token keyword">GROUP</span> <span class="token keyword">BY</span> <span class="token keyword">year</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>通过 <code>CASE WHEN</code> 判断每一行属于哪个季度，使用 <code>SUM</code> 聚合数据，确保同一年内的季度销售额正确归类到各自的列中。</li><li><code>GROUP BY</code> 按年份分组，以获得每年的季度销售额汇总。</li></ol><h3 id="方法-2-使用-pivot-语句" tabindex="-1"><a class="header-anchor" href="#方法-2-使用-pivot-语句" aria-hidden="true">#</a> <strong>方法 2：使用 PIVOT 语句</strong></h3><p>某些数据库（如 SQL Server 和 Oracle）提供了专门的 <code>PIVOT</code> 语句来实现行转列。</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>
<span class="token keyword">SELECT</span> <span class="token operator">*</span>
<span class="token keyword">FROM</span> sales
<span class="token keyword">PIVOT</span> <span class="token punctuation">(</span>
  <span class="token function">SUM</span><span class="token punctuation">(</span>revenue<span class="token punctuation">)</span>
  <span class="token keyword">FOR</span> quarter <span class="token operator">IN</span> <span class="token punctuation">(</span><span class="token string">&#39;Q1&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Q2&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Q3&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;Q4&#39;</span><span class="token punctuation">)</span>
<span class="token punctuation">)</span> <span class="token keyword">AS</span> pivot_table<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>PIVOT</code> 语句自动将季度 (<code>quarter</code>) 转为列，并对销售额 (<code>revenue</code>) 进行汇总。</li><li>相比于 <code>CASE WHEN</code>，<code>PIVOT</code> 更加简洁，但并非所有数据库都支持。</li></ol><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结" aria-hidden="true">#</a> 总结</h2><p>其实从我个人而言，更喜欢用case when的方式，这个方式更通用，也方便理解和记忆</p><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,22),u=s("p",null,[s("br"),s("br"),s("br"),s("br"),s("br"),s("br")],-1),k=s("hr",null,null,-1),h=s("hr",null,null,-1),E=s("ul",null,[s("li",null,[s("strong",null,"随机毒鸡汤"),n("：贵的东西只有贵这一个缺点，便宜的东西，却只有便宜这一个优点。 "),s("br"),s("br"),s("img",{src:"https://images.pexels.com/photos/31649749/pexels-photo-31649749.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Savor a bowl of Thai noodle soup garnished with fresh herbs and chili, capturing the essence of Asian cuisine.",loading:"lazy"})])],-1);function v(m,b){const a=d("RouterLink");return l(),p("div",null,[i,s("ul",null,[s("li",null,[e(a,{to:"/software/unclassified/Oh%20My%20ZSH.html"},{default:t(()=>[n("Oh My ZSH")]),_:1})]),s("li",null,[e(a,{to:"/software/middleware/mysql/MySQL%E6%9D%82%E9%A1%B9.html"},{default:t(()=>[n("MySQL杂项")]),_:1})]),s("li",null,[e(a,{to:"/software/unclassified/%E5%90%84%E7%A7%8D%E7%BD%91%E5%85%B3%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95.html"},{default:t(()=>[n("各种网关性能测试")]),_:1})]),s("li",null,[e(a,{to:"/software/docker/Docker%E8%BF%9B%E8%A1%8C%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB.html"},{default:t(()=>[n("Docker进行资源隔离")]),_:1})]),s("li",null,[e(a,{to:"/other/MySQL%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:t(()=>[n("MySQL高可用")]),_:1})]),s("li",null,[e(a,{to:"/other/PGSQL%20GIN%E7%B4%A2%E5%BC%95%E2%80%9C%E5%A4%B1%E6%95%88%E2%80%9D.html"},{default:t(()=>[n("PGSQL GIN索引“失效”")]),_:1})]),s("li",null,[e(a,{to:"/other/Cornell%20Notes%20System.html"},{default:t(()=>[n("Cornell Notes System")]),_:1})]),s("li",null,[e(a,{to:"/software/unclassified/%E5%88%B6%E4%BD%9CKVM%20ES%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6.html"},{default:t(()=>[n("制作KVM ES镜像文件")]),_:1})]),s("li",null,[e(a,{to:"/other/Git%20Merge%20%E3%80%81Rebase.html"},{default:t(()=>[n("Git Merge 、Rebase")]),_:1})]),s("li",null,[e(a,{to:"/other/vuepress/vuepress-theme-hope%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97.html"},{default:t(()=>[n("vuepress-theme-hope使用心得")]),_:1})]),s("li",null,[e(a,{to:"/other/vuepress-theme-hope%20%E6%B7%BB%E5%8A%A0%E8%B0%B7%E6%AD%8C%E5%B9%BF%E5%91%8A.html"},{default:t(()=>[n("vuepress-theme-hope 添加谷歌广告")]),_:1})]),s("li",null,[e(a,{to:"/intro.html"},{default:t(()=>[n("intro")]),_:1})])]),u,k,h,E])}const y=o(c,[["render",v],["__file","行转列不再复杂：SQL高手都在用的技巧揭秘.html.vue"]]);export{y as default};
