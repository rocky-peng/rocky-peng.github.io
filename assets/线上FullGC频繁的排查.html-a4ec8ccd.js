import{_ as l,$ as i,a0 as p,a1 as n,a3 as e,a4 as t,a5 as o,a2 as a,w as c}from"./framework-8c4427da.js";const u={},r=o(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><p>前段时间发现线上的一个dubbo服务Full GC比较频繁，大约每两天就会执行一次Full GC。</p><h2 id="full-gc的原因" tabindex="-1"><a class="header-anchor" href="#full-gc的原因" aria-hidden="true">#</a> Full GC的原因</h2><p>我们知道Full GC的触发条件大致情况有以下几种情况：</p><ol><li>程序执行了System.gc() //建议jvm执行fullgc，并不一定会执行</li><li>执行了jmap -histo:live pid命令 //这个会立即触发fullgc</li><li>在执行minor gc的时候进行的一系列检查</li></ol><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>执行Minor GC的时候，JVM会检查老年代中最大连续可用空间是否大于了当前新生代所有对象的总大小。
如果大于，则直接执行Minor GC（这个时候执行是没有风险的）。
如果小于了，JVM会检查是否开启了空间分配担保机制，如果没有开启则直接改为执行Full GC。
如果开启了，则JVM会检查老年代中最大连续可用空间是否大于了历次晋升到老年代中的平均大小，如果小于则执行改为执行Full GC。
如果大于则会执行Minor GC，如果Minor GC执行失败则会执行Full GC
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>使用了大对象 //大对象会直接进入老年代</li><li>在程序中长期持有了对象的引用 //对象年龄达到指定阈值也会进入老年代</li></ol><p>对于我们的情况，可以初步排除1，2两种情况，最有可能是4和5这两种情况。为了进一步排查原因，我们在线上开启了 -XX:+HeapDumpBeforeFullGC。</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>注意：
JVM在执行dump操作的时候是会发生stop the word事件的，也就是说此时所有的用户线程都会暂停运行。
为了在此期间也能对外正常提供服务，建议采用分布式部署，并采用合适的负载均衡算法
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="jvm参数的设置" tabindex="-1"><a class="header-anchor" href="#jvm参数的设置" aria-hidden="true">#</a> JVM参数的设置：</h2><p>线上这个dubbo服务是分布式部署，在其中一台机子上开启了 -XX:HeapDumpBeforeFullGC，总体JVM参数如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token parameter variable">-Xmx2g</span> 
<span class="token parameter variable">-XX:+HeapDumpBeforeFullGC</span> 
<span class="token parameter variable">-XX:HeapDumpPath</span><span class="token operator">=</span>. 
<span class="token parameter variable">-Xloggc:gc.log</span> 
<span class="token parameter variable">-XX:+PrintGC</span> 
<span class="token parameter variable">-XX:+PrintGCDetails</span> 
<span class="token parameter variable">-XX:+PrintGCDateStamps</span> 
<span class="token parameter variable">-XX:+UseGCLogFileRotation</span> 
<span class="token parameter variable">-XX:NumberOfGCLogFiles</span><span class="token operator">=</span><span class="token number">10</span> 
<span class="token parameter variable">-XX:GCLogFileSize</span><span class="token operator">=</span>100m 
<span class="token parameter variable">-XX:HeapDumpOnOutOfMemoryError</span> 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="dump文件分析" tabindex="-1"><a class="header-anchor" href="#dump文件分析" aria-hidden="true">#</a> Dump文件分析</h2><p>dump下来的文件大约1.8g，用jvisualvm查看，发现用char[]类型的数据占用了41%内存，同时另外一个com.alibaba.druid.stat.JdbcSqlStat类型的数据占用了35%的内存，也就是说整个堆中几乎全是这两类数据。如下图：</p><figure><img src="https://cdn.justdopay.top/xiaoshujiang/1629081850286.png" alt="enter description here" tabindex="0" loading="lazy"><figcaption>WeChat92981e4701376907c2ad4e7e486c3f63</figcaption></figure><p>查看char[]类型数据，发现几乎全是sql语句。</p><figure><img src="https://cdn.justdopay.top/xiaoshujiang/1629081858698.png" alt="enter description here" tabindex="0" loading="lazy"><figcaption>WeChat382ef1b95373e57e66207b2e7820c5a8</figcaption></figure><p>接下来查看char[]的引用情况：</p><figure><img src="https://cdn.justdopay.top/xiaoshujiang/1629081862832.png" alt="enter description here" tabindex="0" loading="lazy"><figcaption>WeChat39fa3f48d0437d7aad83ff890bfe4ee8</figcaption></figure><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>找到了<span class="token class-name">JdbcSqlStat</span>类，在代码中查看这个类的代码，关键代码如下：

构造函数只有这一个
<span class="token keyword">public</span> <span class="token class-name">JdbcSqlStat</span><span class="token punctuation">(</span><span class="token class-name">String</span> sql<span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>sql <span class="token operator">=</span> sql<span class="token punctuation">;</span>
    <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> <span class="token class-name">DruidDriver</span><span class="token punctuation">.</span><span class="token function">createSqlStatId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

查看这个函数的调用情况，找到<span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>druid<span class="token punctuation">.</span>stat<span class="token punctuation">.</span></span>JdbcDataSourceStat</span>#createSqlStat方法：

<span class="token keyword">public</span> <span class="token class-name">JdbcSqlStat</span> <span class="token function">createSqlStat</span><span class="token punctuation">(</span><span class="token class-name">String</span> sql<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    lock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">try</span> <span class="token punctuation">{</span>
        <span class="token class-name">JdbcSqlStat</span> sqlStat <span class="token operator">=</span> sqlStatMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>sqlStat <span class="token operator">==</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            sqlStat <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JdbcSqlStat</span><span class="token punctuation">(</span>sql<span class="token punctuation">)</span><span class="token punctuation">;</span>
            sqlStat<span class="token punctuation">.</span><span class="token function">setDbType</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>dbType<span class="token punctuation">)</span><span class="token punctuation">;</span>
            sqlStat<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>
            sqlStatMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>sql<span class="token punctuation">,</span> sqlStat<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

        <span class="token keyword">return</span> sqlStat<span class="token punctuation">;</span>
    <span class="token punctuation">}</span> <span class="token keyword">finally</span> <span class="token punctuation">{</span>
        lock<span class="token punctuation">.</span><span class="token function">writeLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

这里用了一个map来存放所有的sql语句。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其实到这里也就知道什么原因造成了这个问题，因为我们使用的数据源是阿里巴巴的druid，这个druid提供了一个sql语句监控功能，同时我们也开启了这个功能。只需要在配置文件中把这个功能关掉应该就能消除这个问题，事实也的确如此，关掉这个功能后到目前为止线上没再触发FullGC</p><figure><img src="https://cdn.justdopay.top/xiaoshujiang/1629081869818.png" alt="enter description here" tabindex="0" loading="lazy"><figcaption>WeChat8ee573e58131982e27be18723d0fd998</figcaption></figure><h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他" aria-hidden="true">#</a> 其他</h2><p>如果用mat工具查看，建议把 &quot;Keep unreachable objects&quot; 勾上，否则mat会把堆中不可达的对象去除掉，这样我们的分析也许会变得没有意义。如下图：Window--&gt;References 。另外jvisualvm对ool的支持不是很好，如果需要oql建议使用mat。</p><figure><img src="https://cdn.justdopay.top/xiaoshujiang/1629081878591.png" alt="enter description here" tabindex="0" loading="lazy"><figcaption>WeChat48b628ddc00e59143957107d6021b736</figcaption></figure><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,27),d=n("p",null,[n("br"),n("br"),n("br"),n("br"),n("br"),n("br")],-1),m=n("hr",null,null,-1),k=n("hr",null,null,-1),v=n("ul",null,[n("li",null,[n("strong",null,"随机毒鸡汤"),a("：千万别把事情拖到明天，后天大后天都是好日子啊。 "),n("br"),n("br"),n("img",{src:"https://images.pexels.com/photos/31416984/pexels-photo-31416984.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Modern interior of an art gallery in Tokyo, Japan, showcasing stunning architectural design.",loading:"lazy"})])],-1);function b(h,g){const s=c("RouterLink");return i(),p("div",null,[r,n("ul",null,[n("li",null,[e(s,{to:"/other/%E6%9D%A5%E4%B8%AAJVM%E5%86%B7%E7%9F%A5%E8%AF%86.html"},{default:t(()=>[a("来个JVM冷知识")]),_:1})]),n("li",null,[e(s,{to:"/other/K8S%20%E6%97%A0%E6%84%9F%E5%8F%91%E5%B8%83.html"},{default:t(()=>[a("K8S 无感发布")]),_:1})]),n("li",null,[e(s,{to:"/other/PGSQL%20GIN%E7%B4%A2%E5%BC%95%E2%80%9C%E5%A4%B1%E6%95%88%E2%80%9D.html"},{default:t(()=>[a("PGSQL GIN索引“失效”")]),_:1})]),n("li",null,[e(s,{to:"/other/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Google%20BBR.html"},{default:t(()=>[a("如何安装Google BBR")]),_:1})]),n("li",null,[e(s,{to:"/other/Paxos%E7%AE%97%E6%B3%95.html"},{default:t(()=>[a("Paxos算法")]),_:1})]),n("li",null,[e(s,{to:"/software/docker/Centos%E7%A6%BB%E7%BA%BF%E5%AE%89%E8%A3%85Docker.html"},{default:t(()=>[a("Centos离线安装Docker")]),_:1})]),n("li",null,[e(s,{to:"/other/Spring%20Boot%E5%8D%87%E7%BA%A7%E5%88%B02%206%20x%E8%B8%A9%E7%9A%84%E5%9D%91.html"},{default:t(()=>[a("Spring Boot升级到2 6 x踩的坑")]),_:1})]),n("li",null,[e(s,{to:"/other/Mermaid%E7%A4%BA%E4%BE%8B.html"},{default:t(()=>[a("Mermaid示例")]),_:1})]),n("li",null,[e(s,{to:"/other/PostgreSQL%20JSON%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C.html"},{default:t(()=>[a("PostgreSQL JSON类型字段常用操作")]),_:1})]),n("li",null,[e(s,{to:"/software/unclassified/%E6%9D%82%E8%AE%B0.html"},{default:t(()=>[a("杂记")]),_:1})]),n("li",null,[e(s,{to:"/other/PostgreSQL%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:t(()=>[a("PostgreSQL高可用")]),_:1})]),n("li",null,[e(s,{to:"/software/linux/Linux.html"},{default:t(()=>[a("Linux")]),_:1})])]),d,m,k,v])}const E=l(u,[["render",b],["__file","线上FullGC频繁的排查.html.vue"]]);export{E as default};
