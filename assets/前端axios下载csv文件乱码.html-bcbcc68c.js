import{_ as o,$ as p,a0 as l,a1 as n,a3 as t,a4 as e,a5 as c,a2 as a,w as i}from"./framework-b3a0f150.js";const u={},r=c(`<h2 id="问题" tabindex="-1"><a class="header-anchor" href="#问题" aria-hidden="true">#</a> 问题</h2><p>现在有个后端下载csv文件的接口，在浏览器地址栏直接请求这个接口，下载的文件用office的excel打开不乱码（wps也能正常显示），但通过页面点击按钮来下载，保存的文件用office的excel打开就乱码（wps还是能正常显示）。</p><p>后端代码大概这样：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token doc-comment comment">/**
 *
 * <span class="token keyword">@param</span> <span class="token parameter">response</span>
 * <span class="token keyword">@param</span> <span class="token parameter">checkResultFileUrl</span> 这个文件要求是gkb编码
 * <span class="token keyword">@throws</span> <span class="token reference"><span class="token class-name">IOException</span></span>
 */</span>
<span class="token annotation punctuation">@Override</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">downloadCheckResult</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">String</span> checkResultFileUrl<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">{</span>
    response<span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">&quot;GBK&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Disposition&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;attachment; filename=checkResult.csv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    response<span class="token punctuation">.</span><span class="token function">addHeader</span><span class="token punctuation">(</span><span class="token string">&quot;Content-Type&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;text/csv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">ServletOutputStream</span> outputStream <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">getOutputStream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">InputStream</span> is <span class="token operator">=</span> fileStorageService<span class="token punctuation">.</span><span class="token function">getFileInputStream</span><span class="token punctuation">(</span>checkResultFileUrl<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bytes <span class="token operator">=</span> <span class="token class-name">IOUtils</span><span class="token punctuation">.</span><span class="token function">readFully</span><span class="token punctuation">(</span>is<span class="token punctuation">,</span> is<span class="token punctuation">.</span><span class="token function">available</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputStream<span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputStream<span class="token punctuation">.</span><span class="token function">flush</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    outputStream<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>前端代码大概这样：</p><figure><img src="https://cdn.justdopay.com/notion/md5-516bea5d2551055e6fbf71d2f7fa6a42.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h2 id="解决方法" tabindex="-1"><a class="header-anchor" href="#解决方法" aria-hidden="true">#</a> 解决方法</h2><p>发起请求的时候不设置 responseType: &#39;blob&#39;,并且在downLoadFile函数中类似下面的修改</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>let resData <span class="token operator">=</span><span class="token char">&#39;\\ufeff&#39;</span> <span class="token operator">+</span> row<span class="token punctuation">.</span>data<span class="token punctuation">;</span>
<span class="token keyword">const</span> blob <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Blob</span><span class="token punctuation">(</span><span class="token punctuation">[</span>resData<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
    type<span class="token operator">:</span> &#39;text<span class="token operator">/</span>csv<span class="token punctuation">,</span>charset<span class="token operator">=</span><span class="token constant">UTF</span><span class="token operator">-</span><span class="token number">8</span>&#39;
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>成功！！！ 关键点是在返回的data 上加上&#39;\\ufeff’</p><figure><img src="https://cdn.justdopay.com/notion/md5-e65d409adbe72c698846b8b4a1876c68.gif" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,13),d=n("p",null,[n("br"),n("br"),n("br"),n("br"),n("br"),n("br")],-1),k=n("hr",null,null,-1),m=n("hr",null,null,-1),v=n("ul",null,[n("li",null,[n("strong",null,"随机毒鸡汤"),a("：这次期末考，我会用实力告诉你们，我们这个年级一共有多少人。 "),n("br"),n("br"),n("img",{src:"https://tuapi.eees.cc/api.php?category=fengjing&type=302&uuid=9bfa545c-9840-4f3a-894c-0881c5e9e991",alt:"",loading:"lazy"})])],-1);function E(h,f){const s=i("RouterLink");return p(),l("div",null,[r,n("ul",null,[n("li",null,[t(s,{to:"/other/getPath%20vs%20getAbsolutePath%20vs%20getCanonicalPath.html"},{default:e(()=>[a("getPath vs getAbsolutePath vs getCanonicalPath")]),_:1})]),n("li",null,[t(s,{to:"/software/middleware/redis/Redis%E7%AC%94%E8%AE%B0.html"},{default:e(()=>[a("Redis笔记")]),_:1})]),n("li",null,[t(s,{to:"/other/MongoDB%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:e(()=>[a("MongoDB高可用")]),_:1})]),n("li",null,[t(s,{to:"/software/unclassified/Markdown%20Mermaid%E7%94%BB%E5%9B%BE%E5%AE%9E%E4%BE%8B.html"},{default:e(()=>[a("Markdown Mermaid画图实例")]),_:1})]),n("li",null,[t(s,{to:"/software/java-basic/IO%E7%9B%B8%E5%85%B3.html"},{default:e(()=>[a("IO相关")]),_:1})]),n("li",null,[t(s,{to:"/other/%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88.html"},{default:e(()=>[a("数据同步方案")]),_:1})]),n("li",null,[t(s,{to:"/software/shodowsocks/ShadowsockServerUpdatePort.html"},{default:e(()=>[a("ShadowsockServerUpdatePort")]),_:1})]),n("li",null,[t(s,{to:"/software/middleware/es/ES%E6%9D%82%E9%A1%B9.html"},{default:e(()=>[a("ES杂项")]),_:1})]),n("li",null,[t(s,{to:"/software/middleware/es/ESRally%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%AD%A5%E9%AA%A4.html"},{default:e(()=>[a("ESRally性能测试步骤")]),_:1})]),n("li",null,[t(s,{to:"/other/%E5%85%8D%E8%B4%B9%20API%20%E6%AF%8F%E6%97%A5%E6%8F%90%E4%BE%9B%E6%91%B8%E9%B1%BC%E6%97%A5%E6%8A%A5%EF%BC%8C%E8%87%AA%E5%8A%A8%E8%BF%94%E5%9B%9E%E6%97%A0%E6%B0%B4%E5%8D%B0%E5%9B%BE%E7%89%87%EF%BC%8C%E9%80%82%E7%94%A8%E4%BA%8E%E5%85%AC%E4%BC%97%E5%8F%B7%E5%92%8C%E5%B0%8F%E7%A8%8B%E5%BA%8F.html"},{default:e(()=>[a("免费 API 每日提供摸鱼日报，自动返回无水印图片，适用于公众号和小程序")]),_:1})]),n("li",null,[t(s,{to:"/software/docker/Docker%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E4%BF%A1%E6%96%B9%E6%A1%88.html"},{default:e(()=>[a("Docker跨主机通信方案")]),_:1})]),n("li",null,[t(s,{to:"/other/Hbase%20%E6%80%BB%E8%A7%88.html"},{default:e(()=>[a("Hbase 总览")]),_:1})])]),d,k,m,v])}const B=o(u,[["render",E],["__file","前端axios下载csv文件乱码.html.vue"]]);export{B as default};
