import{_ as n,$ as s,a0 as a,a1 as t,a3 as o,a4 as E,a2 as l,w as r}from"./framework-8c4427da.js";const i={},u=t("p",null,"代码如下：",-1),B=t("figure",null,[t("img",{src:"https://cdn.justdopay.top/xiaoshujiang/1629079150623.png",alt:"",tabindex:"0",loading:"lazy"}),t("figcaption")],-1),A=t("p",null,'上面的代码唯一不同的地方就是str采用的是new String("str1")的方式，而str2采用的是直接赋值的的方式。 后者会把字符串写入常量池中，而前者不会，所以导致输出结果不同。',-1),_=t("hr",null,null,-1),c=t("br",null,null,-1),d=t("h2",{id:"系统推荐",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#系统推荐","aria-hidden":"true"},"#"),l(" 系统推荐")],-1),h=t("p",null,[t("br"),t("br"),t("br"),t("br"),t("br"),t("br")],-1),m=t("hr",null,null,-1),f=t("hr",null,null,-1),p=t("ul",null,[t("li",null,[t("strong",null,"随机毒鸡汤"),l("：不开心了就喝两杯旺仔牛奶，把那些让人烦的孙子都忘了。 "),t("br"),t("br"),t("img",{src:"https://images.pexels.com/photos/6801872/pexels-photo-6801872.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"A person trading stocks using a smartphone, showcasing financial data on mobile and laptop screens.",loading:"lazy"})])],-1);function C(g,D){const e=r("RouterLink");return s(),a("div",null,[u,B,A,_,c,d,t("ul",null,[t("li",null,[o(e,{to:"/software/unclassified/Cordova+Umi%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4.html"},{default:E(()=>[l("Cordova+Umi项目搭建步骤")]),_:1})]),t("li",null,[o(e,{to:"/other/%E5%9C%A8%E6%B2%A1%E6%9C%89%20telnet%20%E5%92%8C%20nc%20%E7%9A%84%E4%B8%96%E7%95%8C%E9%87%8C%EF%BC%8C%E5%A6%82%E4%BD%95%E4%BC%98%E9%9B%85%E5%9C%B0%E5%88%A4%E6%96%AD%E7%AB%AF%E5%8F%A3%E6%98%AF%E5%90%A6%E9%80%9A%EF%BC%9F.html"},{default:E(()=>[l("在没有 telnet 和 nc 的世界里，如何优雅地判断端口是否通？")]),_:1})]),t("li",null,[o(e,{to:"/software/jvm/JVM%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html"},{default:E(()=>[l("JVM垃圾收集器")]),_:1})]),t("li",null,[o(e,{to:"/other/%E6%8F%90%E5%8F%96Docker%E9%95%9C%E5%83%8F%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6.html"},{default:E(()=>[l("提取Docker镜像中的文件")]),_:1})]),t("li",null,[o(e,{to:"/other/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Google%20BBR.html"},{default:E(()=>[l("如何安装Google BBR")]),_:1})]),t("li",null,[o(e,{to:"/software/unclassified/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F%E7%9A%84%E7%AC%94%E8%AE%B0.html"},{default:E(()=>[l("乱七八糟的笔记")]),_:1})]),t("li",null,[o(e,{to:"/other/Spring%20RetryTemplate.html"},{default:E(()=>[l("Spring RetryTemplate")]),_:1})]),t("li",null,[o(e,{to:"/other/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E6%8B%BC%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%90%97%EF%BC%9F.html"},{default:E(()=>[l("你真的会拼接字符串吗？")]),_:1})]),t("li",null,[o(e,{to:"/other/Git%20Merge%20%E3%80%81Rebase.html"},{default:E(()=>[l("Git Merge 、Rebase")]),_:1})]),t("li",null,[o(e,{to:"/intro.html"},{default:E(()=>[l("intro")]),_:1})]),t("li",null,[o(e,{to:"/software/docker/Docker%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E4%BF%A1%E6%96%B9%E6%A1%88.html"},{default:E(()=>[l("Docker跨主机通信方案")]),_:1})]),t("li",null,[o(e,{to:"/software/unclassified/%E6%89%B9%E9%87%8F%E6%9B%BF%E6%8D%A2%E6%96%87%E4%BB%B6%E5%90%8D%E4%B8%AD%E7%9A%84%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E4%B8%B2.html"},{default:E(()=>[l("批量替换文件名中的指定字符串")]),_:1})])]),h,m,f,p])}const b=n(i,[["render",C],["__file","弱引用示例.html.vue"]]);export{b as default};
