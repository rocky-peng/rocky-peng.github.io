import{_ as l,$ as d,a0 as c,a1 as e,a2 as a,a3 as t,a4 as o,a5 as s,w as i}from"./framework-b3a0f150.js";const h={},E=e("h2",{id:"重点关注的",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#重点关注的","aria-hidden":"true"},"#"),a(" 重点关注的")],-1),u={id:"可达性分析原理-三色标记",tabindex:"-1"},_=e("a",{class:"header-anchor",href:"#可达性分析原理-三色标记","aria-hidden":"true"},"#",-1),p={href:"https://www.cnblogs.com/jmcui/p/14165601.html",target:"_blank",rel:"noopener noreferrer"},b=e("figure",null,[e("img",{src:"https://cdn.justdopay.com/xiaoshujiang/7779607-eecbd09f81b721f8.gif",alt:"enter description here",tabindex:"0",loading:"lazy"}),e("figcaption",null,"enter description here")],-1),m=e("h3",{id:"原子性、有序性、可见性、as-if-serial、happen-before、sync、volatile的关系",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#原子性、有序性、可见性、as-if-serial、happen-before、sync、volatile的关系","aria-hidden":"true"},"#"),a(" 原子性、有序性、可见性、as-if-serial、happen-before、sync、volatile的关系")],-1),B={href:"https://blog.csdn.net/qq_33173608/article/details/88202474",target:"_blank",rel:"noopener noreferrer"},A=s('<figure><img src="https://cdn.justdopay.com/xiaoshujiang/1629078923957.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="https://cdn.justdopay.com/xiaoshujiang/1629078929462.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="sync与volatile的区别" tabindex="-1"><a class="header-anchor" href="#sync与volatile的区别" aria-hidden="true">#</a> sync与volatile的区别</h3><ul><li>sync可以保证原子、有序、可见性但不能阻止指令重排，volatile可以保证可见，也能阻止指令重排</li></ul><h3 id="concurrenthashmap" tabindex="-1"><a class="header-anchor" href="#concurrenthashmap" aria-hidden="true">#</a> ConcurrentHashMap</h3>',5),f={id:"concurrenthashmap-和-hashtable-的区别",tabindex:"-1"},g=e("a",{class:"header-anchor",href:"#concurrenthashmap-和-hashtable-的区别","aria-hidden":"true"},"#",-1),v={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/collection/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.md#concurrenthashmap-%E5%92%8C-hashtable-%E7%9A%84%E5%8C%BA%E5%88%AB",target:"_blank",rel:"noopener noreferrer"},k={id:"java集合框架常见面试题",tabindex:"-1"},x=e("a",{class:"header-anchor",href:"#java集合框架常见面试题","aria-hidden":"true"},"#",-1),F={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/collection/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.md",target:"_blank",rel:"noopener noreferrer"},j=e("figure",null,[e("img",{src:"https://cdn.justdopay.com/xiaoshujiang/1629078942754.png",alt:"ConcurrentHashMap结构.jpg",tabindex:"0",loading:"lazy"}),e("figcaption",null,"ConcurrentHashMap结构.jpg")],-1),y={id:"jdk1-8中的concurrenthashmap的死循环",tabindex:"-1"},C=e("a",{class:"header-anchor",href:"#jdk1-8中的concurrenthashmap的死循环","aria-hidden":"true"},"#",-1),J={href:"https://blog.csdn.net/java3456/article/details/107129716/",target:"_blank",rel:"noopener noreferrer"},w=e("h3",{id:"为啥1-8的concurrenthashmap需要通过sync和cas来实现同步而不直接采用cas呢",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#为啥1-8的concurrenthashmap需要通过sync和cas来实现同步而不直接采用cas呢","aria-hidden":"true"},"#"),a(" 为啥1.8的ConcurrentHashMap需要通过sync和cas来实现同步而不直接采用cas呢？")],-1),S={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/%E5%B9%B6%E5%8F%91%E5%AE%B9%E5%99%A8%E6%80%BB%E7%BB%93.md#%E5%9B%9B-concurrentlinkedqueue",target:"_blank",rel:"noopener noreferrer"},G={id:"hashmap的resize细节",tabindex:"-1"},D=e("a",{class:"header-anchor",href:"#hashmap的resize细节","aria-hidden":"true"},"#",-1),M={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/collection/HashMap.md#resize%E6%96%B9%E6%B3%95",target:"_blank",rel:"noopener noreferrer"},q={id:"explain",tabindex:"-1"},Q=e("a",{class:"header-anchor",href:"#explain","aria-hidden":"true"},"#",-1),z={href:"https://www.cnblogs.com/tufujie/p/9413852.html",target:"_blank",rel:"noopener noreferrer"},L={id:"es打分相关性",tabindex:"-1"},I=e("a",{class:"header-anchor",href:"#es打分相关性","aria-hidden":"true"},"#",-1),R={href:"https://zhuanlan.zhihu.com/p/27951938",target:"_blank",rel:"noopener noreferrer"},H=e("h3",{id:"a-b-c建立联合索引顺序是abc-问a-and-c-可以走索引吗",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#a-b-c建立联合索引顺序是abc-问a-and-c-可以走索引吗","aria-hidden":"true"},"#"),a(" a b c建立联合索引顺序是abc，问a=? and c = ? 可以走索引吗？")],-1),O=e("pre",null,[e("code",null,`可以的，但是走索引的时候的比对条件是a，先找到满足a条件后通过using where过滤掉不满足c的数据。
`)],-1),X={id:"base理论",tabindex:"-1"},N=e("a",{class:"header-anchor",href:"#base理论","aria-hidden":"true"},"#",-1),P={href:"https://www.cnblogs.com/stateis0/p/9062123.html",target:"_blank",rel:"noopener noreferrer"},V={id:"cap理论",tabindex:"-1"},K=e("a",{class:"header-anchor",href:"#cap理论","aria-hidden":"true"},"#",-1),T={href:"https://www.cnblogs.com/chihirotan/p/11366394.html",target:"_blank",rel:"noopener noreferrer"},U=s('<h3 id="jvm调优" tabindex="-1"><a class="header-anchor" href="#jvm调优" aria-hidden="true">#</a> JVM调优</h3><ul><li>阿里巴巴数据库连接池的fullgc</li><li>显示CPU 100% <ul><li>大概场景是一个同事写了一个循环函数，跳出循环的代码逻辑有点问题，导致无法退出循环，最终导致cpu 100%。</li><li>具体场景出来：</li><li>top -Hp pid 找到cpu最高的线程id，是线程id;</li><li>printf &#39;%x&#39; 线程id，得到线程id的16进制</li><li>jstack pid | grep -A 20 线程id的16进制，找到线程执行的具体代码，检查代码</li></ul></li><li>jvm内存大小的调优</li><li>GC调优：垃圾收集器的调优</li></ul><h2 id="知识列表" tabindex="-1"><a class="header-anchor" href="#知识列表" aria-hidden="true">#</a> 知识列表</h2>',3),W={id:"string-stringbuffer-和-stringbuilder-的区别是什么-string-为什么是不可变的",tabindex:"-1"},$=e("a",{class:"header-anchor",href:"#string-stringbuffer-和-stringbuilder-的区别是什么-string-为什么是不可变的","aria-hidden":"true"},"#",-1),Y={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#12-string-stringbuffer-%E5%92%8C-stringbuilder-%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88-string-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%E4%B8%8D%E5%8F%AF%E5%8F%98%E7%9A%84",target:"_blank",rel:"noopener noreferrer"},Z=e("h3",{id:"string为啥要设计为不可变",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#string为啥要设计为不可变","aria-hidden":"true"},"#"),a(" String为啥要设计为不可变")],-1),ee=e("figure",null,[e("img",{src:"https://cdn.justdopay.com/xiaoshujiang/1629078961400.png",alt:"enter description here",tabindex:"0",loading:"lazy"}),e("figcaption",null,"enter description here")],-1),ae={id:"接口和抽象类的区别是什么",tabindex:"-1"},te=e("a",{class:"header-anchor",href:"#接口和抽象类的区别是什么","aria-hidden":"true"},"#",-1),ne={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#17-%E6%8E%A5%E5%8F%A3%E5%92%8C%E6%8A%BD%E8%B1%A1%E7%B1%BB%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"},re={id:"与-equals-重要",tabindex:"-1"},oe=e("a",{class:"header-anchor",href:"#与-equals-重要","aria-hidden":"true"},"#",-1),se={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#26--%E4%B8%8E-equals%E9%87%8D%E8%A6%81",target:"_blank",rel:"noopener noreferrer"},ie={id:"hashcode-与-equals-重要",tabindex:"-1"},le=e("a",{class:"header-anchor",href:"#hashcode-与-equals-重要","aria-hidden":"true"},"#",-1),de={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#27-hashcode-%E4%B8%8E-equals-%E9%87%8D%E8%A6%81",target:"_blank",rel:"noopener noreferrer"},ce={id:"简述线程、程序、进程的基本概念。以及他们之间关系是什么",tabindex:"-1"},he=e("a",{class:"header-anchor",href:"#简述线程、程序、进程的基本概念。以及他们之间关系是什么","aria-hidden":"true"},"#",-1),Ee={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#29-%E7%AE%80%E8%BF%B0%E7%BA%BF%E7%A8%8B%E7%A8%8B%E5%BA%8F%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5%E4%BB%A5%E5%8F%8A%E4%BB%96%E4%BB%AC%E4%B9%8B%E9%97%B4%E5%85%B3%E7%B3%BB%E6%98%AF%E4%BB%80%E4%B9%88",target:"_blank",rel:"noopener noreferrer"},ue={id:"线程有哪些基本状态",tabindex:"-1"},_e=e("a",{class:"header-anchor",href:"#线程有哪些基本状态","aria-hidden":"true"},"#",-1),pe={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#30-%E7%BA%BF%E7%A8%8B%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9F%BA%E6%9C%AC%E7%8A%B6%E6%80%81",target:"_blank",rel:"noopener noreferrer"},be={id:"java序列化中如果有些字段不想进行序列化-怎么办",tabindex:"-1"},me=e("a",{class:"header-anchor",href:"#java序列化中如果有些字段不想进行序列化-怎么办","aria-hidden":"true"},"#",-1),Be={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#33-java%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%AD%E5%A6%82%E6%9E%9C%E6%9C%89%E4%BA%9B%E5%AD%97%E6%AE%B5%E4%B8%8D%E6%83%B3%E8%BF%9B%E8%A1%8C%E5%BA%8F%E5%88%97%E5%8C%96%E6%80%8E%E4%B9%88%E5%8A%9E",target:"_blank",rel:"noopener noreferrer"},Ae={id:"java-中-io-流",tabindex:"-1"},fe=e("a",{class:"header-anchor",href:"#java-中-io-流","aria-hidden":"true"},"#",-1),ge={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#35-java-%E4%B8%AD-io-%E6%B5%81",target:"_blank",rel:"noopener noreferrer"},ve={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#java-%E4%B8%AD-io-%E6%B5%81%E5%88%86%E4%B8%BA%E5%87%A0%E7%A7%8D",target:"_blank",rel:"noopener noreferrer"},ke={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#bionioaio-%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB",target:"_blank",rel:"noopener noreferrer"},xe={href:"https://github.com/rocky-peng/xiaoshujiang/blob/master/IO.md",target:"_blank",rel:"noopener noreferrer"},Fe={href:"https://www.cnblogs.com/aspirant/p/9166944.html",target:"_blank",rel:"noopener noreferrer"},je={id:"深拷贝-vs-浅拷贝",tabindex:"-1"},ye=e("a",{class:"header-anchor",href:"#深拷贝-vs-浅拷贝","aria-hidden":"true"},"#",-1),Ce={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#38-%E6%B7%B1%E6%8B%B7%E8%B4%9D-vs-%E6%B5%85%E6%8B%B7%E8%B4%9D",target:"_blank",rel:"noopener noreferrer"},Je={id:"bigdecimal-的用处",tabindex:"-1"},we=e("a",{class:"header-anchor",href:"#bigdecimal-的用处","aria-hidden":"true"},"#",-1),Se={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E7%96%91%E9%9A%BE%E7%82%B9.md#131-bigdecimal-%E7%9A%84%E7%94%A8%E5%A4%84",target:"_blank",rel:"noopener noreferrer"},Ge={id:"bigdecimal-的使用注意事项",tabindex:"-1"},De=e("a",{class:"header-anchor",href:"#bigdecimal-的使用注意事项","aria-hidden":"true"},"#",-1),Me={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E7%96%91%E9%9A%BE%E7%82%B9.md#134-bigdecimal-%E7%9A%84%E4%BD%BF%E7%94%A8%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9",target:"_blank",rel:"noopener noreferrer"},qe={id:"arrays-aslist注意事项",tabindex:"-1"},Qe=e("a",{class:"header-anchor",href:"#arrays-aslist注意事项","aria-hidden":"true"},"#",-1),ze={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Java%E7%96%91%E9%9A%BE%E7%82%B9.md#213-%E4%BD%BF%E7%94%A8%E6%97%B6%E7%9A%84%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9%E6%80%BB%E7%BB%93",target:"_blank",rel:"noopener noreferrer"},Le={id:"get和post请求的区别",tabindex:"-1"},Ie=e("a",{class:"header-anchor",href:"#get和post请求的区别","aria-hidden":"true"},"#",-1),Re={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#get%E5%92%8Cpost%E8%AF%B7%E6%B1%82%E7%9A%84%E5%8C%BA%E5%88%AB",target:"_blank",rel:"noopener noreferrer"},He={id:"转发-forward-和重定向-redirect-的区别",tabindex:"-1"},Oe=e("a",{class:"header-anchor",href:"#转发-forward-和重定向-redirect-的区别","aria-hidden":"true"},"#",-1),Xe={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#%E8%BD%AC%E5%8F%91forward%E5%92%8C%E9%87%8D%E5%AE%9A%E5%90%91redirect%E7%9A%84%E5%8C%BA%E5%88%AB",target:"_blank",rel:"noopener noreferrer"},Ne={id:"cookie和session的的区别",tabindex:"-1"},Pe=e("a",{class:"header-anchor",href:"#cookie和session的的区别","aria-hidden":"true"},"#",-1),Ve={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/J2EE%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.md#cookie%E5%92%8Csession%E7%9A%84%E7%9A%84%E5%8C%BA%E5%88%AB",target:"_blank",rel:"noopener noreferrer"},Ke={id:"说说list-set-map三者的区别",tabindex:"-1"},Te=e("a",{class:"header-anchor",href:"#说说list-set-map三者的区别","aria-hidden":"true"},"#",-1),Ue={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/collection/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.md#%E8%AF%B4%E8%AF%B4listsetmap%E4%B8%89%E8%80%85%E7%9A%84%E5%8C%BA%E5%88%AB",target:"_blank",rel:"noopener noreferrer"},We={id:"说一说-arraylist-的扩容机制吧",tabindex:"-1"},$e=e("a",{class:"header-anchor",href:"#说一说-arraylist-的扩容机制吧","aria-hidden":"true"},"#",-1),Ye={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/collection/ArrayList-Grow.md",target:"_blank",rel:"noopener noreferrer"},Ze={id:"hashmap的底层实现",tabindex:"-1"},ea=e("a",{class:"header-anchor",href:"#hashmap的底层实现","aria-hidden":"true"},"#",-1),aa={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/collection/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.md#hashmap%E7%9A%84%E5%BA%95%E5%B1%82%E5%AE%9E%E7%8E%B0",target:"_blank",rel:"noopener noreferrer"},ta={id:"hashmap-多线程操作导致rehash方法死循环问题-jdk1-8之前",tabindex:"-1"},na=e("a",{class:"header-anchor",href:"#hashmap-多线程操作导致rehash方法死循环问题-jdk1-8之前","aria-hidden":"true"},"#",-1),ra={href:"https://blog.csdn.net/gupaoedu_tom/article/details/124449573",target:"_blank",rel:"noopener noreferrer"},oa={id:"集合框架底层数据结构总结",tabindex:"-1"},sa=e("a",{class:"header-anchor",href:"#集合框架底层数据结构总结","aria-hidden":"true"},"#",-1),ia={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/collection/Java%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%B8%B8%E8%A7%81%E9%9D%A2%E8%AF%95%E9%A2%98.md#%E9%9B%86%E5%90%88%E6%A1%86%E6%9E%B6%E5%BA%95%E5%B1%82%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E6%80%BB%E7%BB%93",target:"_blank",rel:"noopener noreferrer"},la={id:"什么是线程和进程",tabindex:"-1"},da=e("a",{class:"header-anchor",href:"#什么是线程和进程","aria-hidden":"true"},"#",-1),ca={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/JavaConcurrencyBasicsCommonInterviewQuestionsSummary.md#1-%E4%BB%80%E4%B9%88%E6%98%AF%E7%BA%BF%E7%A8%8B%E5%92%8C%E8%BF%9B%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"},ha={id:"说说-sleep-方法和-wait-方法区别和共同点",tabindex:"-1"},Ea=e("a",{class:"header-anchor",href:"#说说-sleep-方法和-wait-方法区别和共同点","aria-hidden":"true"},"#",-1),ua={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/JavaConcurrencyBasicsCommonInterviewQuestionsSummary.md#9-%E8%AF%B4%E8%AF%B4-sleep-%E6%96%B9%E6%B3%95%E5%92%8C-wait-%E6%96%B9%E6%B3%95%E5%8C%BA%E5%88%AB%E5%92%8C%E5%85%B1%E5%90%8C%E7%82%B9",target:"_blank",rel:"noopener noreferrer"},_a={id:"谈谈你对sync的理解",tabindex:"-1"},pa=e("a",{class:"header-anchor",href:"#谈谈你对sync的理解","aria-hidden":"true"},"#",-1),ba={href:"https://blog.csdn.net/wilsonpeng3/article/details/102961874",target:"_blank",rel:"noopener noreferrer"},ma={id:"谈谈-synchronized和reentrantlock-的区别",tabindex:"-1"},Ba=e("a",{class:"header-anchor",href:"#谈谈-synchronized和reentrantlock-的区别","aria-hidden":"true"},"#",-1),Aa={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/JavaConcurrencyAdvancedCommonInterviewQuestions.md#15-%E8%B0%88%E8%B0%88-synchronized%E5%92%8Creentrantlock-%E7%9A%84%E5%8C%BA%E5%88%AB",target:"_blank",rel:"noopener noreferrer"},fa=s(`<div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code>两者都是可重入的

sync是基于jvm实现的，是隐式锁，而<span class="token class-name">ReentrantLock</span>是基于java api实现的，是显式锁。

性能方便sync做了很多优化措施，差不多

<span class="token class-name">ReentrantLock</span> 比 <span class="token keyword">synchronized</span> 更加灵活（主要是<span class="token class-name">Lock</span>接口里的几个方法展开说就可以了）

<span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">Lock</span> <span class="token punctuation">{</span>

    <span class="token keyword">void</span> <span class="token function">lock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">lockInterruptibly</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>

    <span class="token keyword">boolean</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">boolean</span> <span class="token function">tryLock</span><span class="token punctuation">(</span><span class="token keyword">long</span> time<span class="token punctuation">,</span> <span class="token class-name">TimeUnit</span> unit<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">InterruptedException</span><span class="token punctuation">;</span>

    <span class="token keyword">void</span> <span class="token function">unlock</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token class-name">Condition</span> <span class="token function">newCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),ga={id:"volatile关键字",tabindex:"-1"},va=e("a",{class:"header-anchor",href:"#volatile关键字","aria-hidden":"true"},"#",-1),ka={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/JavaConcurrencyAdvancedCommonInterviewQuestions.md#2-volatile%E5%85%B3%E9%94%AE%E5%AD%97",target:"_blank",rel:"noopener noreferrer"},xa={id:"threadlocal",tabindex:"-1"},Fa=e("a",{class:"header-anchor",href:"#threadlocal","aria-hidden":"true"},"#",-1),ja={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/JavaConcurrencyAdvancedCommonInterviewQuestions.md#31-threadlocal%E7%AE%80%E4%BB%8B",target:"_blank",rel:"noopener noreferrer"},ya=e("ul",null,[e("li",null,[e("strong",null,"一句话总结"),a("：让线程可以绑定只有自己才能访问的数据")])],-1),Ca={id:"一篇文章彻底了解threadpoolexecutor",tabindex:"-1"},Ja=e("a",{class:"header-anchor",href:"#一篇文章彻底了解threadpoolexecutor","aria-hidden":"true"},"#",-1),wa={href:"https://blog.csdn.net/wilsonpeng3/article/details/52561716",target:"_blank",rel:"noopener noreferrer"},Sa={id:"juc-包中的原子类是哪4类",tabindex:"-1"},Ga=e("a",{class:"header-anchor",href:"#juc-包中的原子类是哪4类","aria-hidden":"true"},"#",-1),Da={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/JavaConcurrencyAdvancedCommonInterviewQuestions.md#52-juc-%E5%8C%85%E4%B8%AD%E7%9A%84%E5%8E%9F%E5%AD%90%E7%B1%BB%E6%98%AF%E5%93%AA4%E7%B1%BB",target:"_blank",rel:"noopener noreferrer"},Ma={id:"也许是把aqs讲得最通俗易懂的一篇文章",tabindex:"-1"},qa=e("a",{class:"header-anchor",href:"#也许是把aqs讲得最通俗易懂的一篇文章","aria-hidden":"true"},"#",-1),Qa={href:"https://github.com/rocky-peng/xiaoshujiang/blob/master/juc/AQS%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.md",target:"_blank",rel:"noopener noreferrer"},za={id:"aqs-组件总结",tabindex:"-1"},La=e("a",{class:"header-anchor",href:"#aqs-组件总结","aria-hidden":"true"},"#",-1),Ia={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/JavaConcurrencyAdvancedCommonInterviewQuestions.md#63-aqs-%E7%BB%84%E4%BB%B6%E6%80%BB%E7%BB%93",target:"_blank",rel:"noopener noreferrer"},Ra={id:"copyonwritearraylist",tabindex:"-1"},Ha=e("a",{class:"header-anchor",href:"#copyonwritearraylist","aria-hidden":"true"},"#",-1),Oa={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/%E5%B9%B6%E5%8F%91%E5%AE%B9%E5%99%A8%E6%80%BB%E7%BB%93.md#%E4%B8%89-copyonwritearraylist",target:"_blank",rel:"noopener noreferrer"},Xa={id:"并发容器总结",tabindex:"-1"},Na=e("a",{class:"header-anchor",href:"#并发容器总结","aria-hidden":"true"},"#",-1),Pa={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/%E5%B9%B6%E5%8F%91%E5%AE%B9%E5%99%A8%E6%80%BB%E7%BB%93.md",target:"_blank",rel:"noopener noreferrer"},Va={id:"跳表",tabindex:"-1"},Ka=e("a",{class:"header-anchor",href:"#跳表","aria-hidden":"true"},"#",-1),Ta={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/Multithread/%E5%B9%B6%E5%8F%91%E5%AE%B9%E5%99%A8%E6%80%BB%E7%BB%93.md#%E5%85%AD-concurrentskiplistmap",target:"_blank",rel:"noopener noreferrer"},Ua=e("h3",{id:"每个栈帧中都拥有-局部变量表、操作数栈、动态链接、方法出口信息",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#每个栈帧中都拥有-局部变量表、操作数栈、动态链接、方法出口信息","aria-hidden":"true"},"#"),a(" 每个栈帧中都拥有：局部变量表、操作数栈、动态链接、方法出口信息")],-1),Wa={id:"类加载器",tabindex:"-1"},$a=e("a",{class:"header-anchor",href:"#类加载器","aria-hidden":"true"},"#",-1),Ya={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/java/jvm/%E7%B1%BB%E5%8A%A0%E8%BD%BD%E5%99%A8.md",target:"_blank",rel:"noopener noreferrer"},Za={id:"计算机网络常见面试题",tabindex:"-1"},et=e("a",{class:"header-anchor",href:"#计算机网络常见面试题","aria-hidden":"true"},"#",-1),at={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/network/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C.md",target:"_blank",rel:"noopener noreferrer"},tt={id:"不了解布隆过滤器-一文给你整的明明白白",tabindex:"-1"},nt=e("a",{class:"header-anchor",href:"#不了解布隆过滤器-一文给你整的明明白白","aria-hidden":"true"},"#",-1),rt={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/dataStructures-algorithms/data-structure/bloom-filter.md",target:"_blank",rel:"noopener noreferrer"},ot=s('<h3 id="为啥选用rocketmq不用rabbitmq" tabindex="-1"><a class="header-anchor" href="#为啥选用rocketmq不用rabbitmq" aria-hidden="true">#</a> 为啥选用RocketMQ不用RabbitMQ</h3><ol><li><p>吞吐量比RabbitMQ高（Kafka: 16-17w；RocketMQ:11-12w；RabbitMQ: 2-3W）</p></li><li><p>支持顺序消息</p></li><li><p>JAVA语言开发，经受住双十一的考验的</p></li><li><p>支持分布式部署，在可用性方便比RabbitMQ高。RabbitMQ是主从架构</p></li><li><p>信息丢失方面可以通过0丢失（设置同步刷盘也能不丢失）</p></li></ol><h3 id="rocketmq是如何保证高可用的" tabindex="-1"><a class="header-anchor" href="#rocketmq是如何保证高可用的" aria-hidden="true">#</a> RocketMQ是如何保证高可用的？</h3><ol><li><p>从部署架构上说，可以部署多个brocker，把同一个topic的中队列分布在多个brocker上，这样可以减轻某个单台brocker的压力。同时多个brocker还可以各自做一个主从结构，这样如果某个brocker master挂了，其对应的slave也可以顶上来。</p></li><li><p>然后除了brocker可以做集群，还可以nameserver也可以做集群。namaserver集群中各个nameserver是互相独立的，每个brocker会和每个namaserver保持连接，并定期发送心跳、topic等路由信息。另外生产者和消费者也会定期从nameserver中拉去brocker的路由信息。这样，即便某个nameserver挂了，其他的nameserver也能顶上来。在坏一点，如果所有nameserver都挂了，那么生产者和消息者还可以利用本地保留的路由副本和brocker保持通信。</p></li><li><p>上面是从部署架构上说，从单台brocker方面而言，其刷盘的方式也可供我们选择。如果选择同步刷盘，还可以保证消息不会丢失。</p></li><li><p>另外brocker的主从结构也提供了同步复制和异步复制两种方式可供选择，这从一定程度上也保证了可用性</p></li></ol><h3 id="kafka如何保证消息不丢失" tabindex="-1"><a class="header-anchor" href="#kafka如何保证消息不丢失" aria-hidden="true">#</a> kafka如何保证消息不丢失</h3>',5),st={id:"rockermq为啥采用nameserver作为注册中心而不是zk",tabindex:"-1"},it=e("a",{class:"header-anchor",href:"#rockermq为啥采用nameserver作为注册中心而不是zk","aria-hidden":"true"},"#",-1),lt={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/system-design/data-communication/RocketMQ-Questions.md#2110-rocketmq-%E4%B8%8D%E4%BD%BF%E7%94%A8-zookeeper-%E4%BD%9C%E4%B8%BA%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E7%9A%84%E5%8E%9F%E5%9B%A0%E4%BB%A5%E5%8F%8A%E8%87%AA%E5%88%B6%E7%9A%84-nameserver-%E4%BC%98%E7%BC%BA%E7%82%B9",target:"_blank",rel:"noopener noreferrer"},dt={id:"rocketmq的存储机制",tabindex:"-1"},ct=e("a",{class:"header-anchor",href:"#rocketmq的存储机制","aria-hidden":"true"},"#",-1),ht={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/system-design/data-communication/RocketMQ.md#%E5%AD%98%E5%82%A8%E6%9C%BA%E5%88%B6",target:"_blank",rel:"noopener noreferrer"},Et=e("ul",null,[e("li",null,[e("p",null,[a("把所有接受到的消息 "),e("strong",null,"（不区分topic）"),a(" 都顺序的存在一个称为commitlog的文件中（物理不是一个文件）. 为啥不分topic: 为了批量顺序写消息，提高写入速度")])]),e("li",null,[e("p",null,"consumequeue文件中的目录采用定长设计（8字节物理偏移量，4字节消息大小，8字节tag的hashcode）。这里的物理偏移量不是相对于某个具体commitlog文件，而是性对于整个commitlog文件（就是把所有单个commitlog合在一起看）")]),e("li",null,[e("p",null,[a("consumerqueue的存在路径是：$HOME/store/consumequeue/{topic}/{queueId}/{fileName}，也就是说当某个消息来了，rocketmq会先追加到commitlog中，然后根据这条消息要发往的topic和queueid信息再把这小消息的索引信息写到对应的consumequeue中 "),e("img",{src:"https://cdn.justdopay.com/xiaoshujiang/1629083802788.png",alt:"enter description here",loading:"lazy"})])])],-1),ut={id:"kafka的存储结构",tabindex:"-1"},_t=e("a",{class:"header-anchor",href:"#kafka的存储结构","aria-hidden":"true"},"#",-1),pt={href:"https://github.com/Snailclimb/JavaGuide/blob/master/docs/system-design/data-communication/Kafka%E5%85%A5%E9%97%A8%E7%9C%8B%E8%BF%99%E4%B8%80%E7%AF%87%E5%B0%B1%E5%A4%9F%E4%BA%86.md#%E8%AE%A8%E8%AE%BA%E4%BA%8Ckafka-%E4%B8%AD%E7%9A%84%E5%BA%95%E5%B1%82%E5%AD%98%E5%82%A8%E8%AE%BE%E8%AE%A1",target:"_blank",rel:"noopener noreferrer"},bt=e("figure",null,[e("img",{src:"https://cdn.justdopay.com/xiaoshujiang/1629083785626.png",alt:"enter description here",tabindex:"0",loading:"lazy"}),e("figcaption",null,"enter description here")],-1),mt=e("figure",null,[e("img",{src:"https://cdn.justdopay.com/xiaoshujiang/1629083773704.png",alt:"enter description here",tabindex:"0",loading:"lazy"}),e("figcaption",null,"enter description here")],-1),Bt=e("p",null,"所以当要读取第n个消息的时候，只需要对index或者log文件的文件名进行二分查找，这样可以确定在哪个log文件中，然后在对应的index文件中在进行一次二分查找，就可以确定这条消息在log文件中的物理偏移量了",-1),At={id:"b数和b-数的区别",tabindex:"-1"},ft=e("a",{class:"header-anchor",href:"#b数和b-数的区别","aria-hidden":"true"},"#",-1),gt={href:"https://www.cnblogs.com/xueqiuqiu/articles/8779029.html",target:"_blank",rel:"noopener noreferrer"},vt=s('<ul><li><p>B数</p><ul><li><p>关键字集合分布在整颗树中；</p></li><li><p>任何一个关键字出现且只出现在一个结点中；</p></li><li><p>搜索有可能在非叶子结点结束；</p></li></ul><figure><img src="https://cdn.justdopay.com/xiaoshujiang/1629079002404.png" alt="enter description here" tabindex="0" loading="lazy"><figcaption>enter description here</figcaption></figure></li><li><p>b+树相比于b树的查询优势：</p><ul><li><p>b+树的中间节点不保存数据，所以磁盘页能容纳更多节点元素，更“矮胖”；</p></li><li><p>b+树查询必须查找到叶子节点，b树只要匹配到即可不用管元素位置，因此b+树查找更稳定（并不慢）；</p></li><li><p>对于范围查找来说，b+树只需遍历叶子节点链表即可，b树却需要重复地中序遍历，如下两图： <img src="https://cdn.justdopay.com/xiaoshujiang/1629079028387.png" alt="enter description here" loading="lazy"></p></li></ul></li></ul>',1),kt={id:"java栈数据结构",tabindex:"-1"},xt=e("a",{class:"header-anchor",href:"#java栈数据结构","aria-hidden":"true"},"#",-1),Ft={href:"https://www.cnblogs.com/noKing/p/8167700.html",target:"_blank",rel:"noopener noreferrer"},jt={id:"限流算法",tabindex:"-1"},yt=e("a",{class:"header-anchor",href:"#限流算法","aria-hidden":"true"},"#",-1),Ct={href:"https://blog.csdn.net/weixin_41846320/article/details/95941361",target:"_blank",rel:"noopener noreferrer"},Jt={href:"https://www.jianshu.com/p/88ff90519ab1",target:"_blank",rel:"noopener noreferrer"},wt={href:"https://baijiahao.baidu.com/s?id=1634400719648980722&wfr=spider&for=pc",target:"_blank",rel:"noopener noreferrer"},St={id:"熔断器",tabindex:"-1"},Gt=e("a",{class:"header-anchor",href:"#熔断器","aria-hidden":"true"},"#",-1),Dt={href:"https://baijiahao.baidu.com/s?id=1623004854011062838&wfr=spider&for=pc",target:"_blank",rel:"noopener noreferrer"},Mt={id:"https的原理",tabindex:"-1"},qt=e("a",{class:"header-anchor",href:"#https的原理","aria-hidden":"true"},"#",-1),Qt={href:"https://blog.csdn.net/wilsonpeng3/article/details/109096679",target:"_blank",rel:"noopener noreferrer"},zt={id:"spring-boot自动装配的原理",tabindex:"-1"},Lt=e("a",{class:"header-anchor",href:"#spring-boot自动装配的原理","aria-hidden":"true"},"#",-1),It={href:"https://zhuanlan.zhihu.com/p/80384308",target:"_blank",rel:"noopener noreferrer"},Rt=e("ol",null,[e("li",null,"SpringApplicationn.run(XXXX.class)"),e("li",null,"读到XXXX.class上SpringBootApplication注解"),e("li",null,"读到SpringBootApplication类上的EnableAutoConfiguration注解"),e("li",null,"读到EnableAutoConfiguration类上的Import注解，和AutoConfigurationImportSelector类"),e("li",null,"AutoConfigurationImportSelector的有个方法会扫描类路径下的所有META-INF/spring.factories文件"),e("li",null,"这个文件里可以配置多个第三方类，通过这种方式类触发第三方框架集成到Spring中，包括读取自己的配置文件")],-1),Ht=e("br",null,null,-1),Ot=e("h2",{id:"系统推荐",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#系统推荐","aria-hidden":"true"},"#"),a(" 系统推荐")],-1),Xt=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),Nt=e("hr",null,null,-1),Pt=e("hr",null,null,-1),Vt=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),a("：什么叫不自量力？不要自学量子力学。 "),e("br"),e("br"),e("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=fa9416a9-4f1f-474d-bb51-23a5dc3107ba",alt:"",loading:"lazy"})])],-1);function Kt(Tt,Ut){const n=i("ExternalLinkIcon"),r=i("RouterLink");return d(),c("div",null,[E,e("h3",u,[_,a(" 可达性分析原理："),e("a",p,[a("三色标记"),t(n)])]),b,m,e("ul",null,[e("li",null,[e("a",B,[a("https://blog.csdn.net/qq_33173608/article/details/88202474"),t(n)])])]),A,e("h3",f,[g,a(),e("a",v,[a("ConcurrentHashMap 和 Hashtable 的区别"),t(n)])]),e("h3",k,[x,a(),e("a",F,[a("Java集合框架常见面试题"),t(n)])]),j,e("h3",y,[C,a(),e("a",J,[a("JDK1.8中的ConcurrentHashMap的死循环"),t(n)])]),w,e("p",null,[a("因为如果某个桶是红黑树的结构，这个时候可能需要对整棵树进行调整，所以它锁的是桶的首节点。"),e("a",S,[a("ConcurrentLinkedQueue就只是通过cas来完成的"),t(n)])]),e("h3",G,[D,a(),e("a",M,[a("HashMap的resize细节"),t(n)])]),e("h3",q,[Q,a(),e("a",z,[a("Explain"),t(n)])]),e("h3",L,[I,a(),e("a",R,[a("ES打分相关性"),t(n)])]),H,O,e("h3",X,[N,a(),e("a",P,[a("BASE理论"),t(n)])]),e("h3",V,[K,a(),e("a",T,[a("CAP理论"),t(n)])]),U,e("h3",W,[$,a(),e("a",Y,[a("String StringBuffer 和 StringBuilder 的区别是什么? String 为什么是不可变的?"),t(n)])]),Z,ee,e("h3",ae,[te,a(),e("a",ne,[a("接口和抽象类的区别是什么？"),t(n)])]),e("h3",re,[oe,a(),e("a",se,[a("== 与 equals(重要)"),t(n)])]),e("h3",ie,[le,a(),e("a",de,[a("hashCode 与 equals (重要)"),t(n)])]),e("h3",ce,[he,a(),e("a",Ee,[a("简述线程、程序、进程的基本概念。以及他们之间关系是什么?"),t(n)])]),e("h3",ue,[_e,a(),e("a",pe,[a("线程有哪些基本状态?"),t(n)])]),e("h3",be,[me,a(),e("a",Be,[a("Java序列化中如果有些字段不想进行序列化，怎么办？"),t(n)])]),e("h3",Ae,[fe,a(),e("a",ge,[a("Java 中 IO 流"),t(n)])]),e("ul",null,[e("li",null,[e("p",null,[e("a",ve,[a("Java 中 IO 流分为几种?"),t(n)])])]),e("li",null,[e("p",null,[e("a",ke,[a("BIO,NIO,AIO 有什么区别?"),t(n)])])]),e("li",null,[e("p",null,[e("a",xe,[a("5种IO模型"),t(n)])])]),e("li",null,[e("p",null,[e("a",Fe,[a("select、poll、epoll之间的区别"),t(n)])])])]),e("h3",je,[ye,a(),e("a",Ce,[a("深拷贝 vs 浅拷贝"),t(n)])]),e("h3",Je,[we,a(),e("a",Se,[a("BigDecimal 的用处"),t(n)])]),e("h3",Ge,[De,a(),e("a",Me,[a("BigDecimal 的使用注意事项"),t(n)])]),e("h3",qe,[Qe,a(),e("a",ze,[a("Arrays.asList注意事项"),t(n)])]),e("h3",Le,[Ie,a(),e("a",Re,[a("get和post请求的区别"),t(n)])]),e("h3",He,[Oe,a(),e("a",Xe,[a("转发(Forward)和重定向(Redirect)的区别"),t(n)])]),e("h3",Ne,[Pe,a(),e("a",Ve,[a("Cookie和Session的的区别"),t(n)])]),e("h3",Ke,[Te,a(),e("a",Ue,[a("说说List,Set,Map三者的区别？"),t(n)])]),e("h3",We,[$e,a(),e("a",Ye,[a("说一说 ArrayList 的扩容机制吧"),t(n)])]),e("h3",Ze,[ea,a(),e("a",aa,[a("HashMap的底层实现"),t(n)])]),e("h3",ta,[na,a(),e("a",ra,[a("HashMap 多线程操作导致rehash方法死循环问题,jdk1.8之前"),t(n)])]),e("h3",oa,[sa,a(),e("a",ia,[a("集合框架底层数据结构总结"),t(n)])]),e("h3",la,[da,a(),e("a",ca,[a("什么是线程和进程?"),t(n)])]),e("h3",ha,[Ea,a(),e("a",ua,[a("说说 sleep() 方法和 wait() 方法区别和共同点?"),t(n)])]),e("h3",_a,[pa,a(),e("a",ba,[a("谈谈你对sync的理解"),t(n)])]),e("h3",ma,[Ba,a(),e("a",Aa,[a("谈谈 synchronized和ReentrantLock 的区别"),t(n)])]),fa,e("h3",ga,[va,a(),e("a",ka,[a("volatile关键字"),t(n)])]),e("h3",xa,[Fa,a(),e("a",ja,[a("ThreadLocal"),t(n)])]),ya,e("h3",Ca,[Ja,a(),e("a",wa,[a("一篇文章彻底了解ThreadPoolExecutor"),t(n)])]),e("h3",Sa,[Ga,a(),e("a",Da,[a("JUC 包中的原子类是哪4类?"),t(n)])]),e("h3",Ma,[qa,a(),e("a",Qa,[a("也许是把AQS讲得最通俗易懂的一篇文章"),t(n)])]),e("h3",za,[La,a(),e("a",Ia,[a("AQS 组件总结"),t(n)])]),e("h3",Ra,[Ha,a(),e("a",Oa,[a("CopyOnWriteArrayList"),t(n)])]),e("h3",Xa,[Na,a(),e("a",Pa,[a("并发容器总结"),t(n)])]),e("h3",Va,[Ka,a(),e("a",Ta,[a("跳表"),t(n)])]),Ua,e("h3",Wa,[$a,a(),e("a",Ya,[a("类加载器"),t(n)])]),e("h3",Za,[et,a(),e("a",at,[a("计算机网络常见面试题"),t(n)])]),e("h3",tt,[nt,a(),e("a",rt,[a("不了解布隆过滤器？一文给你整的明明白白！"),t(n)])]),ot,e("h3",st,[it,a(),e("a",lt,[a("RockerMQ为啥采用nameserver作为注册中心而不是zk"),t(n)])]),e("h3",dt,[ct,a(),e("a",ht,[a("RocketMQ的存储机制"),t(n)])]),Et,e("h3",ut,[_t,a(),e("a",pt,[a("Kafka的存储结构"),t(n)])]),bt,mt,Bt,e("h3",At,[ft,a(),e("a",gt,[a("B数和B+数的区别"),t(n)])]),vt,e("h3",kt,[xt,a(),e("a",Ft,[a("Java栈数据结构"),t(n)])]),e("h3",jt,[yt,a(),e("a",Ct,[a("限流算法"),t(n)])]),e("ul",null,[e("li",null,[e("p",null,[e("a",Jt,[a("https://www.jianshu.com/p/88ff90519ab1"),t(n)])])]),e("li",null,[e("p",null,[e("a",wt,[a("nginx限流"),t(n)])])])]),e("h3",St,[Gt,a(),e("a",Dt,[a("熔断器"),t(n)])]),e("h3",Mt,[qt,a(),e("a",Qt,[a("https的原理"),t(n)])]),e("h3",zt,[Lt,a(),e("a",It,[a("Spring Boot自动装配的原理"),t(n)])]),Rt,Ht,Ot,e("ul",null,[e("li",null,[t(r,{to:"/other/MongoDB%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:o(()=>[a("MongoDB高可用")]),_:1})]),e("li",null,[t(r,{to:"/software/shodowsocks/ShadowsockServer.html"},{default:o(()=>[a("ShadowsockServer")]),_:1})]),e("li",null,[t(r,{to:"/software/unclassified/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F%E7%9A%84%E7%AC%94%E8%AE%B0.html"},{default:o(()=>[a("乱七八糟的笔记")]),_:1})]),e("li",null,[t(r,{to:"/other/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Google%20BBR.html"},{default:o(()=>[a("如何安装Google BBR")]),_:1})]),e("li",null,[t(r,{to:"/software/unclassified/linux_no_space_left_on_device.html"},{default:o(()=>[a("linux_no_space_left_on_device")]),_:1})]),e("li",null,[t(r,{to:"/software/unclassified/gperftools.html"},{default:o(()=>[a("gperftools")]),_:1})]),e("li",null,[t(r,{to:"/software/unclassified/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF.html"},{default:o(()=>[a("前后端常用技术")]),_:1})]),e("li",null,[t(r,{to:"/other/Git%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1.html"},{default:o(()=>[a("Git历史记录修改用户名和邮箱")]),_:1})]),e("li",null,[t(r,{to:"/other/MySQL%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%88%B0PGSQL.html"},{default:o(()=>[a("MySQL数据迁移到PGSQL")]),_:1})]),e("li",null,[t(r,{to:"/other/%E9%9A%8F%E6%9C%BA%E5%9B%BE%E7%89%87%E5%9C%A8%E7%BA%BF%E6%8E%A5%E5%8F%A3.html"},{default:o(()=>[a("随机图片在线接口")]),_:1})]),e("li",null,[t(r,{to:"/other/Linux%20dev%20shm%E7%9B%AE%E5%BD%95.html"},{default:o(()=>[a("Linux dev shm目录")]),_:1})]),e("li",null,[t(r,{to:"/other/PostgreSQL%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:o(()=>[a("PostgreSQL高可用")]),_:1})])]),Xt,Nt,Pt,Vt])}const $t=l(h,[["render",Kt],["__file","Java面试基础.html.vue"]]);export{$t as default};
