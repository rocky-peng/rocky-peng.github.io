import{_ as p,$ as l,a0 as o,a1 as n,a3 as t,a4 as e,a5 as c,a2 as s,w as i}from"./framework-b3a0f150.js";const u={},r=c(`<p>已很经典的菜单为例，假设结构如下：</p><ul><li>id</li><li>parent_id</li><li>name</li><li>xxx1</li><li>xxx2</li><li>….</li></ul><p>按照一比一构造一个类（只增加一个children字段）：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XXXX</span><span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">Long</span> parentId<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> xxx1<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> xxx2<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> children<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> <span class="token function">treeMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> xxxxs <span class="token operator">=</span> xxxxDao<span class="token punctuation">.</span><span class="token function">menuList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//第一步分组</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> parentId2Children <span class="token operator">=</span>
        xxxxs<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">groupingBy</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//第二步构造树</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> roots <span class="token operator">=</span> parentId2Children<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">buildTree</span><span class="token punctuation">(</span>roots<span class="token punctuation">,</span> parentId2Children<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> roots<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">buildTree</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> parents<span class="token punctuation">,</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> parentId2Children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>parents<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    parents<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span><span class="token constant">XXXX</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token constant">XXXX</span> parent <span class="token operator">:</span> parents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> parentId2Children<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        parent<span class="token punctuation">.</span><span class="token function">setChildren</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">buildTree</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> parentId2Children<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,7),k=n("p",null,[n("br"),n("br"),n("br"),n("br"),n("br"),n("br")],-1),d=n("hr",null,null,-1),v=n("hr",null,null,-1),m=n("ul",null,[n("li",null,[n("strong",null,"随机毒鸡汤"),s("：最难的不是不原谅，而是不知从何原谅。 "),n("br"),n("br"),n("img",{src:"https://tuapi.eees.cc/api.php?category=fengjing&type=302&uuid=138add3b-a5f9-47de-91ce-5f972f2b3859",alt:"",loading:"lazy"})])],-1);function b(h,f){const a=i("RouterLink");return l(),o("div",null,[r,n("ul",null,[n("li",null,[t(a,{to:"/other/Notion%E7%AC%94%E8%AE%B0%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD.html"},{default:e(()=>[s("Notion笔记定时备份")]),_:1})]),n("li",null,[t(a,{to:"/other/%E6%9D%A5%E4%B8%AAJVM%E5%86%B7%E7%9F%A5%E8%AF%86.html"},{default:e(()=>[s("来个JVM冷知识")]),_:1})]),n("li",null,[t(a,{to:"/software/unclassified/PasteImageIntoMarkdown%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91.html"},{default:e(()=>[s("PasteImageIntoMarkdown插件开发")]),_:1})]),n("li",null,[t(a,{to:"/software/java-basic/AQS%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"},{default:e(()=>[s("AQS源码解读")]),_:1})]),n("li",null,[t(a,{to:"/software/middleware/mysql/MySQL%E4%B8%89%E5%A4%A7%E6%97%A5%E5%BF%97.html"},{default:e(()=>[s("MySQL三大日志")]),_:1})]),n("li",null,[t(a,{to:"/other/JetBrains-License-Server.html"},{default:e(()=>[s("JetBrains-License-Server")]),_:1})]),n("li",null,[t(a,{to:"/other/MyBatis%20xml%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E5%A4%84%E7%90%86.html"},{default:e(()=>[s("MyBatis xml特殊字符处理")]),_:1})]),n("li",null,[t(a,{to:"/software/middleware/mysql/SQL%E4%BC%98%E5%8C%96.html"},{default:e(()=>[s("SQL优化")]),_:1})]),n("li",null,[t(a,{to:"/software/middleware/mq/RocketMQ.html"},{default:e(()=>[s("RocketMQ")]),_:1})]),n("li",null,[t(a,{to:"/software/java-basic/Java%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80.html"},{default:e(()=>[s("Java面试基础")]),_:1})]),n("li",null,[t(a,{to:"/other/vuepress-theme-hope%20%E6%B7%BB%E5%8A%A0%E8%B0%B7%E6%AD%8C%E5%B9%BF%E5%91%8A.html"},{default:e(()=>[s("vuepress-theme-hope 添加谷歌广告")]),_:1})]),n("li",null,[t(a,{to:"/other/Hbase%20%E6%80%BB%E8%A7%88.html"},{default:e(()=>[s("Hbase 总览")]),_:1})])]),k,d,v,m])}const E=p(u,[["render",b],["__file","数组转树形结构只需两步.html.vue"]]);export{E as default};
