import{_ as i,$ as c,a0 as r,a1 as a,a2 as t,a3 as n,a4 as s,a5 as d,w as l}from"./framework-58787b1c.js";const p={},u=d(`<h2 id="一-循环依赖异常" tabindex="-1"><a class="header-anchor" href="#一-循环依赖异常" aria-hidden="true">#</a> 一：循环依赖异常</h2><p>比如某个ServiceA 内部引用了自身，目的是为了防止事务注解失效</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServiceA</span> <span class="token punctuation">{</span>
	
	<span class="token annotation punctuation">@Autowired</span>
	<span class="token keyword">private</span> <span class="token class-name">ServiceA</span> serviceA<span class="token punctuation">;</span>

	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种做法在spring boot 2.6.0之前是没有问题的。</p><p>现在技术升级，把spring boot的版本从2.3.12.RELEASE升级到了2.6.0，然后出现了下面的提示：</p><blockquote><p>Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to tr</p></blockquote><p>采用的解决方案就是，</p><p>**方案一：**不直接注入自身，转而注入ApplicationContext，然后在使用的地方通过getBean的方式获取实例对象</p><p>**方案二：**使用 <code>XXX xxx = (XXX)AopContext.*currentProxy*()</code> 这个方法会放回当前类的代理对象，内部是通过threadlocal来存储。通过这个方式也能达到相同目的</p><h2 id="二-url中的双斜杠出现404" tabindex="-1"><a class="header-anchor" href="#二-url中的双斜杠出现404" aria-hidden="true">#</a> 二：url中的双斜杠出现404</h2><p>在升级前，<strong>代码中</strong>如果某个接口地中中有两个双斜杠，是能正常执行的。比如代码中某个接口的url拼接起来是：/api//xxx/xxx 用api/xxx/xxx可以正常访问</p><p>升级到2.6.x后会不在代码中去掉双斜杠的情况下，用api/xxx/xxx访问就会404，导致接口异常</p><h2 id="三-nacos的shared-config配置不生效" tabindex="-1"><a class="header-anchor" href="#三-nacos的shared-config配置不生效" aria-hidden="true">#</a> 三：nacos的shared-config配置不生效</h2><p>在spring boot 2.4.0之前采用类似下面的配置即可</p><figure><img src="https://cdn.justdopay.com/notion/md5-47f92655d02085f5a7eb3d130366ae7a.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p>但升级后2.4.0之后的版本后下面的配置是跑步起来的，会提示：</p><figure><img src="https://cdn.justdopay.com/notion/md5-3217309c59519fe70978caaefa146023.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p><strong>升级后正确的配置</strong>类似下面：</p><figure><img src="https://cdn.justdopay.com/notion/md5-91d47a5d51b8ce0f41ea139605e8edde.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>`,19),h={href:"https://github.com/alibaba/spring-cloud-alibaba/pull/2349#top",target:"_blank",rel:"noopener noreferrer"},f=a("br",null,null,-1),g=a("h2",{id:"系统推荐",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#系统推荐","aria-hidden":"true"},"#"),t(" 系统推荐")],-1),b=a("p",null,[a("br"),a("br"),a("br"),a("br"),a("br"),a("br")],-1),m=a("hr",null,null,-1),_=a("hr",null,null,-1),E=a("ul",null,[a("li",null,[a("strong",null,"随机毒鸡汤"),t("：为什么现代人不会写诗？因为，「文体不限诗歌除外」。 "),a("br"),a("br"),a("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=ef38211c-e7df-491f-aab6-fd0e26a1c252",alt:"",loading:"lazy"})])],-1);function A(x,B){const o=l("ExternalLinkIcon"),e=l("RouterLink");return c(),r("div",null,[u,a("p",null,[t("扩展看："),a("a",h,[t("https://github.com/alibaba/spring-cloud-alibaba/pull/2349#top"),n(o)])]),f,g,a("ul",null,[a("li",null,[n(e,{to:"/other/getPath%20vs%20getAbsolutePath%20vs%20getCanonicalPath.html"},{default:s(()=>[t("getPath vs getAbsolutePath vs getCanonicalPath")]),_:1})]),a("li",null,[n(e,{to:"/software/docker/Docker%E8%BF%9B%E8%A1%8C%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB.html"},{default:s(()=>[t("Docker进行资源隔离")]),_:1})]),a("li",null,[n(e,{to:"/other/%E6%9D%A5%E4%B8%AAJVM%E5%86%B7%E7%9F%A5%E8%AF%86.html"},{default:s(()=>[t("来个JVM冷知识")]),_:1})]),a("li",null,[n(e,{to:"/software/unclassified/NGINX.html"},{default:s(()=>[t("NGINX")]),_:1})]),a("li",null,[n(e,{to:"/other/%E6%95%B0%E7%BB%84%E8%BD%AC%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84%E5%8F%AA%E9%9C%80%E4%B8%A4%E6%AD%A5.html"},{default:s(()=>[t("数组转树形结构只需两步")]),_:1})]),a("li",null,[n(e,{to:"/software/java-basic/IO%E7%9B%B8%E5%85%B3.html"},{default:s(()=>[t("IO相关")]),_:1})]),a("li",null,[n(e,{to:"/other/PGSQL%20GIN%E7%B4%A2%E5%BC%95%E2%80%9C%E5%A4%B1%E6%95%88%E2%80%9D.html"},{default:s(()=>[t("PGSQL GIN索引“失效”")]),_:1})]),a("li",null,[n(e,{to:"/software/maccms/MAC%20CMS.html"},{default:s(()=>[t("MAC CMS")]),_:1})]),a("li",null,[n(e,{to:"/software/unclassified/PasteImageIntoMarkdown%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91.html"},{default:s(()=>[t("PasteImageIntoMarkdown插件开发")]),_:1})]),a("li",null,[n(e,{to:"/software/java-basic/AQS%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"},{default:s(()=>[t("AQS源码解读")]),_:1})]),a("li",null,[n(e,{to:"/software/java-basic/CountDownLatch%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"},{default:s(()=>[t("CountDownLatch源码解读")]),_:1})]),a("li",null,[n(e,{to:"/other/Linux%20dev%20shm%E7%9B%AE%E5%BD%95.html"},{default:s(()=>[t("Linux dev shm目录")]),_:1})])]),b,m,_,E])}const k=i(p,[["render",A],["__file","Spring Boot升级到2 6 x踩的坑.html.vue"]]);export{k as default};
