import{_ as o,$ as i,a0 as s,a1 as e,a3 as a,a4 as r,a5 as n,a2 as t,w as c}from"./framework-58787b1c.js";const E={},p=n('<p>是java语音针对raft协议的实现</p><p>解决的问题：</p><ol><li><p>集群状态下的共识问题</p></li><li><p>leader的选举问题</p></li><li><p>同一时刻，最多只有一个leader，leader来负责处理读写请求</p></li><li><p>cap理论中，raft满足的是cp，也就是一致性和容忍性，在leader选举过程中，整个集群是不可用状态</p></li><li><p>leader接收到请求后，先进行WAL（Write Ahead Log），并等待多数节点完成日志的同步后，才会执行状态机的apply操作</p></li></ol><p>Status 状态，封装了任务的执行结果 Closure 回调接口，引用Status， Task</p><ol><li>任务的数据</li><li>期望的leader id</li><li>回调接口 Closure ,在成功或失败的时候调用</li></ol><p>StateMachine</p><ol><li>业务逻辑关键方法 onApply ,输入批量的task，业务处理task</li></ol><p>NodeOptions raft节点的配置信息，里面就引用了StateMachine实例，以及其他的一些配置 比如：快照间隔时间、快照存储路径、日志保存路径、元信息存储路径等</p><p>Node: 代表一个raft节点，可以apply task(提交task)，可以创建快照 snapshot 可用RaftServiceFactory创建一个node 正常情况都应该至少创建3个node node之前通过bolt框架通信</p><p>RpcServer: 和node的关系是什么? node和rpcserver之间是如何关联的？</p><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>',12),u=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),d=e("hr",null,null,-1),B=e("hr",null,null,-1),h=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),t("：我们走路需要一步一个脚印，这样才能给后人指出，通往失败的路。 "),e("br"),e("br"),e("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=9cd30b13-68d5-42e5-8e73-c5fba6d7e53c",alt:"",loading:"lazy"})])],-1);function f(A,_){const l=c("RouterLink");return i(),s("div",null,[p,e("ul",null,[e("li",null,[a(l,{to:"/software/docker/Docker%E8%BF%9B%E8%A1%8C%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB.html"},{default:r(()=>[t("Docker进行资源隔离")]),_:1})]),e("li",null,[a(l,{to:"/software/unclassified/Btrace%E5%85%A5%E9%97%A8.html"},{default:r(()=>[t("Btrace入门")]),_:1})]),e("li",null,[a(l,{to:"/software/spring/Spring%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%85%B3%E9%94%AE%E7%82%B9.html"},{default:r(()=>[t("Spring框架源码关键点")]),_:1})]),e("li",null,[a(l,{to:"/other/%E6%98%AF%E6%97%B6%E5%80%99%E4%BD%BF%E7%94%A8MapStruct%E6%9B%BF%E4%BB%A3BeanUtils%E4%BA%86.html"},{default:r(()=>[t("是时候使用MapStruct替代BeanUtils了")]),_:1})]),e("li",null,[a(l,{to:"/software/java-basic/IO%E7%9B%B8%E5%85%B3.html"},{default:r(()=>[t("IO相关")]),_:1})]),e("li",null,[a(l,{to:"/software/java-basic/Thread%20&%20ExecutorService%20&%20ThreadPoolExecutor%20%E6%80%BB%E8%A7%88.html"},{default:r(()=>[t("Thread & ExecutorService & ThreadPoolExecutor 总览")]),_:1})]),e("li",null,[a(l,{to:"/software/java-basic/AQS%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"},{default:r(()=>[t("AQS源码解读")]),_:1})]),e("li",null,[a(l,{to:"/other/Arthas%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html"},{default:r(()=>[t("Arthas使用记录")]),_:1})]),e("li",null,[a(l,{to:"/other/Spring%20Boot%E5%8D%87%E7%BA%A7%E5%88%B02%206%20x%E8%B8%A9%E7%9A%84%E5%9D%91.html"},{default:r(()=>[t("Spring Boot升级到2 6 x踩的坑")]),_:1})]),e("li",null,[a(l,{to:"/software/unclassified/gperftools.html"},{default:r(()=>[t("gperftools")]),_:1})]),e("li",null,[a(l,{to:"/other/JetBrains-License-Server.html"},{default:r(()=>[t("JetBrains-License-Server")]),_:1})]),e("li",null,[a(l,{to:"/other/PostgreSQL%20JSON%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C.html"},{default:r(()=>[t("PostgreSQL JSON类型字段常用操作")]),_:1})])]),u,d,B,h])}const m=o(E,[["render",f],["__file","sofajraft.html.vue"]]);export{m as default};
