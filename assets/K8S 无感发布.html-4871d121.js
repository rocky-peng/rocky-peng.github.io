import{_ as s,$ as r,a0 as i,a1 as l,a3 as a,a4 as e,a5 as n,a2 as t,w as d}from"./framework-349591b1.js";const E={},u=n('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>问题一： 比如现在k8s有个deployment，有3个pod。此时有个请求在pod A中进行处理，假设需要耗时5分钟。在这个5分钟内，执行了k8s的滚动发布，并开始销毁这个pod。 这个场景下，如果不做一些额外配置，那么pod A的这个请求应该会处理异常。</p><p>问题二： 滚动发布的时候，k8s刚启动了一个pod，但这个pod可能需要等一段时间才能真正对外提供服务。但k8s此时开始转发请求到这个pod了，这种情况下，请求是不能成功处理的</p><p>核心问题：</p><ol><li>k8s如何知道pod可以对外提供服务了</li><li>pod如何知道k8s要销毁这个pod了，pod里的应用程序知道后就能自己进行shutdown</li></ol><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p>其实主要利用k8s pod的两个东西：</p><ol><li>就绪探针</li><li>preStop</li></ol><p>如果pod中运行的是spring boot项目，那么就可以结合spring-actuator来完成。</p><ul><li>就绪探针就配置 /actuator/health，或者自定义一个url</li><li>preStop就配置/actuator/shutdown</li></ul><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>',12),h=l("p",null,[l("br"),l("br"),l("br"),l("br"),l("br"),l("br")],-1),A=l("hr",null,null,-1),c=l("hr",null,null,-1),p=l("ul",null,[l("li",null,[l("strong",null,"随机毒鸡汤"),t("：今天真是幸运的一天，终于实现了身价翻倍，因为猪价又翻了番。 "),l("br"),l("br"),l("img",{src:"https://images.pexels.com/photos/4676588/pexels-photo-4676588.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Stylish woman leaning against a column in a modern urban setting, showcasing effortless elegance.",loading:"lazy"})])],-1);function f(B,_){const o=d("RouterLink");return r(),i("div",null,[u,l("ul",null,[l("li",null,[a(o,{to:"/software/unclassified/Cordova+Umi%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4.html"},{default:e(()=>[t("Cordova+Umi项目搭建步骤")]),_:1})]),l("li",null,[a(o,{to:"/software/unclassified/KVM%E6%96%B9%E5%BC%8F%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2ES.html"},{default:e(()=>[t("KVM方式集群部署ES")]),_:1})]),l("li",null,[a(o,{to:"/software/unclassified/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F%E7%9A%84%E7%AC%94%E8%AE%B0.html"},{default:e(()=>[t("乱七八糟的笔记")]),_:1})]),l("li",null,[a(o,{to:"/other/%E9%AB%98%E5%8F%AF%E7%94%A8%E9%80%9A%E7%94%A8%E6%96%B9%E6%A1%88.html"},{default:e(()=>[t("高可用通用方案")]),_:1})]),l("li",null,[a(o,{to:"/software/java-basic/AQS%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"},{default:e(()=>[t("AQS源码解读")]),_:1})]),l("li",null,[a(o,{to:"/other/Spring%20Boot%E5%8D%87%E7%BA%A7%E5%88%B02%206%20x%E8%B8%A9%E7%9A%84%E5%9D%91.html"},{default:e(()=>[t("Spring Boot升级到2 6 x踩的坑")]),_:1})]),l("li",null,[a(o,{to:"/software/unclassified/Javassist%E6%95%B4%E7%90%86.html"},{default:e(()=>[t("Javassist整理")]),_:1})]),l("li",null,[a(o,{to:"/software/shodowsocks/ShadowsockServer%E9%85%8D%E7%BD%AE.html"},{default:e(()=>[t("ShadowsockServer配置")]),_:1})]),l("li",null,[a(o,{to:"/other/Nginx%E7%9A%84%E5%8F%8C%E5%90%91%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE.html"},{default:e(()=>[t("Nginx的双向认证配置")]),_:1})]),l("li",null,[a(o,{to:"/software/raft/sofajraft.html"},{default:e(()=>[t("sofajraft")]),_:1})]),l("li",null,[a(o,{to:"/software/middleware/es/ESRally%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E6%AD%A5%E9%AA%A4.html"},{default:e(()=>[t("ESRally性能测试步骤")]),_:1})]),l("li",null,[a(o,{to:"/other/K8S%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"},{default:e(()=>[t("K8S常用命令")]),_:1})])]),h,A,c,p])}const S=s(E,[["render",f],["__file","K8S 无感发布.html.vue"]]);export{S as default};
