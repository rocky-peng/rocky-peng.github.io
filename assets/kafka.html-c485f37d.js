import{_ as n,$ as i,a0 as f,a2 as t,a1 as e,a3 as a,a4 as r,a5 as E,w as l}from"./framework-3895bb24.js";const h={},d=E('<ol><li>kafka的副本是针对分区的。也就是说不同分区的leader可能是不一样的。</li><li></li></ol><h2 id="新消费组" tabindex="-1"><a class="header-anchor" href="#新消费组" aria-hidden="true">#</a> 新消费组</h2><h3 id="设置-auto-offset-reset-config-earliest" tabindex="-1"><a class="header-anchor" href="#设置-auto-offset-reset-config-earliest" aria-hidden="true">#</a> 设置：AUTO_OFFSET_RESET_CONFIG earliest</h3><p>第一次启动，从最开始的offset开始消费。然后不改动任何代码和配置重启，还是从最开始的offset开始消费，多次启动，仍然是从最开始的offset开始消费。</p><p>也就是说，新的消费组如果设置了earliest，kafka是不会记录消费位置的</p><h3 id="设置-auto-offset-reset-config-none" tabindex="-1"><a class="header-anchor" href="#设置-auto-offset-reset-config-none" aria-hidden="true">#</a> 设置：AUTO_OFFSET_RESET_CONFIG none</h3><p>启动则报错</p><h3 id="设置-auto-offset-reset-config-earliest-1" tabindex="-1"><a class="header-anchor" href="#设置-auto-offset-reset-config-earliest-1" aria-hidden="true">#</a> 设置：AUTO_OFFSET_RESET_CONFIG earliest</h3><p>第一次启动，从最新的offset开始消费。同时offset会实时更新。然后关闭，此时的offset为B。然后不改动任何代码和配置多次重启后，消费的offset不会实时更新，所以多次重启可能会重复消费</p><h3 id="不配置auto-offset-reset-config" tabindex="-1"><a class="header-anchor" href="#不配置auto-offset-reset-config" aria-hidden="true">#</a> 不配置AUTO_OFFSET_RESET_CONFIG</h3><p>第一次启动，从最新的offset开始消费。同时offset会实时更新。然后关闭，此时的offset为B。然后不改动任何代码和配置多次重启后，消费的offset不会实时更新，所以多次重启可能会重复消费</p><br><br>',13),c={href:"http://xn--JSON-eo6fm74boogqmgk7qdjqkqyz8t.md",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),_=e("hr",null,null,-1),A=e("hr",null,null,-1),B=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),t("：你是谁不重要，重要的是，你闯进我生活想干啥？ "),e("br"),e("br"),e("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=ca3de93f-2d63-46c3-b681-12a067c91d0a",alt:"",loading:"lazy"})])],-1);function p(g,m){const o=l("RouterLink"),s=l("ExternalLinkIcon");return i(),f("div",null,[d,t(" ## 系统推荐 "),e("ul",null,[e("li",null,[a(o,{to:"/other/Notion%E7%AC%94%E8%AE%B0%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD.html"},{default:r(()=>[t("Notion笔记定时备份")]),_:1})]),e("li",null,[a(o,{to:"/software/spring/Spring%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%85%B3%E9%94%AE%E7%82%B9.html"},{default:r(()=>[t("Spring框架源码关键点")]),_:1})]),e("li",null,[a(o,{to:"/other/Censys%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%AD%A6%E4%B9%A0.html"},{default:r(()=>[t("Censys搜索引擎学习")]),_:1})]),e("li",null,[a(o,{to:"/software/unclassified/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D%E7%AC%AC%E5%87%A0%E4%B8%AA%E7%AC%A6%E5%8F%B7%E9%97%AE%E9%A2%98.html"},{default:r(()=>[t("正则表达式匹配第几个符号问题")]),_:1})]),e("li",null,[a(o,{to:"/software/unclassified/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F%E7%9A%84%E7%AC%94%E8%AE%B0.html"},{default:r(()=>[t("乱七八糟的笔记")]),_:1})]),e("li",null,[a(o,{to:"/other/Paxos%E7%AE%97%E6%B3%95.html"},{default:r(()=>[t("Paxos算法")]),_:1})]),e("li",null,[a(o,{to:"/other/Arthas%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html"},{default:r(()=>[t("Arthas使用记录")]),_:1})]),e("li",null,[t("[PostgreSQL JSON类型字段常用操作](../../../other/PostgreSQL "),e("a",c,[t("JSON类型字段常用操作.md"),a(s)]),t(")")])]),u,_,A,B])}const k=n(h,[["render",p],["__file","kafka.html.vue"]]);export{k as default};
