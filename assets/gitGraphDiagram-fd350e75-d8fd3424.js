import{V as v,A as Mt,L as Rt,M as It,E as vt,O as At,d as Ct,a as H,$ as D,F as Ot,C as St,Z as Pt,as as Bt,at as Gt}from"./mermaid.esm.min-1dafc4b0.js";import"./app-9d8189eb.js";import"./framework-28382e28.js";var ht=function(){var r=function(L,o,d,a){for(d=d||{},a=L.length;a--;d[L[a]]=o);return d},c=[1,3],l=[1,6],m=[1,4],s=[1,5],n=[2,5],b=[1,12],h=[5,7,13,19,21,23,24,26,28,31,37,40,47],f=[7,13,19,21,23,24,26,28,31,37,40],$=[7,12,13,19,21,23,24,26,28,31,37,40],i=[7,13,47],_=[1,42],u=[1,41],k=[7,13,29,32,35,38,47],y=[1,55],p=[1,56],g=[1,57],O=[7,13,32,35,42,47],T={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,GG:5,document:6,EOF:7,":":8,DIR:9,options:10,body:11,OPT:12,NL:13,line:14,statement:15,commitStatement:16,mergeStatement:17,cherryPickStatement:18,acc_title:19,acc_title_value:20,acc_descr:21,acc_descr_value:22,acc_descr_multiline_value:23,section:24,branchStatement:25,CHECKOUT:26,ref:27,BRANCH:28,ORDER:29,NUM:30,CHERRY_PICK:31,COMMIT_ID:32,STR:33,PARENT_COMMIT:34,COMMIT_TAG:35,EMPTYSTR:36,MERGE:37,COMMIT_TYPE:38,commitType:39,COMMIT:40,commit_arg:41,COMMIT_MSG:42,NORMAL:43,REVERSE:44,HIGHLIGHT:45,ID:46,";":47,$accept:0,$end:1},terminals_:{2:"error",5:"GG",7:"EOF",8:":",9:"DIR",12:"OPT",13:"NL",19:"acc_title",20:"acc_title_value",21:"acc_descr",22:"acc_descr_value",23:"acc_descr_multiline_value",24:"section",26:"CHECKOUT",28:"BRANCH",29:"ORDER",30:"NUM",31:"CHERRY_PICK",32:"COMMIT_ID",33:"STR",34:"PARENT_COMMIT",35:"COMMIT_TAG",36:"EMPTYSTR",37:"MERGE",38:"COMMIT_TYPE",40:"COMMIT",42:"COMMIT_MSG",43:"NORMAL",44:"REVERSE",45:"HIGHLIGHT",46:"ID",47:";"},productions_:[0,[3,2],[3,3],[3,4],[3,5],[6,0],[6,2],[10,2],[10,1],[11,0],[11,2],[14,2],[14,1],[15,1],[15,1],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,2],[25,2],[25,4],[18,3],[18,5],[18,5],[18,7],[18,7],[18,5],[18,5],[18,5],[18,7],[18,7],[18,7],[18,7],[17,2],[17,4],[17,4],[17,4],[17,6],[17,6],[17,6],[17,6],[17,6],[17,6],[17,8],[17,8],[17,8],[17,8],[17,8],[17,8],[16,2],[16,3],[16,3],[16,5],[16,5],[16,3],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,3],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[41,0],[41,1],[39,1],[39,1],[39,1],[27,1],[27,1],[4,1],[4,1],[4,1]],performAction:function(L,o,d,a,E,t,B){var e=t.length-1;switch(E){case 2:return t[e];case 3:return t[e-1];case 4:return a.setDirection(t[e-3]),t[e-1];case 6:a.setOptions(t[e-1]),this.$=t[e];break;case 7:t[e-1]+=t[e],this.$=t[e-1];break;case 9:this.$=[];break;case 10:t[e-1].push(t[e]),this.$=t[e-1];break;case 11:this.$=t[e-1];break;case 16:this.$=t[e].trim(),a.setAccTitle(this.$);break;case 17:case 18:this.$=t[e].trim(),a.setAccDescription(this.$);break;case 19:a.addSection(t[e].substr(8)),this.$=t[e].substr(8);break;case 21:a.checkout(t[e]);break;case 22:a.branch(t[e]);break;case 23:a.branch(t[e-2],t[e]);break;case 24:a.cherryPick(t[e],"",void 0);break;case 25:a.cherryPick(t[e-2],"",void 0,t[e]);break;case 26:a.cherryPick(t[e-2],"",t[e]);break;case 27:a.cherryPick(t[e-4],"",t[e],t[e-2]);break;case 28:a.cherryPick(t[e-4],"",t[e-2],t[e]);break;case 29:a.cherryPick(t[e],"",t[e-2]);break;case 30:a.cherryPick(t[e],"","");break;case 31:a.cherryPick(t[e-2],"","");break;case 32:a.cherryPick(t[e-4],"","",t[e-2]);break;case 33:a.cherryPick(t[e-4],"","",t[e]);break;case 34:a.cherryPick(t[e-2],"",t[e-4],t[e]);break;case 35:a.cherryPick(t[e-2],"","",t[e]);break;case 36:a.merge(t[e],"","","");break;case 37:a.merge(t[e-2],t[e],"","");break;case 38:a.merge(t[e-2],"",t[e],"");break;case 39:a.merge(t[e-2],"","",t[e]);break;case 40:a.merge(t[e-4],t[e],"",t[e-2]);break;case 41:a.merge(t[e-4],"",t[e],t[e-2]);break;case 42:a.merge(t[e-4],"",t[e-2],t[e]);break;case 43:a.merge(t[e-4],t[e-2],t[e],"");break;case 44:a.merge(t[e-4],t[e-2],"",t[e]);break;case 45:a.merge(t[e-4],t[e],t[e-2],"");break;case 46:a.merge(t[e-6],t[e-4],t[e-2],t[e]);break;case 47:a.merge(t[e-6],t[e],t[e-4],t[e-2]);break;case 48:a.merge(t[e-6],t[e-4],t[e],t[e-2]);break;case 49:a.merge(t[e-6],t[e-2],t[e-4],t[e]);break;case 50:a.merge(t[e-6],t[e],t[e-2],t[e-4]);break;case 51:a.merge(t[e-6],t[e-2],t[e],t[e-4]);break;case 52:a.commit(t[e]);break;case 53:a.commit("","",a.commitType.NORMAL,t[e]);break;case 54:a.commit("","",t[e],"");break;case 55:a.commit("","",t[e],t[e-2]);break;case 56:a.commit("","",t[e-2],t[e]);break;case 57:a.commit("",t[e],a.commitType.NORMAL,"");break;case 58:a.commit("",t[e-2],a.commitType.NORMAL,t[e]);break;case 59:a.commit("",t[e],a.commitType.NORMAL,t[e-2]);break;case 60:a.commit("",t[e-2],t[e],"");break;case 61:a.commit("",t[e],t[e-2],"");break;case 62:a.commit("",t[e-4],t[e-2],t[e]);break;case 63:a.commit("",t[e-4],t[e],t[e-2]);break;case 64:a.commit("",t[e-2],t[e-4],t[e]);break;case 65:a.commit("",t[e],t[e-4],t[e-2]);break;case 66:a.commit("",t[e],t[e-2],t[e-4]);break;case 67:a.commit("",t[e-2],t[e],t[e-4]);break;case 68:a.commit(t[e],"",a.commitType.NORMAL,"");break;case 69:a.commit(t[e],"",a.commitType.NORMAL,t[e-2]);break;case 70:a.commit(t[e-2],"",a.commitType.NORMAL,t[e]);break;case 71:a.commit(t[e-2],"",t[e],"");break;case 72:a.commit(t[e],"",t[e-2],"");break;case 73:a.commit(t[e],t[e-2],a.commitType.NORMAL,"");break;case 74:a.commit(t[e-2],t[e],a.commitType.NORMAL,"");break;case 75:a.commit(t[e-4],"",t[e-2],t[e]);break;case 76:a.commit(t[e-4],"",t[e],t[e-2]);break;case 77:a.commit(t[e-2],"",t[e-4],t[e]);break;case 78:a.commit(t[e],"",t[e-4],t[e-2]);break;case 79:a.commit(t[e],"",t[e-2],t[e-4]);break;case 80:a.commit(t[e-2],"",t[e],t[e-4]);break;case 81:a.commit(t[e-4],t[e],t[e-2],"");break;case 82:a.commit(t[e-4],t[e-2],t[e],"");break;case 83:a.commit(t[e-2],t[e],t[e-4],"");break;case 84:a.commit(t[e],t[e-2],t[e-4],"");break;case 85:a.commit(t[e],t[e-4],t[e-2],"");break;case 86:a.commit(t[e-2],t[e-4],t[e],"");break;case 87:a.commit(t[e-4],t[e],a.commitType.NORMAL,t[e-2]);break;case 88:a.commit(t[e-4],t[e-2],a.commitType.NORMAL,t[e]);break;case 89:a.commit(t[e-2],t[e],a.commitType.NORMAL,t[e-4]);break;case 90:a.commit(t[e],t[e-2],a.commitType.NORMAL,t[e-4]);break;case 91:a.commit(t[e],t[e-4],a.commitType.NORMAL,t[e-2]);break;case 92:a.commit(t[e-2],t[e-4],a.commitType.NORMAL,t[e]);break;case 93:a.commit(t[e-6],t[e-4],t[e-2],t[e]);break;case 94:a.commit(t[e-6],t[e-4],t[e],t[e-2]);break;case 95:a.commit(t[e-6],t[e-2],t[e-4],t[e]);break;case 96:a.commit(t[e-6],t[e],t[e-4],t[e-2]);break;case 97:a.commit(t[e-6],t[e-2],t[e],t[e-4]);break;case 98:a.commit(t[e-6],t[e],t[e-2],t[e-4]);break;case 99:a.commit(t[e-4],t[e-6],t[e-2],t[e]);break;case 100:a.commit(t[e-4],t[e-6],t[e],t[e-2]);break;case 101:a.commit(t[e-2],t[e-6],t[e-4],t[e]);break;case 102:a.commit(t[e],t[e-6],t[e-4],t[e-2]);break;case 103:a.commit(t[e-2],t[e-6],t[e],t[e-4]);break;case 104:a.commit(t[e],t[e-6],t[e-2],t[e-4]);break;case 105:a.commit(t[e],t[e-4],t[e-2],t[e-6]);break;case 106:a.commit(t[e-2],t[e-4],t[e],t[e-6]);break;case 107:a.commit(t[e],t[e-2],t[e-4],t[e-6]);break;case 108:a.commit(t[e-2],t[e],t[e-4],t[e-6]);break;case 109:a.commit(t[e-4],t[e-2],t[e],t[e-6]);break;case 110:a.commit(t[e-4],t[e],t[e-2],t[e-6]);break;case 111:a.commit(t[e-2],t[e-4],t[e-6],t[e]);break;case 112:a.commit(t[e],t[e-4],t[e-6],t[e-2]);break;case 113:a.commit(t[e-2],t[e],t[e-6],t[e-4]);break;case 114:a.commit(t[e],t[e-2],t[e-6],t[e-4]);break;case 115:a.commit(t[e-4],t[e-2],t[e-6],t[e]);break;case 116:a.commit(t[e-4],t[e],t[e-6],t[e-2]);break;case 117:this.$="";break;case 118:this.$=t[e];break;case 119:this.$=a.commitType.NORMAL;break;case 120:this.$=a.commitType.REVERSE;break;case 121:this.$=a.commitType.HIGHLIGHT;break}},table:[{3:1,4:2,5:c,7:l,13:m,47:s},{1:[3]},{3:7,4:2,5:c,7:l,13:m,47:s},{6:8,7:n,8:[1,9],9:[1,10],10:11,13:b},r(h,[2,124]),r(h,[2,125]),r(h,[2,126]),{1:[2,1]},{7:[1,13]},{6:14,7:n,10:11,13:b},{8:[1,15]},r(f,[2,9],{11:16,12:[1,17]}),r($,[2,8]),{1:[2,2]},{7:[1,18]},{6:19,7:n,10:11,13:b},{7:[2,6],13:[1,22],14:20,15:21,16:23,17:24,18:25,19:[1,26],21:[1,27],23:[1,28],24:[1,29],25:30,26:[1,31],28:[1,35],31:[1,34],37:[1,33],40:[1,32]},r($,[2,7]),{1:[2,3]},{7:[1,36]},r(f,[2,10]),{4:37,7:l,13:m,47:s},r(f,[2,12]),r(i,[2,13]),r(i,[2,14]),r(i,[2,15]),{20:[1,38]},{22:[1,39]},r(i,[2,18]),r(i,[2,19]),r(i,[2,20]),{27:40,33:_,46:u},r(i,[2,117],{41:43,32:[1,46],33:[1,48],35:[1,44],38:[1,45],42:[1,47]}),{27:49,33:_,46:u},{32:[1,50],35:[1,51]},{27:52,33:_,46:u},{1:[2,4]},r(f,[2,11]),r(i,[2,16]),r(i,[2,17]),r(i,[2,21]),r(k,[2,122]),r(k,[2,123]),r(i,[2,52]),{33:[1,53]},{39:54,43:y,44:p,45:g},{33:[1,58]},{33:[1,59]},r(i,[2,118]),r(i,[2,36],{32:[1,60],35:[1,62],38:[1,61]}),{33:[1,63]},{33:[1,64],36:[1,65]},r(i,[2,22],{29:[1,66]}),r(i,[2,53],{32:[1,68],38:[1,67],42:[1,69]}),r(i,[2,54],{32:[1,71],35:[1,70],42:[1,72]}),r(O,[2,119]),r(O,[2,120]),r(O,[2,121]),r(i,[2,57],{35:[1,73],38:[1,74],42:[1,75]}),r(i,[2,68],{32:[1,78],35:[1,76],38:[1,77]}),{33:[1,79]},{39:80,43:y,44:p,45:g},{33:[1,81]},r(i,[2,24],{34:[1,82],35:[1,83]}),{32:[1,84]},{32:[1,85]},{30:[1,86]},{39:87,43:y,44:p,45:g},{33:[1,88]},{33:[1,89]},{33:[1,90]},{33:[1,91]},{33:[1,92]},{33:[1,93]},{39:94,43:y,44:p,45:g},{33:[1,95]},{33:[1,96]},{39:97,43:y,44:p,45:g},{33:[1,98]},r(i,[2,37],{35:[1,100],38:[1,99]}),r(i,[2,38],{32:[1,102],35:[1,101]}),r(i,[2,39],{32:[1,103],38:[1,104]}),{33:[1,105]},{33:[1,106],36:[1,107]},{33:[1,108]},{33:[1,109]},r(i,[2,23]),r(i,[2,55],{32:[1,110],42:[1,111]}),r(i,[2,59],{38:[1,112],42:[1,113]}),r(i,[2,69],{32:[1,115],38:[1,114]}),r(i,[2,56],{32:[1,116],42:[1,117]}),r(i,[2,61],{35:[1,118],42:[1,119]}),r(i,[2,72],{32:[1,121],35:[1,120]}),r(i,[2,58],{38:[1,122],42:[1,123]}),r(i,[2,60],{35:[1,124],42:[1,125]}),r(i,[2,73],{35:[1,127],38:[1,126]}),r(i,[2,70],{32:[1,129],38:[1,128]}),r(i,[2,71],{32:[1,131],35:[1,130]}),r(i,[2,74],{35:[1,133],38:[1,132]}),{39:134,43:y,44:p,45:g},{33:[1,135]},{33:[1,136]},{33:[1,137]},{33:[1,138]},{39:139,43:y,44:p,45:g},r(i,[2,25],{35:[1,140]}),r(i,[2,26],{34:[1,141]}),r(i,[2,31],{34:[1,142]}),r(i,[2,29],{34:[1,143]}),r(i,[2,30],{34:[1,144]}),{33:[1,145]},{33:[1,146]},{39:147,43:y,44:p,45:g},{33:[1,148]},{39:149,43:y,44:p,45:g},{33:[1,150]},{33:[1,151]},{33:[1,152]},{33:[1,153]},{33:[1,154]},{33:[1,155]},{33:[1,156]},{39:157,43:y,44:p,45:g},{33:[1,158]},{33:[1,159]},{33:[1,160]},{39:161,43:y,44:p,45:g},{33:[1,162]},{39:163,43:y,44:p,45:g},{33:[1,164]},{33:[1,165]},{33:[1,166]},{39:167,43:y,44:p,45:g},{33:[1,168]},r(i,[2,43],{35:[1,169]}),r(i,[2,44],{38:[1,170]}),r(i,[2,42],{32:[1,171]}),r(i,[2,45],{35:[1,172]}),r(i,[2,40],{38:[1,173]}),r(i,[2,41],{32:[1,174]}),{33:[1,175],36:[1,176]},{33:[1,177]},{33:[1,178]},{33:[1,179]},{33:[1,180]},r(i,[2,66],{42:[1,181]}),r(i,[2,79],{32:[1,182]}),r(i,[2,67],{42:[1,183]}),r(i,[2,90],{38:[1,184]}),r(i,[2,80],{32:[1,185]}),r(i,[2,89],{38:[1,186]}),r(i,[2,65],{42:[1,187]}),r(i,[2,78],{32:[1,188]}),r(i,[2,64],{42:[1,189]}),r(i,[2,84],{35:[1,190]}),r(i,[2,77],{32:[1,191]}),r(i,[2,83],{35:[1,192]}),r(i,[2,63],{42:[1,193]}),r(i,[2,91],{38:[1,194]}),r(i,[2,62],{42:[1,195]}),r(i,[2,85],{35:[1,196]}),r(i,[2,86],{35:[1,197]}),r(i,[2,92],{38:[1,198]}),r(i,[2,76],{32:[1,199]}),r(i,[2,87],{38:[1,200]}),r(i,[2,75],{32:[1,201]}),r(i,[2,81],{35:[1,202]}),r(i,[2,82],{35:[1,203]}),r(i,[2,88],{38:[1,204]}),{33:[1,205]},{39:206,43:y,44:p,45:g},{33:[1,207]},{33:[1,208]},{39:209,43:y,44:p,45:g},{33:[1,210]},r(i,[2,27]),r(i,[2,32]),r(i,[2,28]),r(i,[2,33]),r(i,[2,34]),r(i,[2,35]),{33:[1,211]},{33:[1,212]},{33:[1,213]},{39:214,43:y,44:p,45:g},{33:[1,215]},{39:216,43:y,44:p,45:g},{33:[1,217]},{33:[1,218]},{33:[1,219]},{33:[1,220]},{33:[1,221]},{33:[1,222]},{33:[1,223]},{39:224,43:y,44:p,45:g},{33:[1,225]},{33:[1,226]},{33:[1,227]},{39:228,43:y,44:p,45:g},{33:[1,229]},{39:230,43:y,44:p,45:g},{33:[1,231]},{33:[1,232]},{33:[1,233]},{39:234,43:y,44:p,45:g},r(i,[2,46]),r(i,[2,48]),r(i,[2,47]),r(i,[2,49]),r(i,[2,51]),r(i,[2,50]),r(i,[2,107]),r(i,[2,108]),r(i,[2,105]),r(i,[2,106]),r(i,[2,110]),r(i,[2,109]),r(i,[2,114]),r(i,[2,113]),r(i,[2,112]),r(i,[2,111]),r(i,[2,116]),r(i,[2,115]),r(i,[2,104]),r(i,[2,103]),r(i,[2,102]),r(i,[2,101]),r(i,[2,99]),r(i,[2,100]),r(i,[2,98]),r(i,[2,97]),r(i,[2,96]),r(i,[2,95]),r(i,[2,93]),r(i,[2,94])],defaultActions:{7:[2,1],13:[2,2],18:[2,3],36:[2,4]},parseError:function(L,o){if(o.recoverable)this.trace(L);else{var d=new Error(L);throw d.hash=o,d}},parse:function(L){var o=this,d=[0],a=[],E=[null],t=[],B=this.table,e="",et=0,yt=0,Et=2,ut=1,Tt=t.slice.call(arguments,1),A=Object.create(this.lexer),j={yy:{}};for(var ct in this.yy)Object.prototype.hasOwnProperty.call(this.yy,ct)&&(j.yy[ct]=this.yy[ct]);A.setInput(L,j.yy),j.yy.lexer=A,j.yy.parser=this,typeof A.yylloc>"u"&&(A.yylloc={});var nt=A.yylloc;t.push(nt);var wt=A.options&&A.options.ranges;typeof j.yy.parseError=="function"?this.parseError=j.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;function Lt(){var Y;return Y=a.pop()||A.lex()||ut,typeof Y!="number"&&(Y instanceof Array&&(a=Y,Y=a.pop()),Y=o.symbols_[Y]||Y),Y}for(var G,U,z,ot,X={},rt,q,pt,at;;){if(U=d[d.length-1],this.defaultActions[U]?z=this.defaultActions[U]:((G===null||typeof G>"u")&&(G=Lt()),z=B[U]&&B[U][G]),typeof z>"u"||!z.length||!z[0]){var lt="";at=[];for(rt in B[U])this.terminals_[rt]&&rt>Et&&at.push("'"+this.terminals_[rt]+"'");A.showPosition?lt="Parse error on line "+(et+1)+`:
`+A.showPosition()+`
Expecting `+at.join(", ")+", got '"+(this.terminals_[G]||G)+"'":lt="Parse error on line "+(et+1)+": Unexpected "+(G==ut?"end of input":"'"+(this.terminals_[G]||G)+"'"),this.parseError(lt,{text:A.match,token:this.terminals_[G]||G,line:A.yylineno,loc:nt,expected:at})}if(z[0]instanceof Array&&z.length>1)throw new Error("Parse Error: multiple actions possible at state: "+U+", token: "+G);switch(z[0]){case 1:d.push(G),E.push(A.yytext),t.push(A.yylloc),d.push(z[1]),G=null,yt=A.yyleng,e=A.yytext,et=A.yylineno,nt=A.yylloc;break;case 2:if(q=this.productions_[z[1]][1],X.$=E[E.length-q],X._$={first_line:t[t.length-(q||1)].first_line,last_line:t[t.length-1].last_line,first_column:t[t.length-(q||1)].first_column,last_column:t[t.length-1].last_column},wt&&(X._$.range=[t[t.length-(q||1)].range[0],t[t.length-1].range[1]]),ot=this.performAction.apply(X,[e,yt,et,j.yy,z[1],E,t].concat(Tt)),typeof ot<"u")return ot;q&&(d=d.slice(0,-1*q*2),E=E.slice(0,-1*q),t=t.slice(0,-1*q)),d.push(this.productions_[z[1]][0]),E.push(X.$),t.push(X._$),pt=B[d[d.length-2]][d[d.length-1]],d.push(pt);break;case 3:return!0}}return!0}},x=function(){var L={EOF:1,parseError:function(o,d){if(this.yy.parser)this.yy.parser.parseError(o,d);else throw new Error(o)},setInput:function(o,d){return this.yy=d||this.yy||{},this._input=o,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var o=this._input[0];this.yytext+=o,this.yyleng++,this.offset++,this.match+=o,this.matched+=o;var d=o.match(/(?:\r\n?|\n).*/g);return d?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),o},unput:function(o){var d=o.length,a=o.split(/(?:\r\n?|\n)/g);this._input=o+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-d),this.offset-=d;var E=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),a.length-1&&(this.yylineno-=a.length-1);var t=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:a?(a.length===E.length?this.yylloc.first_column:0)+E[E.length-a.length].length-a[0].length:this.yylloc.first_column-d},this.options.ranges&&(this.yylloc.range=[t[0],t[0]+this.yyleng-d]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){if(this.options.backtrack_lexer)this._backtrack=!0;else return this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno});return this},less:function(o){this.unput(this.match.slice(o))},pastInput:function(){var o=this.matched.substr(0,this.matched.length-this.match.length);return(o.length>20?"...":"")+o.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var o=this.match;return o.length<20&&(o+=this._input.substr(0,20-o.length)),(o.substr(0,20)+(o.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var o=this.pastInput(),d=new Array(o.length+1).join("-");return o+this.upcomingInput()+`
`+d+"^"},test_match:function(o,d){var a,E,t;if(this.options.backtrack_lexer&&(t={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(t.yylloc.range=this.yylloc.range.slice(0))),E=o[0].match(/(?:\r\n?|\n).*/g),E&&(this.yylineno+=E.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:E?E[E.length-1].length-E[E.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+o[0].length},this.yytext+=o[0],this.match+=o[0],this.matches=o,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(o[0].length),this.matched+=o[0],a=this.performAction.call(this,this.yy,this,d,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),a)return a;if(this._backtrack){for(var B in t)this[B]=t[B];return!1}return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var o,d,a,E;this._more||(this.yytext="",this.match="");for(var t=this._currentRules(),B=0;B<t.length;B++)if(a=this._input.match(this.rules[t[B]]),a&&(!d||a[0].length>d[0].length)){if(d=a,E=B,this.options.backtrack_lexer){if(o=this.test_match(a,t[B]),o!==!1)return o;if(this._backtrack){d=!1;continue}else return!1}else if(!this.options.flex)break}return d?(o=this.test_match(d,t[E]),o!==!1?o:!1):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var o=this.next();return o||this.lex()},begin:function(o){this.conditionStack.push(o)},popState:function(){var o=this.conditionStack.length-1;return o>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(o){return o=this.conditionStack.length-1-Math.abs(o||0),o>=0?this.conditionStack[o]:"INITIAL"},pushState:function(o){this.begin(o)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(o,d,a,E){switch(a){case 0:return this.begin("acc_title"),19;case 1:return this.popState(),"acc_title_value";case 2:return this.begin("acc_descr"),21;case 3:return this.popState(),"acc_descr_value";case 4:this.begin("acc_descr_multiline");break;case 5:this.popState();break;case 6:return"acc_descr_multiline_value";case 7:return 13;case 8:break;case 9:break;case 10:return 5;case 11:return 40;case 12:return 32;case 13:return 38;case 14:return 42;case 15:return 43;case 16:return 44;case 17:return 45;case 18:return 35;case 19:return 28;case 20:return 29;case 21:return 37;case 22:return 31;case 23:return 34;case 24:return 26;case 25:return 9;case 26:return 9;case 27:return 8;case 28:return"CARET";case 29:this.begin("options");break;case 30:this.popState();break;case 31:return 12;case 32:return 36;case 33:this.begin("string");break;case 34:this.popState();break;case 35:return 33;case 36:return 30;case 37:return 46;case 38:return 7}},rules:[/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:parent:)/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[5,6],inclusive:!1},acc_descr:{rules:[3],inclusive:!1},acc_title:{rules:[1],inclusive:!1},options:{rules:[30,31],inclusive:!1},string:{rules:[34,35],inclusive:!1},INITIAL:{rules:[0,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,32,33,36,37,38,39],inclusive:!0}}};return L}();T.lexer=x;function P(){this.yy={}}return P.prototype=T,T.Parser=P,new P}();ht.parser=ht;const Ht=ht;let it=v().gitGraph.mainBranchName,Nt=v().gitGraph.mainBranchOrder,I={},S=null,J={};J[it]={name:it,order:Nt};let R={};R[it]=S;let C=it,dt="LR",W=0;function mt(){return Gt({length:7})}function zt(r,c){const l=Object.create(null);return r.reduce((m,s)=>{const n=c(s);return l[n]||(l[n]=!0,m.push(s)),m},[])}const Dt=function(r){dt=r};let ft={};const qt=function(r){H.debug("options str",r),r=r&&r.trim(),r=r||"{}";try{ft=JSON.parse(r)}catch(c){H.error("error while parsing gitGraph options",c.message)}},Yt=function(){return ft},Ft=function(r,c,l,m){H.debug("Entering commit:",r,c,l,m),c=D.sanitizeText(c,v()),r=D.sanitizeText(r,v()),m=D.sanitizeText(m,v());const s={id:c||W+"-"+mt(),message:r,seq:W++,type:l||Z.NORMAL,tag:m||"",parents:S==null?[]:[S.id],branch:C};S=s,I[s.id]=s,R[C]=s.id,H.debug("in pushCommit "+s.id)},jt=function(r,c){if(r=D.sanitizeText(r,v()),R[r]===void 0)R[r]=S!=null?S.id:null,J[r]={name:r,order:c?parseInt(c,10):null},kt(r),H.debug("in createBranch");else{let l=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+r+'")');throw l.hash={text:"branch "+r,token:"branch "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+r+'"']},l}},Ut=function(r,c,l,m){r=D.sanitizeText(r,v()),c=D.sanitizeText(c,v());const s=I[R[C]],n=I[R[r]];if(C===r){let h=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},h}else if(s===void 0||!s){let h=new Error('Incorrect usage of "merge". Current branch ('+C+")has no commits");throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},h}else if(R[r]===void 0){let h=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") does not exist");throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+r]},h}else if(n===void 0||!n){let h=new Error('Incorrect usage of "merge". Branch to be merged ('+r+") has no commits");throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},h}else if(s===n){let h=new Error('Incorrect usage of "merge". Both branches have same head');throw h.hash={text:"merge "+r,token:"merge "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},h}else if(c&&I[c]!==void 0){let h=new Error('Incorrect usage of "merge". Commit with id:'+c+" already exists, use different custom Id");throw h.hash={text:"merge "+r+c+l+m,token:"merge "+r+c+l+m,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+r+" "+c+"_UNIQUE "+l+" "+m]},h}const b={id:c||W+"-"+mt(),message:"merged branch "+r+" into "+C,seq:W++,parents:[S==null?null:S.id,R[r]],branch:C,type:Z.MERGE,customType:l,customId:!!c,tag:m||""};S=b,I[b.id]=b,R[C]=b.id,H.debug(R),H.debug("in mergeBranch")},Kt=function(r,c,l,m){if(H.debug("Entering cherryPick:",r,c,l),r=D.sanitizeText(r,v()),c=D.sanitizeText(c,v()),l=D.sanitizeText(l,v()),m=D.sanitizeText(m,v()),!r||I[r]===void 0){let b=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw b.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},b}let s=I[r],n=s.branch;if(m&&!(Array.isArray(s.parents)&&s.parents.includes(m)))throw new Error("Invalid operation: The specified parent commit is not an immediate parent of the cherry-picked commit.");if(s.type===Z.MERGE&&!m)throw new Error("Incorrect usage of cherry-pick: If the source commit is a merge commit, an immediate parent commit must be specified.");if(!c||I[c]===void 0){if(n===C){let f=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw f.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},f}const b=I[R[C]];if(b===void 0||!b){let f=new Error('Incorrect usage of "cherry-pick". Current branch ('+C+")has no commits");throw f.hash={text:"cherryPick "+r+" "+c,token:"cherryPick "+r+" "+c,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},f}const h={id:W+"-"+mt(),message:"cherry-picked "+s+" into "+C,seq:W++,parents:[S==null?null:S.id,s.id],branch:C,type:Z.CHERRY_PICK,tag:l??`cherry-pick:${s.id}${s.type===Z.MERGE?`|parent:${m}`:""}`};S=h,I[h.id]=h,R[C]=h.id,H.debug(R),H.debug("in cherryPick")}},kt=function(r){if(r=D.sanitizeText(r,v()),R[r]===void 0){let c=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+r+'")');throw c.hash={text:"checkout "+r,token:"checkout "+r,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+r+'"']},c}else{C=r;const c=R[C];S=I[c]}};function bt(r,c,l){const m=r.indexOf(c);m===-1?r.push(l):r.splice(m,1,l)}function $t(r){const c=r.reduce((s,n)=>s.seq>n.seq?s:n,r[0]);let l="";r.forEach(function(s){s===c?l+="	*":l+="	|"});const m=[l,c.id,c.seq];for(let s in R)R[s]===c.id&&m.push(s);if(H.debug(m.join(" ")),c.parents&&c.parents.length==2){const s=I[c.parents[0]];bt(r,c,s),r.push(I[c.parents[1]])}else{if(c.parents.length==0)return;{const s=I[c.parents];bt(r,c,s)}}r=zt(r,s=>s.id),$t(r)}const Wt=function(){H.debug(I);const r=xt()[0];$t([r])},Xt=function(){I={},S=null;let r=v().gitGraph.mainBranchName,c=v().gitGraph.mainBranchOrder;R={},R[r]=null,J={},J[r]={name:r,order:c},C=r,W=0,Ot()},Zt=function(){return Object.values(J).map((r,c)=>r.order!==null?r:{...r,order:parseFloat(`0.${c}`,10)}).sort((r,c)=>r.order-c.order).map(({name:r})=>({name:r}))},Qt=function(){return R},Vt=function(){return I},xt=function(){const r=Object.keys(I).map(function(c){return I[c]});return r.forEach(function(c){H.debug(c.id)}),r.sort((c,l)=>c.seq-l.seq),r},Jt=function(){return C},te=function(){return dt},ee=function(){return S},Z={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},re={getConfig:()=>v().gitGraph,setDirection:Dt,setOptions:qt,getOptions:Yt,commit:Ft,branch:jt,merge:Ut,cherryPick:Kt,checkout:kt,prettyPrint:Wt,clear:Xt,getBranchesAsObjArray:Zt,getBranches:Qt,getCommits:Vt,getCommitsArray:xt,getCurrentBranch:Jt,getDirection:te,getHead:ee,setAccTitle:Mt,getAccTitle:Rt,getAccDescription:It,setAccDescription:vt,setDiagramTitle:At,getDiagramTitle:Ct,commitType:Z};let Q={};const N={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},K=8;let w={},F={},st=[],tt=0,M="LR";const ae=()=>{w={},F={},Q={},tt=0,st=[],M="LR"},_t=r=>{const c=document.createElementNS("http://www.w3.org/2000/svg","text");let l=[];typeof r=="string"?l=r.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(r)?l=r:l=[];for(const m of l){const s=document.createElementNS("http://www.w3.org/2000/svg","tspan");s.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),s.setAttribute("dy","1em"),s.setAttribute("x","0"),s.setAttribute("class","row"),s.textContent=m.trim(),c.appendChild(s)}return c},ie=r=>{let c="",l=0;return r.forEach(m=>{const s=M==="TB"?F[m].y:F[m].x;s>=l&&(c=m,l=s)}),c||void 0},gt=(r,c,l)=>{const m=v().gitGraph,s=r.append("g").attr("class","commit-bullets"),n=r.append("g").attr("class","commit-labels");let b=0;M==="TB"&&(b=30);const h=Object.keys(c).sort((_,u)=>c[_].seq-c[u].seq),f=m.parallelCommits,$=10,i=40;h.forEach(_=>{const u=c[_];if(f)if(u.parents.length){const g=ie(u.parents);b=M==="TB"?F[g].y+i:F[g].x+i}else b=0,M==="TB"&&(b=30);const k=b+$,y=M==="TB"?k:w[u.branch].pos,p=M==="TB"?w[u.branch].pos:k;if(l){let g,O=u.customType!==void 0&&u.customType!==""?u.customType:u.type;switch(O){case N.NORMAL:g="commit-normal";break;case N.REVERSE:g="commit-reverse";break;case N.HIGHLIGHT:g="commit-highlight";break;case N.MERGE:g="commit-merge";break;case N.CHERRY_PICK:g="commit-cherry-pick";break;default:g="commit-normal"}if(O===N.HIGHLIGHT){const T=s.append("rect");T.attr("x",p-10),T.attr("y",y-10),T.attr("height",20),T.attr("width",20),T.attr("class",`commit ${u.id} commit-highlight${w[u.branch].index%K} ${g}-outer`),s.append("rect").attr("x",p-6).attr("y",y-6).attr("height",12).attr("width",12).attr("class",`commit ${u.id} commit${w[u.branch].index%K} ${g}-inner`)}else if(O===N.CHERRY_PICK)s.append("circle").attr("cx",p).attr("cy",y).attr("r",10).attr("class",`commit ${u.id} ${g}`),s.append("circle").attr("cx",p-3).attr("cy",y+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${u.id} ${g}`),s.append("circle").attr("cx",p+3).attr("cy",y+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${u.id} ${g}`),s.append("line").attr("x1",p+3).attr("y1",y+1).attr("x2",p).attr("y2",y-5).attr("stroke","#fff").attr("class",`commit ${u.id} ${g}`),s.append("line").attr("x1",p-3).attr("y1",y+1).attr("x2",p).attr("y2",y-5).attr("stroke","#fff").attr("class",`commit ${u.id} ${g}`);else{const T=s.append("circle");if(T.attr("cx",p),T.attr("cy",y),T.attr("r",u.type===N.MERGE?9:10),T.attr("class",`commit ${u.id} commit${w[u.branch].index%K}`),O===N.MERGE){const x=s.append("circle");x.attr("cx",p),x.attr("cy",y),x.attr("r",6),x.attr("class",`commit ${g} ${u.id} commit${w[u.branch].index%K}`)}O===N.REVERSE&&s.append("path").attr("d",`M ${p-5},${y-5}L${p+5},${y+5}M${p-5},${y+5}L${p+5},${y-5}`).attr("class",`commit ${g} ${u.id} commit${w[u.branch].index%K}`)}}if(M==="TB"?F[u.id]={x:p,y:k}:F[u.id]={x:k,y},l){if(u.type!==N.CHERRY_PICK&&(u.customId&&u.type===N.MERGE||u.type!==N.MERGE)&&m.showCommitLabel){const g=n.append("g"),O=g.insert("rect").attr("class","commit-label-bkg"),T=g.append("text").attr("x",b).attr("y",y+25).attr("class","commit-label").text(u.id);let x=T.node().getBBox();if(O.attr("x",k-x.width/2-2).attr("y",y+13.5).attr("width",x.width+2*2).attr("height",x.height+2*2),M==="TB"&&(O.attr("x",p-(x.width+4*4+5)).attr("y",y-12),T.attr("x",p-(x.width+4*4)).attr("y",y+x.height-12)),M!=="TB"&&T.attr("x",k-x.width/2),m.rotateCommitLabel)if(M==="TB")T.attr("transform","rotate(-45, "+p+", "+y+")"),O.attr("transform","rotate(-45, "+p+", "+y+")");else{let P=-7.5-(x.width+10)/25*9.5,L=10+x.width/25*8.5;g.attr("transform","translate("+P+", "+L+") rotate(-45, "+b+", "+y+")")}}if(u.tag){const g=n.insert("polygon"),O=n.append("circle"),T=n.append("text").attr("y",y-16).attr("class","tag-label").text(u.tag);let x=T.node().getBBox();T.attr("x",k-x.width/2);const P=x.height/2,L=y-19.2;g.attr("class","tag-label-bkg").attr("points",`
          ${b-x.width/2-4/2},${L+2}
          ${b-x.width/2-4/2},${L-2}
          ${k-x.width/2-4},${L-P-2}
          ${k+x.width/2+4},${L-P-2}
          ${k+x.width/2+4},${L+P+2}
          ${k-x.width/2-4},${L+P+2}`),O.attr("cx",b-x.width/2+4/2).attr("cy",L).attr("r",1.5).attr("class","tag-hole"),M==="TB"&&(g.attr("class","tag-label-bkg").attr("points",`
            ${p},${b+2}
            ${p},${b-2}
            ${p+$},${b-P-2}
            ${p+$+x.width+4},${b-P-2}
            ${p+$+x.width+4},${b+P+2}
            ${p+$},${b+P+2}`).attr("transform","translate(12,12) rotate(45, "+p+","+b+")"),O.attr("cx",p+4/2).attr("cy",b).attr("transform","translate(12,12) rotate(45, "+p+","+b+")"),T.attr("x",p+5).attr("y",b+3).attr("transform","translate(14,14) rotate(45, "+p+","+b+")"))}}b+=i+$,b>tt&&(tt=b)})},se=(r,c,l,m,s)=>{const n=(M==="TB"?l.x<m.x:l.y<m.y)?c.branch:r.branch,b=f=>f.branch===n,h=f=>f.seq>r.seq&&f.seq<c.seq;return Object.values(s).some(f=>h(f)&&b(f))},V=(r,c,l=0)=>{const m=r+Math.abs(r-c)/2;if(l>5)return m;if(st.every(n=>Math.abs(n-m)>=10))return st.push(m),m;const s=Math.abs(r-c);return V(r,c-s/5,l+1)},ce=(r,c,l,m)=>{const s=F[c.id],n=F[l.id],b=se(c,l,s,n,m);let h="",f="",$=0,i=0,_=w[l.branch].index,u;if(b){h="A 10 10, 0, 0, 0,",f="A 10 10, 0, 0, 1,",$=10,i=10;const k=s.y<n.y?V(s.y,n.y):V(n.y,s.y),y=s.x<n.x?V(s.x,n.x):V(n.x,s.x);M==="TB"?s.x<n.x?(_=w[l.branch].index,u=`M ${s.x} ${s.y} L ${y-$} ${s.y} ${f} ${y} ${s.y+i} L ${y} ${n.y-$} ${h} ${y+i} ${n.y} L ${n.x} ${n.y}`):(_=w[c.branch].index,u=`M ${s.x} ${s.y} L ${y+$} ${s.y} ${h} ${y} ${s.y+i} L ${y} ${n.y-$} ${f} ${y-i} ${n.y} L ${n.x} ${n.y}`):s.y<n.y?(_=w[l.branch].index,u=`M ${s.x} ${s.y} L ${s.x} ${k-$} ${h} ${s.x+i} ${k} L ${n.x-$} ${k} ${f} ${n.x} ${k+i} L ${n.x} ${n.y}`):(_=w[c.branch].index,u=`M ${s.x} ${s.y} L ${s.x} ${k+$} ${f} ${s.x+i} ${k} L ${n.x-$} ${k} ${h} ${n.x} ${k-i} L ${n.x} ${n.y}`)}else M==="TB"?(s.x<n.x&&(h="A 20 20, 0, 0, 0,",f="A 20 20, 0, 0, 1,",$=20,i=20,_=w[l.branch].index,u=`M ${s.x} ${s.y} L ${n.x-$} ${s.y} ${f} ${n.x} ${s.y+i} L ${n.x} ${n.y}`),s.x>n.x&&(h="A 20 20, 0, 0, 0,",f="A 20 20, 0, 0, 1,",$=20,i=20,_=w[c.branch].index,u=`M ${s.x} ${s.y} L ${s.x} ${n.y-$} ${f} ${s.x-i} ${n.y} L ${n.x} ${n.y}`),s.x===n.x&&(_=w[c.branch].index,u=`M ${s.x} ${s.y} L ${s.x+$} ${s.y} ${h} ${s.x+i} ${n.y+$} L ${n.x} ${n.y}`)):(s.y<n.y&&(h="A 20 20, 0, 0, 0,",$=20,i=20,_=w[l.branch].index,u=`M ${s.x} ${s.y} L ${s.x} ${n.y-$} ${h} ${s.x+i} ${n.y} L ${n.x} ${n.y}`),s.y>n.y&&(h="A 20 20, 0, 0, 0,",$=20,i=20,_=w[c.branch].index,u=`M ${s.x} ${s.y} L ${n.x-$} ${s.y} ${h} ${n.x} ${s.y-i} L ${n.x} ${n.y}`),s.y===n.y&&(_=w[c.branch].index,u=`M ${s.x} ${s.y} L ${s.x} ${n.y-$} ${h} ${s.x+i} ${n.y} L ${n.x} ${n.y}`));r.append("path").attr("d",u).attr("class","arrow arrow"+_%K)},ne=(r,c)=>{const l=r.append("g").attr("class","commit-arrows");Object.keys(c).forEach(m=>{const s=c[m];s.parents&&s.parents.length>0&&s.parents.forEach(n=>{ce(l,c[n],s,c)})})},oe=(r,c)=>{const l=v().gitGraph,m=r.append("g");c.forEach((s,n)=>{const b=n%K,h=w[s.name].pos,f=m.append("line");f.attr("x1",0),f.attr("y1",h),f.attr("x2",tt),f.attr("y2",h),f.attr("class","branch branch"+b),M==="TB"&&(f.attr("y1",30),f.attr("x1",h),f.attr("y2",tt),f.attr("x2",h)),st.push(h);let $=s.name;const i=_t($),_=m.insert("rect"),u=m.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+b);u.node().appendChild(i);let k=i.getBBox();_.attr("class","branchLabelBkg label"+b).attr("rx",4).attr("ry",4).attr("x",-k.width-4-(l.rotateCommitLabel===!0?30:0)).attr("y",-k.height/2+8).attr("width",k.width+18).attr("height",k.height+4),u.attr("transform","translate("+(-k.width-14-(l.rotateCommitLabel===!0?30:0))+", "+(h-k.height/2-1)+")"),M==="TB"&&(_.attr("x",h-k.width/2-10).attr("y",0),u.attr("transform","translate("+(h-k.width/2-5)+", 0)")),M!=="TB"&&_.attr("transform","translate(-19, "+(h-k.height/2)+")")})},le=function(r,c,l,m){ae();const s=v(),n=s.gitGraph;H.debug("in gitgraph renderer",r+`
`,"id:",c,l),Q=m.db.getCommits();const b=m.db.getBranchesAsObjArray();M=m.db.getDirection();const h=St(`[id="${c}"]`);let f=0;b.forEach(($,i)=>{const _=_t($.name),u=h.append("g"),k=u.insert("g").attr("class","branchLabel"),y=k.insert("g").attr("class","label branch-label");y.node().appendChild(_);let p=_.getBBox();w[$.name]={pos:f,index:i},f+=50+(n.rotateCommitLabel?40:0)+(M==="TB"?p.width/2:0),y.remove(),k.remove(),u.remove()}),gt(h,Q,!1),n.showBranches&&oe(h,b),ne(h,Q),gt(h,Q,!0),Pt.insertTitle(h,"gitTitleText",n.titleTopMargin,m.db.getDiagramTitle()),Bt(void 0,h,n.diagramPadding,n.useMaxWidth??s.useMaxWidth)},he={draw:le},me=r=>`
  .commit-id,
  .commit-msg,
  .branch-label {
    fill: lightgrey;
    color: lightgrey;
    font-family: 'trebuchet ms', verdana, arial, sans-serif;
    font-family: var(--mermaid-font-family);
  }
  ${[0,1,2,3,4,5,6,7].map(c=>`
        .branch-label${c} { fill: ${r["gitBranchLabel"+c]}; }
        .commit${c} { stroke: ${r["git"+c]}; fill: ${r["git"+c]}; }
        .commit-highlight${c} { stroke: ${r["gitInv"+c]}; fill: ${r["gitInv"+c]}; }
        .label${c}  { fill: ${r["git"+c]}; }
        .arrow${c} { stroke: ${r["git"+c]}; }
        `).join(`
`)}

  .branch {
    stroke-width: 1;
    stroke: ${r.lineColor};
    stroke-dasharray: 2;
  }
  .commit-label { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelColor};}
  .commit-label-bkg { font-size: ${r.commitLabelFontSize}; fill: ${r.commitLabelBackground}; opacity: 0.5; }
  .tag-label { font-size: ${r.tagLabelFontSize}; fill: ${r.tagLabelColor};}
  .tag-label-bkg { fill: ${r.tagLabelBackground}; stroke: ${r.tagLabelBorder}; }
  .tag-hole { fill: ${r.textColor}; }

  .commit-merge {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }
  .commit-reverse {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
    stroke-width: 3;
  }
  .commit-highlight-outer {
  }
  .commit-highlight-inner {
    stroke: ${r.primaryColor};
    fill: ${r.primaryColor};
  }

  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}
  .gitTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${r.textColor};
  }
`,ye=me,ge={parser:Ht,db:re,renderer:he,styles:ye};export{ge as diagram};
