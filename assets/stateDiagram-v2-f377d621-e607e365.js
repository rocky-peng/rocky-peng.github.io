import{D as Y,A as _,L as F,E as M,t as H,I as J,_ as Q,C as X}from"./styles-87300129-ea1959f6.js";import{Z as tt}from"./graph-940f1512-bb8d8d05.js";import{a as p,V as S,C as D,Z as et,w as st,$ as C}from"./mermaid.esm.min-eda4be38.js";import{b as ot}from"./index-4400e55d-e091d53e.js";import"./app-fabccb1f.js";import"./framework-28382e28.js";import"./layout-5e46170e-85d403fa.js";import"./clone-e2cbe4d9-7a3845ac.js";import"./edges-a720f28b-c54657b8.js";import"./createText-e916aecc-23a8a1a3.js";import"./line-0f31738a-16926fc2.js";import"./array-2ff2c7a6-ffeda358.js";import"./path-428ebac9-3140eca4.js";const w="rect",k="rectWithTitle",at="start",it="end",rt="divider",nt="roundedWithTitle",dt="note",lt="noteGroup",u="statediagram",ct="state",pt=`${u}-${ct}`,P="transition",bt="note",gt="note-edge",ht=`${P} ${gt}`,ut=`${u}-${bt}`,yt="cluster",mt=`${u}-${yt}`,$t="cluster-alt",ft=`${u}-${$t}`,W="parent",Z="note",xt="state",E="----",wt=`${E}${Z}`,z=`${E}${W}`,j="fill:none",G="fill: #333",O="c",q="text",U="normal";let T={},c=0;const Tt=function(t){const a=Object.keys(t);for(const e of a)t[e]},St=function(t,a){return a.db.extract(a.db.getRootDocV2()),a.db.getClasses()};function At(t){return t==null?"":t.classes?t.classes.join(" "):""}function B(t="",a=0,e="",i=E){const r=e!==null&&e.length>0?`${i}${e}`:"";return`${xt}-${t}${r}-${a}`}const x=(t,a,e,i,r,n)=>{const s=e.id,y=At(i[s]);if(s!=="root"){let g=w;e.start===!0&&(g=at),e.start===!1&&(g=it),e.type!==M&&(g=e.type),T[s]||(T[s]={id:s,shape:g,description:C.sanitizeText(s,S()),classes:`${y} ${pt}`});const o=T[s];e.description&&(Array.isArray(o.description)?(o.shape=k,o.description.push(e.description)):o.description.length>0?(o.shape=k,o.description===s?o.description=[e.description]:o.description=[o.description,e.description]):(o.shape=w,o.description=e.description),o.description=C.sanitizeTextOrArray(o.description,S())),o.description.length===1&&o.shape===k&&(o.shape=w),!o.type&&e.doc&&(p.info("Setting cluster for ",s,v(e)),o.type="group",o.dir=v(e),o.shape=e.type===H?rt:nt,o.classes=o.classes+" "+mt+" "+(n?ft:""));const h={labelStyle:"",shape:o.shape,labelText:o.description,classes:o.classes,style:"",id:s,dir:o.dir,domId:B(s,c),type:o.type,padding:15};if(h.centerLabel=!0,e.note){const d={labelStyle:"",shape:dt,labelText:e.note.text,classes:ut,style:"",id:s+wt+"-"+c,domId:B(s,c,Z),type:o.type,padding:15},l={labelStyle:"",shape:lt,labelText:e.note.text,classes:o.classes,style:"",id:s+z,domId:B(s,c,W),type:"group",padding:0};c++;const m=s+z;t.setNode(m,l),t.setNode(d.id,d),t.setNode(s,h),t.setParent(s,m),t.setParent(d.id,m);let b=s,$=d.id;e.note.position==="left of"&&(b=d.id,$=s),t.setEdge(b,$,{arrowhead:"none",arrowType:"",style:j,labelStyle:"",classes:ht,arrowheadStyle:G,labelpos:O,labelType:q,thickness:U})}else t.setNode(s,h)}a&&a.id!=="root"&&(p.trace("Setting node ",s," to be child of its parent ",a.id),t.setParent(s,a.id)),e.doc&&(p.trace("Adding nodes children "),Dt(t,e,e.doc,i,r,!n))},Dt=(t,a,e,i,r,n)=>{p.trace("items",e),e.forEach(s=>{switch(s.stmt){case Q:x(t,a,s,i,r,n);break;case M:x(t,a,s,i,r,n);break;case J:{x(t,a,s.state1,i,r,n),x(t,a,s.state2,i,r,n);const y={id:"edge"+c,arrowhead:"normal",arrowTypeEnd:"arrow_barb",style:j,labelStyle:"",label:C.sanitizeText(s.description,S()),arrowheadStyle:G,labelpos:O,labelType:q,thickness:U,classes:P};t.setEdge(s.state1.id,s.state2.id,y,c),c++}break}})},v=(t,a=X)=>{let e=a;if(t.doc)for(let i=0;i<t.doc.length;i++){const r=t.doc[i];r.stmt==="dir"&&(e=r.value)}return e},kt=async function(t,a,e,i){p.info("Drawing state diagram (v2)",a),T={},i.db.getDirection();const{securityLevel:r,state:n}=S(),s=n.nodeSpacing||50,y=n.rankSpacing||50;p.info(i.db.getRootDocV2()),i.db.extract(i.db.getRootDocV2()),p.info(i.db.getRootDocV2());const g=i.db.getStates(),o=new tt({multigraph:!0,compound:!0}).setGraph({rankdir:v(i.db.getRootDocV2()),nodesep:s,ranksep:y,marginx:8,marginy:8}).setDefaultEdgeLabel(function(){return{}});x(o,void 0,i.db.getRootDocV2(),g,i.db,!0);let h;r==="sandbox"&&(h=D("#i"+a));const d=r==="sandbox"?D(h.nodes()[0].contentDocument.body):D("body"),l=d.select(`[id="${a}"]`),m=d.select("#"+a+" g");await ot(m,o,["barb"],u,a);const b=8;et.insertTitle(l,"statediagramTitleText",n.titleTopMargin,i.db.getDiagramTitle());const $=l.node().getBBox(),V=$.width+b*2,R=$.height+b*2;l.attr("class",u);const L=l.node().getBBox();st(l,R,V,n.useMaxWidth);const N=`${L.x-b} ${L.y-b} ${V} ${R}`;p.debug(`viewBox ${N}`),l.attr("viewBox",N);const K=document.querySelectorAll('[id="'+a+'"] .edgeLabel .label');for(const A of K){const I=A.getBBox(),f=document.createElementNS("http://www.w3.org/2000/svg",w);f.setAttribute("rx",0),f.setAttribute("ry",0),f.setAttribute("width",I.width),f.setAttribute("height",I.height),A.insertBefore(f,A.firstChild)}},Bt={setConf:Tt,getClasses:St,draw:kt},Zt={parser:Y,db:_,renderer:Bt,styles:F,init:t=>{t.state||(t.state={}),t.state.arrowMarkerAbsolute=t.arrowMarkerAbsolute,_.clear()}};export{Zt as diagram};
