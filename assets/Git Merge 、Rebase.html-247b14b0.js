import{_ as d,$ as l,a0 as n,a1 as e,a3 as i,a4 as r,a5 as s,a2 as a,w as o}from"./framework-b3a0f150.js";const h={},E=s('<h1 id="git-merge-、rebase" tabindex="-1"><a class="header-anchor" href="#git-merge-、rebase" aria-hidden="true">#</a> Git Merge 、Rebase</h1><h2 id="git-merge-a" tabindex="-1"><a class="header-anchor" href="#git-merge-a" aria-hidden="true">#</a> <strong>git merge a</strong></h2><p>会找到两个分支的共同祖先、以及两个分支各自最新的提交，然后进行三方合并，并且在对合并中修改的内容形成一个新的commit</p><h2 id="git-rebase-a" tabindex="-1"><a class="header-anchor" href="#git-rebase-a" aria-hidden="true">#</a> <strong>git rebase a</strong></h2><p>也就是变基，即把当前分支的祖先更改为a分支最新的提交。此时a为<strong>基分支</strong>，当前分支为**待变基分支。**git会从两个分支的祖先开始提取待变基分支的提交，然后把当前分支指针指向基分支最新提交，然后应用刚才提取到的修改（即：以a为基底合并当前分支代码）</p><p><strong>rebase与merge的功能都是合并代码</strong></p><p>现在假设有两个分支：dev 和 dev-pqs （dev-pqs是模拟各个开发人员的开发分支）</p><p>dev-pqs基于dev分支拉出，然后进行了 A B两个提交</p><p>然后dev分支分支有个新的提交 M（比如是其他开发人员合并上去的），如下图</p><figure><img src="https://cdn.justdopay.com/notion/md5-7ee058faf958872e49825ee139b46a85.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h2 id="把dev-pqs的代码合并到dev" tabindex="-1"><a class="header-anchor" href="#把dev-pqs的代码合并到dev" aria-hidden="true">#</a> 把dev-pqs的代码合并到dev</h2><h3 id="merge" tabindex="-1"><a class="header-anchor" href="#merge" aria-hidden="true">#</a> merge</h3><ol><li>切换当前分支为dev-pqs</li><li>执行git merge dev （后续应该再切换到dev分支，然后把dev-pqs合并到dev，这个步骤就省略了，因为如果有冲突，冲突已经在1、2两个步骤解决掉了，也可以直接执行这两个步骤）</li></ol><p>结果如下：</p><figure><img src="https://cdn.justdopay.com/notion/md5-5f76033e4a96ff5ebc4dd0889fafbe34.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h3 id="rebase" tabindex="-1"><a class="header-anchor" href="#rebase" aria-hidden="true">#</a> rebase</h3><ol><li>切换当前分支为 dev-pqs</li><li>执行 git rebase dev （后续应该再切换到dev分支，然后把dev-pqs合并到dev，这个步骤就省略了，因为如果有冲突，冲突已经在1、2两个步骤解决掉了，也可以直接执行这两个步骤）</li></ol><p>rebase前，dev-pqs分支的祖先是dev那个提交，rebase后，祖先就更改为dev的最新提交，也就是m那次提交。如下图：</p><figure><img src="https://cdn.justdopay.com/notion/md5-8b5ea2514439c08c59d915aeca8e72b0.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h2><ol><li>merge操作通常会生成一个新的commit，已提交的commit的版本号不会发生编号</li><li>merge后分支的祖先信息不会丢失</li><li>merge操作后的结果能提现出时间线</li><li>rebase操作后分支祖先信息会丢失，如上图看不出dev-pqs的祖先</li><li>rebase同时会更改commit的版本号，比如上面的A、B两个提交的版本号就发生了变化。A: 11e75—&gt;c78c B: 68b0—&gt;106d</li><li>rebase操作后并不是按照时间线排列（当然可以根据提交时间判断）</li></ol><h2 id="merge还是rebase" tabindex="-1"><a class="header-anchor" href="#merge还是rebase" aria-hidden="true">#</a> merge还是rebase?</h2><p>根据上面的区别，再根据公司、项目实际情况选择使用即可</p><h2 id="git-pull" tabindex="-1"><a class="header-anchor" href="#git-pull" aria-hidden="true">#</a> git pull</h2><p>git pull 等效于 git fetch + git merge</p><p>git pull -r 等效于 git pull -rebase 又等效于 git fetch + git rebase</p><h2 id="idea的rebase操作" tabindex="-1"><a class="header-anchor" href="#idea的rebase操作" aria-hidden="true">#</a> idea的rebase操作</h2><figure><img src="https://cdn.justdopay.com/notion/md5-cdd8d72339d573499dc776d5a970319d.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p>点击红框”rebase dev-pqs onto dev” 就相当于在执行 git rebase dev，一样的效果。 这个”onto”感觉很形象，有点体现出以dev为基底的感觉</p><h2 id="idea设置" tabindex="-1"><a class="header-anchor" href="#idea设置" aria-hidden="true">#</a> idea设置</h2><figure><img src="https://cdn.justdopay.com/notion/md5-b558ba217c6076d0b70c8e922c37b5c7.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>',33),c=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),g=e("hr",null,null,-1),p=e("hr",null,null,-1),u=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),a("：疫情当前，少移动不联通，——中国电信。 "),e("br"),e("br"),e("img",{src:"https://tuapi.eees.cc/api.php?category=fengjing&type=302&uuid=4161b3ca-b7ee-4a71-83a4-0f16c98b5aee",alt:"",loading:"lazy"})])],-1);function B(b,f){const t=o("RouterLink");return l(),n("div",null,[E,e("ul",null,[e("li",null,[i(t,{to:"/software/unclassified/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F.html"},{default:r(()=>[a("记一次内存泄漏")]),_:1})]),e("li",null,[i(t,{to:"/other/%E6%95%B0%E7%BB%84%E8%BD%AC%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84%E5%8F%AA%E9%9C%80%E4%B8%A4%E6%AD%A5.html"},{default:r(()=>[a("数组转树形结构只需两步")]),_:1})]),e("li",null,[i(t,{to:"/other/Censys%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%AD%A6%E4%B9%A0.html"},{default:r(()=>[a("Censys搜索引擎学习")]),_:1})]),e("li",null,[i(t,{to:"/other/Hadoop%20%E4%B8%80.html"},{default:r(()=>[a("Hadoop 一")]),_:1})]),e("li",null,[i(t,{to:"/other/istio%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86.html"},{default:r(()=>[a("istio基础知识")]),_:1})]),e("li",null,[i(t,{to:"/software/java-basic/%E4%B8%8D%E9%87%8D%E5%90%AF%20JVM%EF%BC%8C%E5%A6%82%E4%BD%95%E6%9B%BF%E6%8D%A2%E6%8E%89%E5%B7%B2%E7%BB%8F%E5%8A%A0%E8%BD%BD%E7%9A%84%E7%B1%BB%EF%BC%9F.html"},{default:r(()=>[a("不重启 JVM，如何替换掉已经加载的类？")]),_:1})]),e("li",null,[i(t,{to:"/software/middleware/mysql/SQL%E4%BC%98%E5%8C%96.html"},{default:r(()=>[a("SQL优化")]),_:1})]),e("li",null,[i(t,{to:"/software/java-basic/ReentrantLock%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"},{default:r(()=>[a("ReentrantLock源码解读")]),_:1})]),e("li",null,[i(t,{to:"/software/java-basic/Java%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80.html"},{default:r(()=>[a("Java面试基础")]),_:1})]),e("li",null,[i(t,{to:"/other/MySQL%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%88%B0PGSQL.html"},{default:r(()=>[a("MySQL数据迁移到PGSQL")]),_:1})]),e("li",null,[i(t,{to:"/other/PostgreSQL%20JSON%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C.html"},{default:r(()=>[a("PostgreSQL JSON类型字段常用操作")]),_:1})]),e("li",null,[i(t,{to:"/other/%E5%85%8D%E8%B4%B9%20API%20%E6%AF%8F%E6%97%A5%E6%8F%90%E4%BE%9B%E6%91%B8%E9%B1%BC%E6%97%A5%E6%8A%A5%EF%BC%8C%E8%87%AA%E5%8A%A8%E8%BF%94%E5%9B%9E%E6%97%A0%E6%B0%B4%E5%8D%B0%E5%9B%BE%E7%89%87%EF%BC%8C%E9%80%82%E7%94%A8%E4%BA%8E%E5%85%AC%E4%BC%97%E5%8F%B7%E5%92%8C%E5%B0%8F%E7%A8%8B%E5%BA%8F.html"},{default:r(()=>[a("免费 API 每日提供摸鱼日报，自动返回无水印图片，适用于公众号和小程序")]),_:1})])]),c,g,p,u])}const A=d(h,[["render",B],["__file","Git Merge 、Rebase.html.vue"]]);export{A as default};
