import{_ as n,$ as s,a0 as d,a1 as a,a2 as l,a3 as t,a4 as o,a5 as u,w as i}from"./framework-b3a0f150.js";const h={},c=u('<p>spring cloud 是微服务分布式部署的一套解决方案。它涵盖了很多组件，比如配置中心、服务发现注册、负载均衡、阻断器、消息总线、数据监控等，这些组件都是为微服务分布式部署中几乎都会遇到的问题。</p><p>微服务：通俗的讲就是功能相关的的一个集合作为一个服务单独进行部署，那么很多个这样的集合就构成了微服务。用专业一点的俗语讲就是把满足 srp(single_responsibility_principle)原则的的服务。 <img src="https://cdn.justdopay.com/xiaoshujiang/1629079407248.png" alt="" loading="lazy"></p><h2 id="spring-cloud与dubbo的区别" tabindex="-1"><a class="header-anchor" href="#spring-cloud与dubbo的区别" aria-hidden="true">#</a> Spring Cloud与Dubbo的区别</h2><ol><li>微服务涵盖范围不同：dubbo专注于服务治理，只涵盖了微服务架构的某些方面。而spring cloud涵盖了微服务架构的方方面面。</li><li>服务调用方式不同：spring cloud基于http协议进行调用，dubbo基于tcp协议调用，所以dubbo在代码上调用方和服务方依赖性强 <img src="https://cdn.justdopay.com/xiaoshujiang/1629079412706.png" alt="" loading="lazy"></li></ol><h2 id="eureka-服务发现注册中心" tabindex="-1"><a class="header-anchor" href="#eureka-服务发现注册中心" aria-hidden="true">#</a> Eureka（服务发现注册中心）</h2><p>和zookeeper / consul 类似</p><h2 id="hystrix-熔断器" tabindex="-1"><a class="header-anchor" href="#hystrix-熔断器" aria-hidden="true">#</a> Hystrix（熔断器）</h2><p>Hystrix 会在某个服务连续调用 N 次不响应的情况下，立即通知调用端调用失败，避免调用端持续等待而影响了整体服务。Hystrix 间隔时间会再次检查此服务，如果服务恢复将继续提供服务。 <img src="https://cdn.justdopay.com/xiaoshujiang/1629079417263.png" alt="" loading="lazy"> 熔断监控工具： Hystrix Dashbord和Turbine。 turbine用于各个在微服务中收集熔断数据， hystrix dashbord则用于展示这些数据。显示效果如下： <img src="https://cdn.justdopay.com/xiaoshujiang/1629079422541.png" alt="" loading="lazy"></p><h2 id="spring-cloud-config-配置中心" tabindex="-1"><a class="header-anchor" href="#spring-cloud-config-配置中心" aria-hidden="true">#</a> Spring Cloud Config（配置中心）</h2><p>配置的集中化管理，当配置在服务运行期间发生改变的时候可以通过refresh功能刷新配置。生产环境建议配置中心集群化部署已保证其高可用性。</p><h2 id="spring-cloud-bus-通讯组件" tabindex="-1"><a class="header-anchor" href="#spring-cloud-bus-通讯组件" aria-hidden="true">#</a> Spring Cloud Bus (通讯组件)</h2><p>通过spring cloud bus可以连接各个微服务节点，当需要给多个或者所有服务节点发送某个信息的时候，即可通过spring cloud bus来完成。</p><p>比如：当某个配置发生改变后，需要通知对应的服务实例刷新配置，这个时候可以通过sprIng cloud bus来完成。其工作原理如下： <img src="https://cdn.justdopay.com/xiaoshujiang/1629079429424.png" alt="" loading="lazy"></p><h2 id="spring-cloud-zuul-服务网关" tabindex="-1"><a class="header-anchor" href="#spring-cloud-zuul-服务网关" aria-hidden="true">#</a> Spring Cloud Zuul （服务网关）</h2><figure><img src="https://cdn.justdopay.com/xiaoshujiang/1629079435563.png" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>请求转发，感觉有点类似nginx的角色</p><h2 id="spring-cloud-sleuth-链路跟踪" tabindex="-1"><a class="header-anchor" href="#spring-cloud-sleuth-链路跟踪" aria-hidden="true">#</a> Spring Cloud Sleuth （链路跟踪）</h2><p>分布式链路跟踪需要 Sleuth+Zipkin 结合来实现。</p><h2 id="参考文献" tabindex="-1"><a class="header-anchor" href="#参考文献" aria-hidden="true">#</a> 参考文献</h2>',19),p={href:"https://windmt.com/2018/04/14/spring-cloud-0-microservices/",target:"_blank",rel:"noopener noreferrer"},g=a("br",null,null,-1),E=a("h2",{id:"系统推荐",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#系统推荐","aria-hidden":"true"},"#"),l(" 系统推荐")],-1),f=a("p",null,[a("br"),a("br"),a("br"),a("br"),a("br"),a("br")],-1),b=a("hr",null,null,-1),_=a("hr",null,null,-1),A=a("ul",null,[a("li",null,[a("strong",null,"随机毒鸡汤"),l("：我现在无心学习，一心只想为祖国庆生。 "),a("br"),a("br"),a("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=927c35cb-2538-462d-8847-70eb396bc0a7",alt:"",loading:"lazy"})])],-1);function B(m,x){const r=i("ExternalLinkIcon"),e=i("RouterLink");return s(),d("div",null,[c,a("blockquote",null,[a("p",null,[a("a",p,[l("Spring Cloud（零）：微服务的那些事儿"),t(r)])])]),g,E,a("ul",null,[a("li",null,[t(e,{to:"/software/unclassified/Oh%20My%20ZSH.html"},{default:o(()=>[l("Oh My ZSH")]),_:1})]),a("li",null,[t(e,{to:"/software/docker/Docker%E8%BF%9B%E8%A1%8C%E8%B5%84%E6%BA%90%E9%9A%94%E7%A6%BB.html"},{default:o(()=>[l("Docker进行资源隔离")]),_:1})]),a("li",null,[t(e,{to:"/software/jvm/JVM%E5%8F%82%E6%95%B0%E8%AE%BE%E7%BD%AE.html"},{default:o(()=>[l("JVM参数设置")]),_:1})]),a("li",null,[t(e,{to:"/other/%E6%95%B0%E7%BB%84%E8%BD%AC%E6%A0%91%E5%BD%A2%E7%BB%93%E6%9E%84%E5%8F%AA%E9%9C%80%E4%B8%A4%E6%AD%A5.html"},{default:o(()=>[l("数组转树形结构只需两步")]),_:1})]),a("li",null,[t(e,{to:"/other/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Google%20BBR.html"},{default:o(()=>[l("如何安装Google BBR")]),_:1})]),a("li",null,[t(e,{to:"/software/unclassified/%E7%BA%BF%E4%B8%8AFullGC%E9%A2%91%E7%B9%81%E7%9A%84%E6%8E%92%E6%9F%A5.html"},{default:o(()=>[l("线上FullGC频繁的排查")]),_:1})]),a("li",null,[t(e,{to:"/software/java-basic/AQS%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"},{default:o(()=>[l("AQS源码解读")]),_:1})]),a("li",null,[t(e,{to:"/software/java-basic/Java%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80.html"},{default:o(()=>[l("Java面试基础")]),_:1})]),a("li",null,[t(e,{to:"/software/raft/sofajraft.html"},{default:o(()=>[l("sofajraft")]),_:1})]),a("li",null,[t(e,{to:"/other/GitHub%20Workflow%E7%AA%81%E7%84%B6%E6%8A%A5%E9%94%99.html"},{default:o(()=>[l("GitHub Workflow突然报错")]),_:1})]),a("li",null,[t(e,{to:"/other/PostgreSQL%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:o(()=>[l("PostgreSQL高可用")]),_:1})]),a("li",null,[t(e,{to:"/software/unclassified/BBR%E5%8A%A0%E9%80%9F.html"},{default:o(()=>[l("BBR加速")]),_:1})])]),f,b,_,A])}const k=n(h,[["render",B],["__file","SpringCloud总体认识.html.vue"]]);export{k as default};
