import{_ as i,$ as r,a0 as d,a1 as e,a3 as a,a4 as l,a5 as o,a2 as n,w as c}from"./framework-58787b1c.js";const t={},u=o(`<p>BBR 是google发布一个网络拥塞算法，相比其他算法而言其性能更高，能更好的利用网络带宽。</p><h2 id="前提条件" tabindex="-1"><a class="header-anchor" href="#前提条件" aria-hidden="true">#</a> 前提条件</h2><ul><li>CentOS 7.x</li><li>sudo 权限</li></ul><h2 id="步骤一-升级内核" tabindex="-1"><a class="header-anchor" href="#步骤一-升级内核" aria-hidden="true">#</a> 步骤一：升级内核</h2><ol><li><p>查看当前内核</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>uname -r
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>会有类似下面的输出</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token number">3.10</span>.<span class="token number">0</span><span class="token number">-514.2</span>.<span class="token number">2</span>.el7.x86_64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>可以看到内核版本是3.10.0</p></li><li><p>安装 ELRepo</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>sudo rpm --import https<span class="token operator">:</span><span class="token comment">//www.elrepo.org/RPM-GPG-KEY-elrepo.org</span>

sudo rpm -Uvh http<span class="token operator">:</span><span class="token comment">//www.elrepo.org/elrepo-release-7.0-2.el7.elrepo.noarch.rpm</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>安装高版本内核</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>sudo yum --enablerepo=elrepo-kernel install kernel-ml -y
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>安装完成后查看安装结果</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>rpm -qa | grep kernel
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>如果安装成功，上面命令会输出 <code>kernel-ml-x.x.x-1.el7.elrepo.x86_64</code> ，类似下面样子</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>kernel-ml<span class="token number">-4.9</span>.<span class="token number">0</span><span class="token number">-1</span>.el7.elrepo.x86_64

kernel<span class="token number">-3.10</span>.<span class="token number">0</span><span class="token number">-514</span>.el7.x86_64

kernel-tools-libs<span class="token number">-3.10</span>.<span class="token number">0</span><span class="token number">-514.2</span>.<span class="token number">2</span>.el7.x86_64

kernel-tools<span class="token number">-3.10</span>.<span class="token number">0</span><span class="token number">-514.2</span>.<span class="token number">2</span>.el7.x86_64

kernel<span class="token number">-3.10</span>.<span class="token number">0</span><span class="token number">-514.2</span>.<span class="token number">2</span>.el7.x86_64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>启用新的内核，启用前查看grub2启动项</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>sudo egrep ^menuentry /etc/grub2.cfg | cut -f <span class="token number">2</span> -d \\&#39;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>会有类似下面的输出</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>CentOS Linux <span class="token number">7</span> Rescue a0cbf86a6ef1416a8812657bb4f2b860 (<span class="token number">4.9</span>.<span class="token number">0</span><span class="token number">-1</span>.el7.elrepo.x86_64)

CentOS Linux (<span class="token number">4.9</span>.<span class="token number">0</span><span class="token number">-1</span>.el7.elrepo.x86_64) <span class="token number">7</span> (Core)

CentOS Linux (<span class="token number">3.10</span>.<span class="token number">0</span><span class="token number">-514.2</span>.<span class="token number">2</span>.el7.x86_64) <span class="token number">7</span> (Core)

CentOS Linux (<span class="token number">3.10</span>.<span class="token number">0</span><span class="token number">-514</span>.el7.x86_64) <span class="token number">7</span> (Core)

CentOS Linux (<span class="token number">0</span>-rescue-bf94f46c6bd04792a6a42c91bae645f7) <span class="token number">7</span> (Core)
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>从上往下，从0开始往下数，我们要启用的内核位置是1，于是执行</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>sudo grub2-set-default <span class="token number">1</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>重启系统</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>reboot
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>重启后查看系统内核</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>uname -r
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>会有类似下面的输出</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token number">4.9</span>.<span class="token number">0</span><span class="token number">-1</span>.el7.elrepo.x86_64
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="步骤二-启用bbr" tabindex="-1"><a class="header-anchor" href="#步骤二-启用bbr" aria-hidden="true">#</a> 步骤二：启用BBR</h2><ol><li><p>修改<code>sysctl</code> 配置已启用BBR</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>echo &#39;net.core.default_qdisc=fq&#39; | sudo tee -a /etc/sysctl.conf

echo &#39;net.ipv4.tcp_congestion_control=bbr&#39; | sudo tee -a /etc/sysctl.conf

sudo sysctl -p
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>验证是否已经启用了BBR</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>sudo sysctl net.ipv4.tcp_available_congestion_control
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>会输出类似下面的内容</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>net.ipv4.tcp_available_congestion_control = bbr cubic reno
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>进一步验证</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>sudo sysctl -n net.ipv4.tcp_congestion_control
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>应该输出</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>bbr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>最后检查内核模块是否已经加载</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>lsmod | grep bbr
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>会输出类似下面的内容</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>tcp_bbr                <span class="token number">16384</span>  <span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h2 id="步骤三" tabindex="-1"><a class="header-anchor" href="#步骤三" aria-hidden="true">#</a> 步骤三</h2><p>没有了，享用BBR吧</p><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,11),p=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),m=e("hr",null,null,-1),b=e("hr",null,null,-1),v=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),n("：你有了省钱的脑子，就没有一个挣钱的胆子，所以穷得很稳定。 "),e("br"),e("br"),e("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=d776ff06-cf66-43c1-a97a-52b1e754ee5a",alt:"",loading:"lazy"})])],-1);function g(h,E){const s=c("RouterLink");return r(),d("div",null,[u,e("ul",null,[e("li",null,[a(s,{to:"/software/unclassified/KVM%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85.html"},{default:l(()=>[n("KVM 虚拟机安装")]),_:1})]),e("li",null,[a(s,{to:"/software/spring/Spring%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%85%B3%E9%94%AE%E7%82%B9.html"},{default:l(()=>[n("Spring框架源码关键点")]),_:1})]),e("li",null,[a(s,{to:"/other/HTTP1%200%20vs%20HTTP1%201%20vs%20WebSocket.html"},{default:l(()=>[n("HTTP1 0 vs HTTP1 1 vs WebSocket")]),_:1})]),e("li",null,[a(s,{to:"/software/jvm/JDK%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7.html"},{default:l(()=>[n("JDK命令行工具")]),_:1})]),e("li",null,[a(s,{to:"/other/MongoDB%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:l(()=>[n("MongoDB高可用")]),_:1})]),e("li",null,[a(s,{to:"/other/Spring%20RetryTemplate.html"},{default:l(()=>[n("Spring RetryTemplate")]),_:1})]),e("li",null,[a(s,{to:"/software/unclassified/%E5%88%B6%E4%BD%9CKVM%20ES%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6.html"},{default:l(()=>[n("制作KVM ES镜像文件")]),_:1})]),e("li",null,[a(s,{to:"/other/Arthas%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html"},{default:l(()=>[n("Arthas使用记录")]),_:1})]),e("li",null,[a(s,{to:"/other/PGSQL%E7%9A%84json%E5%92%8C%20jsonb%20%E8%AF%BB%E5%86%99%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95.html"},{default:l(()=>[n("PGSQL的json和 jsonb 读写性能测试")]),_:1})]),e("li",null,[a(s,{to:"/other/%E5%89%8D%E7%AB%AFaxios%E4%B8%8B%E8%BD%BDcsv%E6%96%87%E4%BB%B6%E4%B9%B1%E7%A0%81.html"},{default:l(()=>[n("前端axios下载csv文件乱码")]),_:1})]),e("li",null,[a(s,{to:"/other/SpringBoot%E6%9C%8D%E5%8A%A1%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%AE%8C%E6%88%90%E5%89%8D%E8%A2%AB%E6%8F%90%E5%89%8D%E6%B3%A8%E5%86%8C%E5%88%B0nacos.html"},{default:l(()=>[n("SpringBoot服务在服务启动完成前被提前注册到nacos")]),_:1})]),e("li",null,[a(s,{to:"/software/raft/raft%E5%8D%8F%E8%AE%AE.html"},{default:l(()=>[n("raft协议")]),_:1})])]),p,m,b,v])}const _=i(t,[["render",g],["__file","如何安装Google BBR.html.vue"]]);export{_ as default};
