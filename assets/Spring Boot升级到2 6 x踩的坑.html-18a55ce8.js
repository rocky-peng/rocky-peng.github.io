import{_ as i,$ as r,a0 as c,a1 as a,a2 as n,a3 as t,a4 as s,a5 as p,w as l}from"./framework-b7a22294.js";const d={},u=p(`<h2 id="一-循环依赖异常" tabindex="-1"><a class="header-anchor" href="#一-循环依赖异常" aria-hidden="true">#</a> 一：循环依赖异常</h2><p>比如某个ServiceA 内部引用了自身，目的是为了防止事务注解失效</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServiceA</span> <span class="token punctuation">{</span>
	
	<span class="token annotation punctuation">@Autowired</span>
	<span class="token keyword">private</span> <span class="token class-name">ServiceA</span> serviceA<span class="token punctuation">;</span>

	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种做法在spring boot 2.6.0之前是没有问题的。</p><p>现在技术升级，把spring boot的版本从2.3.12.RELEASE升级到了2.6.0，然后出现了下面的提示：</p><blockquote><p>Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to tr</p></blockquote><p>采用的解决方案就是，</p><p>**方案一：**不直接注入自身，转而注入ApplicationContext，然后在使用的地方通过getBean的方式获取实例对象</p><p>**方案二：**使用 <code>XXX xxx = (XXX)AopContext.*currentProxy*()</code> 这个方法会放回当前类的代理对象，内部是通过threadlocal来存储。通过这个方式也能达到相同目的</p><h2 id="二-url中的双斜杠出现404" tabindex="-1"><a class="header-anchor" href="#二-url中的双斜杠出现404" aria-hidden="true">#</a> 二：url中的双斜杠出现404</h2><p>在升级前，<strong>代码中</strong>如果某个接口地中中有两个双斜杠，是能正常执行的。比如代码中某个接口的url拼接起来是：/api//xxx/xxx 用api/xxx/xxx可以正常访问</p><p>升级到2.6.x后会不在代码中去掉双斜杠的情况下，用api/xxx/xxx访问就会404，导致接口异常</p><h2 id="三-nacos的shared-config配置不生效" tabindex="-1"><a class="header-anchor" href="#三-nacos的shared-config配置不生效" aria-hidden="true">#</a> 三：nacos的shared-config配置不生效</h2><p>在spring boot 2.4.0之前采用类似下面的配置即可</p><figure><img src="https://cdn.justdopay.com/notion/md5-47f92655d02085f5a7eb3d130366ae7a.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p>但升级后2.4.0之后的版本后下面的配置是跑步起来的，会提示：</p><figure><img src="https://cdn.justdopay.com/notion/md5-3217309c59519fe70978caaefa146023.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p><strong>升级后正确的配置</strong>类似下面：</p><figure><img src="https://cdn.justdopay.com/notion/md5-91d47a5d51b8ce0f41ea139605e8edde.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>`,19),h={href:"https://github.com/alibaba/spring-cloud-alibaba/pull/2349#top",target:"_blank",rel:"noopener noreferrer"},E=a("br",null,null,-1),f=a("h2",{id:"系统推荐",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#系统推荐","aria-hidden":"true"},"#"),n(" 系统推荐")],-1),b=a("p",null,[a("br"),a("br"),a("br"),a("br"),a("br"),a("br")],-1),g=a("hr",null,null,-1),_=a("hr",null,null,-1),m=a("ul",null,[a("li",null,[a("strong",null,"随机毒鸡汤"),n("：两个人吵架，打他是解决不了问题的，但是解气啊。 "),a("br"),a("br"),a("img",{src:"https://tuapi.eees.cc/api.php?category=fengjing&type=302&uuid=259f4ac2-7604-4e6f-8dbd-be80f229f925",alt:"",loading:"lazy"})])],-1);function A(x,B){const o=l("ExternalLinkIcon"),e=l("RouterLink");return r(),c("div",null,[u,a("p",null,[n("扩展看："),a("a",h,[n("https://github.com/alibaba/spring-cloud-alibaba/pull/2349#top"),t(o)])]),E,f,a("ul",null,[a("li",null,[t(e,{to:"/software/unclassified/Oh%20My%20ZSH.html"},{default:s(()=>[n("Oh My ZSH")]),_:1})]),a("li",null,[t(e,{to:"/software/unclassified/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F.html"},{default:s(()=>[n("记一次内存泄漏")]),_:1})]),a("li",null,[t(e,{to:"/software/unclassified/Git%E7%AC%94%E8%AE%B0.html"},{default:s(()=>[n("Git笔记")]),_:1})]),a("li",null,[t(e,{to:"/other/Git%E5%90%88%E5%B9%B6%E5%A4%9A%E4%B8%AA%E6%8F%90%E4%BA%A4%E5%B9%B6push%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93.html"},{default:s(()=>[n("Git合并多个提交并push到远程仓库")]),_:1})]),a("li",null,[t(e,{to:"/other/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E6%8B%BC%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%90%97%EF%BC%9F.html"},{default:s(()=>[n("你真的会拼接字符串吗？")]),_:1})]),a("li",null,[t(e,{to:"/other/Cornell%20Notes%20System.html"},{default:s(()=>[n("Cornell Notes System")]),_:1})]),a("li",null,[t(e,{to:"/software/java-basic/IO%E7%9B%B8%E5%85%B3.html"},{default:s(()=>[n("IO相关")]),_:1})]),a("li",null,[t(e,{to:"/software/shodowsocks/ShadowsockServer%E9%85%8D%E7%BD%AE.html"},{default:s(()=>[n("ShadowsockServer配置")]),_:1})]),a("li",null,[t(e,{to:"/software/middleware/es/ES%E6%9D%82%E9%A1%B9.html"},{default:s(()=>[n("ES杂项")]),_:1})]),a("li",null,[t(e,{to:"/other/SpringBoot%E6%9C%8D%E5%8A%A1%E5%9C%A8%E6%9C%8D%E5%8A%A1%E5%90%AF%E5%8A%A8%E5%AE%8C%E6%88%90%E5%89%8D%E8%A2%AB%E6%8F%90%E5%89%8D%E6%B3%A8%E5%86%8C%E5%88%B0nacos.html"},{default:s(()=>[n("SpringBoot服务在服务启动完成前被提前注册到nacos")]),_:1})]),a("li",null,[t(e,{to:"/intro.html"},{default:s(()=>[n("intro")]),_:1})]),a("li",null,[t(e,{to:"/software/raft/raft%E5%8D%8F%E8%AE%AE.html"},{default:s(()=>[n("raft协议")]),_:1})])]),b,g,_,m])}const k=i(d,[["render",A],["__file","Spring Boot升级到2 6 x踩的坑.html.vue"]]);export{k as default};
