import{_ as r,$ as s,a0 as i,a1 as e,a3 as o,a4 as a,a5 as n,a2 as l,w as d}from"./framework-349591b1.js";const u={},h=n('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><p>问题一： 比如现在k8s有个deployment，有3个pod。此时有个请求在pod A中进行处理，假设需要耗时5分钟。在这个5分钟内，执行了k8s的滚动发布，并开始销毁这个pod。 这个场景下，如果不做一些额外配置，那么pod A的这个请求应该会处理异常。</p><p>问题二： 滚动发布的时候，k8s刚启动了一个pod，但这个pod可能需要等一段时间才能真正对外提供服务。但k8s此时开始转发请求到这个pod了，这种情况下，请求是不能成功处理的</p><p>核心问题：</p><ol><li>k8s如何知道pod可以对外提供服务了</li><li>pod如何知道k8s要销毁这个pod了，pod里的应用程序知道后就能自己进行shutdown</li></ol><h2 id="配置" tabindex="-1"><a class="header-anchor" href="#配置" aria-hidden="true">#</a> 配置</h2><p>其实主要利用k8s pod的两个东西：</p><ol><li>就绪探针</li><li>preStop</li></ol><p>如果pod中运行的是spring boot项目，那么就可以结合spring-actuator来完成。</p><ul><li>就绪探针就配置 /actuator/health，或者自定义一个url</li><li>preStop就配置/actuator/shutdown</li></ul><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>',12),c=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),E=e("hr",null,null,-1),p=e("hr",null,null,-1),B=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),l("：世界上有没有纯友谊？当然有，只要长得丑 四海皆朋友。 "),e("br"),e("br"),e("img",{src:"https://images.pexels.com/photos/4676588/pexels-photo-4676588.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Stylish woman leaning against a column in a modern urban setting, showcasing effortless elegance.",loading:"lazy"})])],-1);function _(m,f){const t=d("RouterLink");return s(),i("div",null,[h,e("ul",null,[e("li",null,[o(t,{to:"/software/unclassified/MAT%E5%B7%A5%E5%85%B7.html"},{default:a(()=>[l("MAT工具")]),_:1})]),e("li",null,[o(t,{to:"/software/middleware/mysql/MySQL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"},{default:a(()=>[l("MySQL常用命令")]),_:1})]),e("li",null,[o(t,{to:"/other/PostgreSQL%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD.html"},{default:a(()=>[l("PostgreSQL定时备份")]),_:1})]),e("li",null,[o(t,{to:"/software/java-basic/Thread%20&%20ExecutorService%20&%20ThreadPoolExecutor%20%E6%80%BB%E8%A7%88.html"},{default:a(()=>[l("Thread & ExecutorService & ThreadPoolExecutor 总览")]),_:1})]),e("li",null,[o(t,{to:"/software/shodowsocks/ShadowsockServerUpdatePort.html"},{default:a(()=>[l("ShadowsockServerUpdatePort")]),_:1})]),e("li",null,[o(t,{to:"/software/middleware/es/%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8Edocker%E7%9A%84elk%E5%B9%B3%E5%8F%B0%E6%9D%A5%E5%88%86%E6%9E%90java%E6%97%A5%E5%BF%97.html"},{default:a(()=>[l("搭建基于docker的elk平台来分析java日志")]),_:1})]),e("li",null,[o(t,{to:"/software/unclassified/%E5%88%B6%E4%BD%9CKVM%20ES%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6.html"},{default:a(()=>[l("制作KVM ES镜像文件")]),_:1})]),e("li",null,[o(t,{to:"/software/middleware/mysql/MySQL%E4%B8%89%E5%A4%A7%E6%97%A5%E5%BF%97.html"},{default:a(()=>[l("MySQL三大日志")]),_:1})]),e("li",null,[o(t,{to:"/other/MyBatis%20xml%E7%89%B9%E6%AE%8A%E5%AD%97%E7%AC%A6%E5%A4%84%E7%90%86.html"},{default:a(()=>[l("MyBatis xml特殊字符处理")]),_:1})]),e("li",null,[o(t,{to:"/other/JetBrains-License-Server.html"},{default:a(()=>[l("JetBrains-License-Server")]),_:1})]),e("li",null,[o(t,{to:"/software/unclassified/Markdown%E8%BD%AF%E4%BB%B6%E6%AF%94%E5%AF%B9.html"},{default:a(()=>[l("Markdown软件比对")]),_:1})]),e("li",null,[o(t,{to:"/other/WebSocket%20SpringBoot%20Demo.html"},{default:a(()=>[l("WebSocket SpringBoot Demo")]),_:1})])]),c,E,p,B])}const S=r(u,[["render",_],["__file","K8S 无感发布.html.vue"]]);export{S as default};
