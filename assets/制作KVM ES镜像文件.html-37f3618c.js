import{_ as r,$ as i,a0 as c,a1 as s,a2 as a,a3 as e,a4 as t,a5 as p,w as l}from"./framework-7a325de9.js";const d={},u={href:"https://note.youdao.com/ynoteshare1/index.html?id=d641f8e6125142a0c2f19a9b416534ac&type=note?auto",target:"_blank",rel:"noopener noreferrer"},m=p(`<ol><li>进入centos服务器，上传es的安装文件到服务器并解压到/usr/share/elasticsearch目录，然后已root用户执行下面步骤：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adduser elastic

<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft nofile 125536&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard nofile 125536&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft nproc  8096&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard nproc  8096&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf


<span class="token builtin class-name">echo</span> <span class="token string">&quot;vm.max_map_count=522144&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token function">sysctl</span> <span class="token parameter variable">-p</span>

<span class="token function">chown</span> <span class="token parameter variable">-R</span> elastic:elastic /usr/share/elasticsearch

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要开启 bootstrap.memory_lock: true，则还需要执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard memlock unlimited&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft memlock unlimited&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改jvm.options文件</p><p>已elastic用户修改es的配置文件，然后执行 bin/elasticsearch -d</p><h2 id="编写自启动脚本" tabindex="-1"><a class="header-anchor" href="#编写自启动脚本" aria-hidden="true">#</a> 编写自启动脚本</h2><ol><li>vi /usr/lib/systemd/system/elasticsearch.service</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>elasticsearch <span class="token function">service</span>
  
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">User</span><span class="token operator">=</span>elastic
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/share/elasticsearch/bin/elasticsearch
  
<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>systemctl enable elasticsearch</p></li><li><p>systemctl start elasticsearch</p></li></ol><h2 id="docker部署" tabindex="-1"><a class="header-anchor" href="#docker部署" aria-hidden="true">#</a> Docker部署</h2><p>由于需要sshd服务，所以我们没有直接使用es7.4.1的docker镜像，而是使用的一个centos的docker镜像</p><p>然后同样执行上面的步骤，然后启动docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network create <span class="token parameter variable">-d</span> macvlan  <span class="token parameter variable">--subnet</span><span class="token operator">=</span><span class="token number">172.26</span>.43.0/24 <span class="token parameter variable">--gateway</span><span class="token operator">=</span><span class="token number">172.26</span>.43.129 <span class="token parameter variable">-o</span> <span class="token assign-left variable">parent</span><span class="token operator">=</span>bond0 mynet   

<span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">TZ</span><span class="token operator">=</span><span class="token string">&quot;Asia/Shanghai&quot;</span> <span class="token parameter variable">--name</span> es172_26_43_136 <span class="token parameter variable">-h</span> es172_26_43_136 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--network</span><span class="token operator">=</span>mynet <span class="token parameter variable">--ip</span> <span class="token number">172.26</span>.43.136 <span class="token parameter variable">--cpus</span><span class="token operator">=</span><span class="token number">15</span> <span class="token parameter variable">--memory</span><span class="token operator">=</span>27g --memory-swap<span class="token operator">=</span>27g <span class="token parameter variable">--ulimit</span> <span class="token assign-left variable">memlock</span><span class="token operator">=</span>-1:-1 <span class="token parameter variable">--privileged</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">ES_JAVA_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Xms13g -Xmx13g&quot;</span> <span class="token parameter variable">-v</span> /opt/es/es-172.26.43.136/elasticsearch-7.4.1:/usr/share/elasticsearch <span class="token parameter variable">-v</span> /opt/es/es-172.26.43.136/backups:/opt/csbit/backups csbit-elasticsearch /usr/sbin/init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：这里虽然限制了cpus为15，但是进入到容器内部执行lscpu仍然会显示40个（和宿主机一样的）</p><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,17),v=s("p",null,[s("br"),s("br"),s("br"),s("br"),s("br"),s("br")],-1),k=s("hr",null,null,-1),b=s("hr",null,null,-1),h=s("ul",null,[s("li",null,[s("strong",null,"随机毒鸡汤"),a("：在一起的时候希望你长命，分手之后希望你偿命。 "),s("br"),s("br"),s("img",{src:"https://tuapi.eees.cc/api.php?category=fengjing&type=302&uuid=108de005-7be5-41e6-8d7c-6ea67961918e",alt:"",loading:"lazy"})])],-1);function E(f,g){const o=l("ExternalLinkIcon"),n=l("RouterLink");return i(),c("div",null,[s("p",null,[a("安装KVM，创建centos虚拟机的步骤，参考："),s("a",u,[a("https://note.youdao.com/ynoteshare1/index.html?id=d641f8e6125142a0c2f19a9b416534ac&type=note?auto"),e(o)])]),m,s("ul",null,[s("li",null,[e(n,{to:"/software/jvm/JVM%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html"},{default:t(()=>[a("JVM垃圾收集器")]),_:1})]),s("li",null,[e(n,{to:"/software/middleware/mysql/MySQL%E6%9D%82%E9%A1%B9.html"},{default:t(()=>[a("MySQL杂项")]),_:1})]),s("li",null,[e(n,{to:"/software/spring/Spring%20Cloud%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E6%8A%80%E6%9C%AF%E6%A6%82%E8%A7%88%E3%80%90Finchley%20%E7%89%88%E3%80%91.html"},{default:t(()=>[a("Spring Cloud（一）：服务治理技术概览【Finchley 版】")]),_:1})]),s("li",null,[e(n,{to:"/software/shodowsocks/ShadowsockServer.html"},{default:t(()=>[a("ShadowsockServer")]),_:1})]),s("li",null,[e(n,{to:"/software/middleware/mysql/MySQL%E9%94%81%E3%80%81%E4%BA%8B%E5%8A%A1%E3%80%81%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html"},{default:t(()=>[a("MySQL锁、事务、隔离级别")]),_:1})]),s("li",null,[e(n,{to:"/software/maccms/MAC%20CMS.html"},{default:t(()=>[a("MAC CMS")]),_:1})]),s("li",null,[e(n,{to:"/software/unclassified/%E5%A4%9A%E5%8F%B0centos%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E6%96%87%E4%BB%B6%E4%BA%92%E7%9B%B8%E5%A4%87%E4%BB%BD.html"},{default:t(()=>[a("多台centos服务器，文件互相备份")]),_:1})]),s("li",null,[e(n,{to:"/software/unclassified/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF.html"},{default:t(()=>[a("前后端常用技术")]),_:1})]),s("li",null,[e(n,{to:"/software/middleware/mq/RocketMQ.html"},{default:t(()=>[a("RocketMQ")]),_:1})]),s("li",null,[e(n,{to:"/other/GitHub%20Workflow%E7%AA%81%E7%84%B6%E6%8A%A5%E9%94%99.html"},{default:t(()=>[a("GitHub Workflow突然报错")]),_:1})]),s("li",null,[e(n,{to:"/other/vuepress-theme-hope%20%E6%B7%BB%E5%8A%A0%E8%B0%B7%E6%AD%8C%E5%B9%BF%E5%91%8A.html"},{default:t(()=>[a("vuepress-theme-hope 添加谷歌广告")]),_:1})]),s("li",null,[e(n,{to:"/other/Docker%E9%9A%90%E5%B0%84%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%A4%96%E7%BD%91%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE.html"},{default:t(()=>[a("Docker隐射的端口外网不能访问")]),_:1})])]),v,k,b,h])}const A=r(d,[["render",E],["__file","制作KVM ES镜像文件.html.vue"]]);export{A as default};
