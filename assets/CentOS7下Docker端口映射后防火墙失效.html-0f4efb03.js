import{_ as t,$ as r,a0 as o,a1 as e,a3 as l,a4 as n,a5 as i,a2 as a,w as d}from"./framework-8c4427da.js";const c={},p=i(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><ol><li>Docker 容器添加端口映射后，会自动添加系统防火墙规则，将端口开放给所有ip访问。</li><li>使用 firewall-cmd 命令无法查看和管理 Docker 添加的防火墙规则。</li><li>使用 iptables 能查看该规则，但对其管理无效（firewalld 底层认识 iptables ，重启 firewalld 服务规则复原）</li></ol><h2 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h2><p>docker 会自动添加一个优先级最高的针对这个映射端口全开放规则。</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h2><ol><li><p>开启防火墙的 masquerade 包转发功能</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>centos 系统安装好后运行于主机模式，并没有开启包转发功能。
即系统只处理目的地为本机的数据包，不会转发发往其他地址的数据包。
在内核中有相应配置选项 net.ipv4.ip_forward 默认设置为 <span class="token number">0</span>。
可以通过命令 <span class="token function">sysctl</span> <span class="token assign-left variable">net.ipv4.ip_forward</span><span class="token operator">=</span><span class="token number">1</span> 手动开启包转发功能。
防火墙的 masquerade 功能进行地址伪装（NAT），
私网访问公网或公网访问私网都需要开启此功能来进行地址转换，否则无法正常互访。
通过命令 firewall-cmd --add-masquerade 开启此功能，
开启之后 net.ipv4.ip_forward 的值自动被设置为1，即 centos 启用包转发。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在 docke r启动时添加参数来禁止 docker 对本机防火墙的操作。</p></li></ol><h2 id="具体步骤" tabindex="-1"><a class="header-anchor" href="#具体步骤" aria-hidden="true">#</a> 具体步骤</h2><ol><li><p>增加内核配置项参数，在 <strong>/etc/sysctl.conf</strong> 新增 <strong>net.ipv4.ip_forward=1</strong> ，执行 <strong>sysctl -p</strong> 使配置生效。</p></li><li><p>执行命令 <strong>firewall-cmd --permanent --zone=public --add-masquerade</strong> ，开启防火墙的masquerade功能。</p></li><li><p>在 <strong>/lib/systemd/system/docker.service</strong> 追加docker服务启动参数–iptables=false</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/dockerd <span class="token parameter variable">-H</span> fd:// <span class="token parameter variable">--containerd</span><span class="token operator">=</span>/run/containerd/containerd.sock <span class="token parameter variable">--iptables</span><span class="token operator">=</span>false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>执行<strong>systemctl daemon-reload</strong>和<strong>systemctl restart docker</strong>重启服务或直接reboot</p></li></ol><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,10),u=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),E=e("hr",null,null,-1),h=e("hr",null,null,-1),m=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),a("：有情人终成眷属，无情人自取其辱。 "),e("br"),e("br"),e("img",{src:"https://images.pexels.com/photos/8777831/pexels-photo-8777831.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"A diverse group of friends, including a person in a wheelchair, enjoying quality time outdoors in Portugal.",loading:"lazy"})])],-1);function f(_,B){const s=d("RouterLink");return r(),o("div",null,[p,e("ul",null,[e("li",null,[l(s,{to:"/software/jvm/JVM%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html"},{default:n(()=>[a("JVM垃圾收集器")]),_:1})]),e("li",null,[l(s,{to:"/other/%E6%89%8B%E6%8A%8A%E6%89%8B%E6%95%99%E4%BD%A0%E5%88%B6%E4%BD%9CCookie%E3%80%81Local%E3%80%81Session%E6%95%B0%E6%8D%AE%E5%AF%BC%E5%87%BA%E6%8F%92%E4%BB%B6.html"},{default:n(()=>[a("手把手教你制作Cookie、Local、Session数据导出插件")]),_:1})]),e("li",null,[l(s,{to:"/software/spring/Spring%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%85%B3%E9%94%AE%E7%82%B9.html"},{default:n(()=>[a("Spring框架源码关键点")]),_:1})]),e("li",null,[l(s,{to:"/software/jvm/JDK%E5%91%BD%E4%BB%A4%E8%A1%8C%E5%B7%A5%E5%85%B7.html"},{default:n(()=>[a("JDK命令行工具")]),_:1})]),e("li",null,[l(s,{to:"/other/Hadoop%20%E4%B8%80.html"},{default:n(()=>[a("Hadoop 一")]),_:1})]),e("li",null,[l(s,{to:"/software/middleware/mysql/InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.html"},{default:n(()=>[a("InnoDB存储引擎")]),_:1})]),e("li",null,[l(s,{to:"/software/unclassified/Javassist%E6%95%B4%E7%90%86.html"},{default:n(()=>[a("Javassist整理")]),_:1})]),e("li",null,[l(s,{to:"/other/Spring%20Boot%E5%8D%87%E7%BA%A7%E5%88%B02%206%20x%E8%B8%A9%E7%9A%84%E5%9D%91.html"},{default:n(()=>[a("Spring Boot升级到2 6 x踩的坑")]),_:1})]),e("li",null,[l(s,{to:"/other/Java%E8%AF%AD%E8%A8%80%E5%AE%8C%E6%88%90notion%E7%AC%94%E8%AE%B0%E5%A4%87%E4%BB%BD.html"},{default:n(()=>[a("Java语言完成notion笔记备份")]),_:1})]),e("li",null,[l(s,{to:"/software/unclassified/Markdown%E8%BD%AF%E4%BB%B6%E6%AF%94%E5%AF%B9.html"},{default:n(()=>[a("Markdown软件比对")]),_:1})]),e("li",null,[l(s,{to:"/software/raft/sofajraft.html"},{default:n(()=>[a("sofajraft")]),_:1})]),e("li",null,[l(s,{to:"/software/unclassified/%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html"},{default:n(()=>[a("表单重复提交解决方案")]),_:1})])]),u,E,h,m])}const v=t(c,[["render",f],["__file","CentOS7下Docker端口映射后防火墙失效.html.vue"]]);export{v as default};
