const e=JSON.parse('{"key":"v-2c981828","path":"/software/java-basic/ReentrantLock%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html","title":"ReentrantLock源码解读","lang":"zh-CN","frontmatter":{"title":"ReentrantLock源码解读","date":"2017-03-06T00:00:00.000Z","description":"如果我们对AQS有过理解过，再来看RentrantLock的代码就相当容易了。 我们都知道ReentrantLock有公平和非公平之分，而AQS是没有这个公平或非公平的概念的。 下面我们通过源码来看看ReentrantLock的源码并分析其公平和非公平的实现。 ReentrantLock的代码很简单，其核心代码就是继承自AQS的三个内部类。 其类继承结构如下： 下面先贴代码然后进行分析总结，代码中添加了注释","head":[["link",{"rel":"canonical","href":"https://justsoso.fun/software/java-basic/ReentrantLock%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"}],["meta",{"property":"og:url","content":"https://justsoso.fun/software/java-basic/ReentrantLock%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"}],["meta",{"property":"og:site_name","content":"技术加油站"}],["meta",{"property":"og:title","content":"ReentrantLock源码解读"}],["meta",{"property":"og:description","content":"如果我们对AQS有过理解过，再来看RentrantLock的代码就相当容易了。 我们都知道ReentrantLock有公平和非公平之分，而AQS是没有这个公平或非公平的概念的。 下面我们通过源码来看看ReentrantLock的源码并分析其公平和非公平的实现。 ReentrantLock的代码很简单，其核心代码就是继承自AQS的三个内部类。 其类继承结构如下： 下面先贴代码然后进行分析总结，代码中添加了注释"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-10-04T07:04:21.000Z"}],["meta",{"property":"article:published_time","content":"2017-03-06T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-10-04T07:04:21.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"ReentrantLock源码解读\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-03-06T00:00:00.000Z\\",\\"dateModified\\":\\"2024-10-04T07:04:21.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Sync内部类","slug":"sync内部类","link":"#sync内部类","children":[]},{"level":2,"title":"NonfairSync","slug":"nonfairsync","link":"#nonfairsync","children":[]},{"level":2,"title":"FairSync","slug":"fairsync","link":"#fairsync","children":[]},{"level":2,"title":"补充代码","slug":"补充代码","link":"#补充代码","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]},{"level":2,"title":"sync和reentrantlock的区别","slug":"sync和reentrantlock的区别","link":"#sync和reentrantlock的区别","children":[]},{"level":2,"title":"系统推荐","slug":"系统推荐","link":"#系统推荐","children":[]}],"git":{"createdTime":1671976155000,"updatedTime":1728025461000,"contributors":[{"name":"rocky-peng","email":"rocky.peng@qq.com","commits":188},{"name":"rocky.peng","email":"rocky.peng@qq.com","commits":22}]},"readingTime":{"minutes":4.09,"words":1226},"filePathRelative":"software/java-basic/ReentrantLock源码解读.md","localizedDate":"2017年3月6日","excerpt":"<p>如果我们对AQS有过理解过，再来看RentrantLock的代码就相当容易了。\\n我们都知道ReentrantLock有公平和非公平之分，而AQS是没有这个公平或非公平的概念的。\\n下面我们通过源码来看看ReentrantLock的源码并分析其公平和非公平的实现。</p>\\n<p>ReentrantLock的代码很简单，其核心代码就是继承自AQS的三个内部类。</p>\\n<p>其类继承结构如下：\\n<img src=\\"https://cdn.justdopay.com/xiaoshujiang/1629079078587.png\\" alt=\\"\\" loading=\\"lazy\\"></p>\\n<p>下面先贴代码然后进行分析总结，代码中添加了注释</p>","copyright":{},"autoDesc":true}');export{e as data};
