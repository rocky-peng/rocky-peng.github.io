import{X as M,k as Re,S as Me,w as ve,v as Ae,B as Ce,F as Oe,A as I,I as G,T as Ie,C as Se,K as Be,as as Pe,at as Ge}from"./mermaid.esm.min-3824ce45.js";import"./app-cbdd079c.js";import"./framework-3705ab38.js";var le=function(){var i=function(P,o,d,a){for(d=d||{},a=P.length;a--;d[P[a]]=o);return d},n=[1,3],h=[1,6],y=[1,4],c=[1,5],s=[2,5],p=[1,12],l=[5,7,13,19,21,23,24,26,28,31,36,39,46],m=[7,13,19,21,23,24,26,28,31,36,39],g=[7,12,13,19,21,23,24,26,28,31,36,39],r=[7,13,46],f=[1,42],k=[1,41],b=[7,13,29,32,34,37,46],u=[1,55],$=[1,56],x=[1,57],ie=[7,13,32,34,41,46],re={trace:function(){},yy:{},symbols_:{error:2,start:3,eol:4,GG:5,document:6,EOF:7,":":8,DIR:9,options:10,body:11,OPT:12,NL:13,line:14,statement:15,commitStatement:16,mergeStatement:17,cherryPickStatement:18,acc_title:19,acc_title_value:20,acc_descr:21,acc_descr_value:22,acc_descr_multiline_value:23,section:24,branchStatement:25,CHECKOUT:26,ref:27,BRANCH:28,ORDER:29,NUM:30,CHERRY_PICK:31,COMMIT_ID:32,STR:33,COMMIT_TAG:34,EMPTYSTR:35,MERGE:36,COMMIT_TYPE:37,commitType:38,COMMIT:39,commit_arg:40,COMMIT_MSG:41,NORMAL:42,REVERSE:43,HIGHLIGHT:44,ID:45,";":46,$accept:0,$end:1},terminals_:{2:"error",5:"GG",7:"EOF",8:":",9:"DIR",12:"OPT",13:"NL",19:"acc_title",20:"acc_title_value",21:"acc_descr",22:"acc_descr_value",23:"acc_descr_multiline_value",24:"section",26:"CHECKOUT",28:"BRANCH",29:"ORDER",30:"NUM",31:"CHERRY_PICK",32:"COMMIT_ID",33:"STR",34:"COMMIT_TAG",35:"EMPTYSTR",36:"MERGE",37:"COMMIT_TYPE",39:"COMMIT",41:"COMMIT_MSG",42:"NORMAL",43:"REVERSE",44:"HIGHLIGHT",45:"ID",46:";"},productions_:[0,[3,2],[3,3],[3,4],[3,5],[6,0],[6,2],[10,2],[10,1],[11,0],[11,2],[14,2],[14,1],[15,1],[15,1],[15,1],[15,2],[15,2],[15,1],[15,1],[15,1],[15,2],[25,2],[25,4],[18,3],[18,5],[18,5],[18,5],[18,5],[17,2],[17,4],[17,4],[17,4],[17,6],[17,6],[17,6],[17,6],[17,6],[17,6],[17,8],[17,8],[17,8],[17,8],[17,8],[17,8],[16,2],[16,3],[16,3],[16,5],[16,5],[16,3],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,3],[16,5],[16,5],[16,5],[16,5],[16,5],[16,5],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,7],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[16,9],[40,0],[40,1],[38,1],[38,1],[38,1],[27,1],[27,1],[4,1],[4,1],[4,1]],performAction:function(P,o,d,a,_,e,C){var t=e.length-1;switch(_){case 2:return e[t];case 3:return e[t-1];case 4:return a.setDirection(e[t-3]),e[t-1];case 6:a.setOptions(e[t-1]),this.$=e[t];break;case 7:e[t-1]+=e[t],this.$=e[t-1];break;case 9:this.$=[];break;case 10:e[t-1].push(e[t]),this.$=e[t-1];break;case 11:this.$=e[t-1];break;case 16:this.$=e[t].trim(),a.setAccTitle(this.$);break;case 17:case 18:this.$=e[t].trim(),a.setAccDescription(this.$);break;case 19:a.addSection(e[t].substr(8)),this.$=e[t].substr(8);break;case 21:a.checkout(e[t]);break;case 22:a.branch(e[t]);break;case 23:a.branch(e[t-2],e[t]);break;case 24:a.cherryPick(e[t],"",void 0);break;case 25:a.cherryPick(e[t-2],"",e[t]);break;case 26:case 28:a.cherryPick(e[t-2],"","");break;case 27:a.cherryPick(e[t],"",e[t-2]);break;case 29:a.merge(e[t],"","","");break;case 30:a.merge(e[t-2],e[t],"","");break;case 31:a.merge(e[t-2],"",e[t],"");break;case 32:a.merge(e[t-2],"","",e[t]);break;case 33:a.merge(e[t-4],e[t],"",e[t-2]);break;case 34:a.merge(e[t-4],"",e[t],e[t-2]);break;case 35:a.merge(e[t-4],"",e[t-2],e[t]);break;case 36:a.merge(e[t-4],e[t-2],e[t],"");break;case 37:a.merge(e[t-4],e[t-2],"",e[t]);break;case 38:a.merge(e[t-4],e[t],e[t-2],"");break;case 39:a.merge(e[t-6],e[t-4],e[t-2],e[t]);break;case 40:a.merge(e[t-6],e[t],e[t-4],e[t-2]);break;case 41:a.merge(e[t-6],e[t-4],e[t],e[t-2]);break;case 42:a.merge(e[t-6],e[t-2],e[t-4],e[t]);break;case 43:a.merge(e[t-6],e[t],e[t-2],e[t-4]);break;case 44:a.merge(e[t-6],e[t-2],e[t],e[t-4]);break;case 45:a.commit(e[t]);break;case 46:a.commit("","",a.commitType.NORMAL,e[t]);break;case 47:a.commit("","",e[t],"");break;case 48:a.commit("","",e[t],e[t-2]);break;case 49:a.commit("","",e[t-2],e[t]);break;case 50:a.commit("",e[t],a.commitType.NORMAL,"");break;case 51:a.commit("",e[t-2],a.commitType.NORMAL,e[t]);break;case 52:a.commit("",e[t],a.commitType.NORMAL,e[t-2]);break;case 53:a.commit("",e[t-2],e[t],"");break;case 54:a.commit("",e[t],e[t-2],"");break;case 55:a.commit("",e[t-4],e[t-2],e[t]);break;case 56:a.commit("",e[t-4],e[t],e[t-2]);break;case 57:a.commit("",e[t-2],e[t-4],e[t]);break;case 58:a.commit("",e[t],e[t-4],e[t-2]);break;case 59:a.commit("",e[t],e[t-2],e[t-4]);break;case 60:a.commit("",e[t-2],e[t],e[t-4]);break;case 61:a.commit(e[t],"",a.commitType.NORMAL,"");break;case 62:a.commit(e[t],"",a.commitType.NORMAL,e[t-2]);break;case 63:a.commit(e[t-2],"",a.commitType.NORMAL,e[t]);break;case 64:a.commit(e[t-2],"",e[t],"");break;case 65:a.commit(e[t],"",e[t-2],"");break;case 66:a.commit(e[t],e[t-2],a.commitType.NORMAL,"");break;case 67:a.commit(e[t-2],e[t],a.commitType.NORMAL,"");break;case 68:a.commit(e[t-4],"",e[t-2],e[t]);break;case 69:a.commit(e[t-4],"",e[t],e[t-2]);break;case 70:a.commit(e[t-2],"",e[t-4],e[t]);break;case 71:a.commit(e[t],"",e[t-4],e[t-2]);break;case 72:a.commit(e[t],"",e[t-2],e[t-4]);break;case 73:a.commit(e[t-2],"",e[t],e[t-4]);break;case 74:a.commit(e[t-4],e[t],e[t-2],"");break;case 75:a.commit(e[t-4],e[t-2],e[t],"");break;case 76:a.commit(e[t-2],e[t],e[t-4],"");break;case 77:a.commit(e[t],e[t-2],e[t-4],"");break;case 78:a.commit(e[t],e[t-4],e[t-2],"");break;case 79:a.commit(e[t-2],e[t-4],e[t],"");break;case 80:a.commit(e[t-4],e[t],a.commitType.NORMAL,e[t-2]);break;case 81:a.commit(e[t-4],e[t-2],a.commitType.NORMAL,e[t]);break;case 82:a.commit(e[t-2],e[t],a.commitType.NORMAL,e[t-4]);break;case 83:a.commit(e[t],e[t-2],a.commitType.NORMAL,e[t-4]);break;case 84:a.commit(e[t],e[t-4],a.commitType.NORMAL,e[t-2]);break;case 85:a.commit(e[t-2],e[t-4],a.commitType.NORMAL,e[t]);break;case 86:a.commit(e[t-6],e[t-4],e[t-2],e[t]);break;case 87:a.commit(e[t-6],e[t-4],e[t],e[t-2]);break;case 88:a.commit(e[t-6],e[t-2],e[t-4],e[t]);break;case 89:a.commit(e[t-6],e[t],e[t-4],e[t-2]);break;case 90:a.commit(e[t-6],e[t-2],e[t],e[t-4]);break;case 91:a.commit(e[t-6],e[t],e[t-2],e[t-4]);break;case 92:a.commit(e[t-4],e[t-6],e[t-2],e[t]);break;case 93:a.commit(e[t-4],e[t-6],e[t],e[t-2]);break;case 94:a.commit(e[t-2],e[t-6],e[t-4],e[t]);break;case 95:a.commit(e[t],e[t-6],e[t-4],e[t-2]);break;case 96:a.commit(e[t-2],e[t-6],e[t],e[t-4]);break;case 97:a.commit(e[t],e[t-6],e[t-2],e[t-4]);break;case 98:a.commit(e[t],e[t-4],e[t-2],e[t-6]);break;case 99:a.commit(e[t-2],e[t-4],e[t],e[t-6]);break;case 100:a.commit(e[t],e[t-2],e[t-4],e[t-6]);break;case 101:a.commit(e[t-2],e[t],e[t-4],e[t-6]);break;case 102:a.commit(e[t-4],e[t-2],e[t],e[t-6]);break;case 103:a.commit(e[t-4],e[t],e[t-2],e[t-6]);break;case 104:a.commit(e[t-2],e[t-4],e[t-6],e[t]);break;case 105:a.commit(e[t],e[t-4],e[t-6],e[t-2]);break;case 106:a.commit(e[t-2],e[t],e[t-6],e[t-4]);break;case 107:a.commit(e[t],e[t-2],e[t-6],e[t-4]);break;case 108:a.commit(e[t-4],e[t-2],e[t-6],e[t]);break;case 109:a.commit(e[t-4],e[t],e[t-6],e[t-2]);break;case 110:this.$="";break;case 111:this.$=e[t];break;case 112:this.$=a.commitType.NORMAL;break;case 113:this.$=a.commitType.REVERSE;break;case 114:this.$=a.commitType.HIGHLIGHT;break}},table:[{3:1,4:2,5:n,7:h,13:y,46:c},{1:[3]},{3:7,4:2,5:n,7:h,13:y,46:c},{6:8,7:s,8:[1,9],9:[1,10],10:11,13:p},i(l,[2,117]),i(l,[2,118]),i(l,[2,119]),{1:[2,1]},{7:[1,13]},{6:14,7:s,10:11,13:p},{8:[1,15]},i(m,[2,9],{11:16,12:[1,17]}),i(g,[2,8]),{1:[2,2]},{7:[1,18]},{6:19,7:s,10:11,13:p},{7:[2,6],13:[1,22],14:20,15:21,16:23,17:24,18:25,19:[1,26],21:[1,27],23:[1,28],24:[1,29],25:30,26:[1,31],28:[1,35],31:[1,34],36:[1,33],39:[1,32]},i(g,[2,7]),{1:[2,3]},{7:[1,36]},i(m,[2,10]),{4:37,7:h,13:y,46:c},i(m,[2,12]),i(r,[2,13]),i(r,[2,14]),i(r,[2,15]),{20:[1,38]},{22:[1,39]},i(r,[2,18]),i(r,[2,19]),i(r,[2,20]),{27:40,33:f,45:k},i(r,[2,110],{40:43,32:[1,46],33:[1,48],34:[1,44],37:[1,45],41:[1,47]}),{27:49,33:f,45:k},{32:[1,50],34:[1,51]},{27:52,33:f,45:k},{1:[2,4]},i(m,[2,11]),i(r,[2,16]),i(r,[2,17]),i(r,[2,21]),i(b,[2,115]),i(b,[2,116]),i(r,[2,45]),{33:[1,53]},{38:54,42:u,43:$,44:x},{33:[1,58]},{33:[1,59]},i(r,[2,111]),i(r,[2,29],{32:[1,60],34:[1,62],37:[1,61]}),{33:[1,63]},{33:[1,64],35:[1,65]},i(r,[2,22],{29:[1,66]}),i(r,[2,46],{32:[1,68],37:[1,67],41:[1,69]}),i(r,[2,47],{32:[1,71],34:[1,70],41:[1,72]}),i(ie,[2,112]),i(ie,[2,113]),i(ie,[2,114]),i(r,[2,50],{34:[1,73],37:[1,74],41:[1,75]}),i(r,[2,61],{32:[1,78],34:[1,76],37:[1,77]}),{33:[1,79]},{38:80,42:u,43:$,44:x},{33:[1,81]},i(r,[2,24],{34:[1,82]}),{32:[1,83]},{32:[1,84]},{30:[1,85]},{38:86,42:u,43:$,44:x},{33:[1,87]},{33:[1,88]},{33:[1,89]},{33:[1,90]},{33:[1,91]},{33:[1,92]},{38:93,42:u,43:$,44:x},{33:[1,94]},{33:[1,95]},{38:96,42:u,43:$,44:x},{33:[1,97]},i(r,[2,30],{34:[1,99],37:[1,98]}),i(r,[2,31],{32:[1,101],34:[1,100]}),i(r,[2,32],{32:[1,102],37:[1,103]}),{33:[1,104],35:[1,105]},{33:[1,106]},{33:[1,107]},i(r,[2,23]),i(r,[2,48],{32:[1,108],41:[1,109]}),i(r,[2,52],{37:[1,110],41:[1,111]}),i(r,[2,62],{32:[1,113],37:[1,112]}),i(r,[2,49],{32:[1,114],41:[1,115]}),i(r,[2,54],{34:[1,116],41:[1,117]}),i(r,[2,65],{32:[1,119],34:[1,118]}),i(r,[2,51],{37:[1,120],41:[1,121]}),i(r,[2,53],{34:[1,122],41:[1,123]}),i(r,[2,66],{34:[1,125],37:[1,124]}),i(r,[2,63],{32:[1,127],37:[1,126]}),i(r,[2,64],{32:[1,129],34:[1,128]}),i(r,[2,67],{34:[1,131],37:[1,130]}),{38:132,42:u,43:$,44:x},{33:[1,133]},{33:[1,134]},{33:[1,135]},{33:[1,136]},{38:137,42:u,43:$,44:x},i(r,[2,25]),i(r,[2,26]),i(r,[2,27]),i(r,[2,28]),{33:[1,138]},{33:[1,139]},{38:140,42:u,43:$,44:x},{33:[1,141]},{38:142,42:u,43:$,44:x},{33:[1,143]},{33:[1,144]},{33:[1,145]},{33:[1,146]},{33:[1,147]},{33:[1,148]},{33:[1,149]},{38:150,42:u,43:$,44:x},{33:[1,151]},{33:[1,152]},{33:[1,153]},{38:154,42:u,43:$,44:x},{33:[1,155]},{38:156,42:u,43:$,44:x},{33:[1,157]},{33:[1,158]},{33:[1,159]},{38:160,42:u,43:$,44:x},{33:[1,161]},i(r,[2,36],{34:[1,162]}),i(r,[2,37],{37:[1,163]}),i(r,[2,35],{32:[1,164]}),i(r,[2,38],{34:[1,165]}),i(r,[2,33],{37:[1,166]}),i(r,[2,34],{32:[1,167]}),i(r,[2,59],{41:[1,168]}),i(r,[2,72],{32:[1,169]}),i(r,[2,60],{41:[1,170]}),i(r,[2,83],{37:[1,171]}),i(r,[2,73],{32:[1,172]}),i(r,[2,82],{37:[1,173]}),i(r,[2,58],{41:[1,174]}),i(r,[2,71],{32:[1,175]}),i(r,[2,57],{41:[1,176]}),i(r,[2,77],{34:[1,177]}),i(r,[2,70],{32:[1,178]}),i(r,[2,76],{34:[1,179]}),i(r,[2,56],{41:[1,180]}),i(r,[2,84],{37:[1,181]}),i(r,[2,55],{41:[1,182]}),i(r,[2,78],{34:[1,183]}),i(r,[2,79],{34:[1,184]}),i(r,[2,85],{37:[1,185]}),i(r,[2,69],{32:[1,186]}),i(r,[2,80],{37:[1,187]}),i(r,[2,68],{32:[1,188]}),i(r,[2,74],{34:[1,189]}),i(r,[2,75],{34:[1,190]}),i(r,[2,81],{37:[1,191]}),{33:[1,192]},{38:193,42:u,43:$,44:x},{33:[1,194]},{33:[1,195]},{38:196,42:u,43:$,44:x},{33:[1,197]},{33:[1,198]},{33:[1,199]},{33:[1,200]},{38:201,42:u,43:$,44:x},{33:[1,202]},{38:203,42:u,43:$,44:x},{33:[1,204]},{33:[1,205]},{33:[1,206]},{33:[1,207]},{33:[1,208]},{33:[1,209]},{33:[1,210]},{38:211,42:u,43:$,44:x},{33:[1,212]},{33:[1,213]},{33:[1,214]},{38:215,42:u,43:$,44:x},{33:[1,216]},{38:217,42:u,43:$,44:x},{33:[1,218]},{33:[1,219]},{33:[1,220]},{38:221,42:u,43:$,44:x},i(r,[2,39]),i(r,[2,41]),i(r,[2,40]),i(r,[2,42]),i(r,[2,44]),i(r,[2,43]),i(r,[2,100]),i(r,[2,101]),i(r,[2,98]),i(r,[2,99]),i(r,[2,103]),i(r,[2,102]),i(r,[2,107]),i(r,[2,106]),i(r,[2,105]),i(r,[2,104]),i(r,[2,109]),i(r,[2,108]),i(r,[2,97]),i(r,[2,96]),i(r,[2,95]),i(r,[2,94]),i(r,[2,92]),i(r,[2,93]),i(r,[2,91]),i(r,[2,90]),i(r,[2,89]),i(r,[2,88]),i(r,[2,86]),i(r,[2,87])],defaultActions:{7:[2,1],13:[2,2],18:[2,3],36:[2,4]},parseError:function(P,o){if(o.recoverable)this.trace(P);else{var d=new Error(P);throw d.hash=o,d}},parse:function(P){var o=this,d=[0],a=[],_=[null],e=[],C=this.table,t="",Z=0,me=0,Ee=2,ue=1,we=e.slice.call(arguments,1),T=Object.create(this.lexer),D={yy:{}};for(var ce in this.yy)Object.prototype.hasOwnProperty.call(this.yy,ce)&&(D.yy[ce]=this.yy[ce]);T.setInput(P,D.yy),D.yy.lexer=T,D.yy.parser=this,typeof T.yylloc>"u"&&(T.yylloc={});var ne=T.yylloc;e.push(ne);var Te=T.options&&T.options.ranges;typeof D.yy.parseError=="function"?this.parseError=D.yy.parseError:this.parseError=Object.getPrototypeOf(this).parseError;function Le(){var H;return H=a.pop()||T.lex()||ue,typeof H!="number"&&(H instanceof Array&&(a=H,H=a.pop()),H=o.symbols_[H]||H),H}for(var O,j,B,se,F={},V,N,ye,W;;){if(j=d[d.length-1],this.defaultActions[j]?B=this.defaultActions[j]:((O===null||typeof O>"u")&&(O=Le()),B=C[j]&&C[j][O]),typeof B>"u"||!B.length||!B[0]){var oe="";W=[];for(V in C[j])this.terminals_[V]&&V>Ee&&W.push("'"+this.terminals_[V]+"'");T.showPosition?oe="Parse error on line "+(Z+1)+`:
`+T.showPosition()+`
Expecting `+W.join(", ")+", got '"+(this.terminals_[O]||O)+"'":oe="Parse error on line "+(Z+1)+": Unexpected "+(O==ue?"end of input":"'"+(this.terminals_[O]||O)+"'"),this.parseError(oe,{text:T.match,token:this.terminals_[O]||O,line:T.yylineno,loc:ne,expected:W})}if(B[0]instanceof Array&&B.length>1)throw new Error("Parse Error: multiple actions possible at state: "+j+", token: "+O);switch(B[0]){case 1:d.push(O),_.push(T.yytext),e.push(T.yylloc),d.push(B[1]),O=null,me=T.yyleng,t=T.yytext,Z=T.yylineno,ne=T.yylloc;break;case 2:if(N=this.productions_[B[1]][1],F.$=_[_.length-N],F._$={first_line:e[e.length-(N||1)].first_line,last_line:e[e.length-1].last_line,first_column:e[e.length-(N||1)].first_column,last_column:e[e.length-1].last_column},Te&&(F._$.range=[e[e.length-(N||1)].range[0],e[e.length-1].range[1]]),se=this.performAction.apply(F,[t,me,Z,D.yy,B[1],_,e].concat(we)),typeof se<"u")return se;N&&(d=d.slice(0,-1*N*2),_=_.slice(0,-1*N),e=e.slice(0,-1*N)),d.push(this.productions_[B[1]][0]),_.push(F.$),e.push(F._$),ye=C[d[d.length-2]][d[d.length-1]],d.push(ye);break;case 3:return!0}}return!0}},_e=function(){var P={EOF:1,parseError:function(o,d){if(this.yy.parser)this.yy.parser.parseError(o,d);else throw new Error(o)},setInput:function(o,d){return this.yy=d||this.yy||{},this._input=o,this._more=this._backtrack=this.done=!1,this.yylineno=this.yyleng=0,this.yytext=this.matched=this.match="",this.conditionStack=["INITIAL"],this.yylloc={first_line:1,first_column:0,last_line:1,last_column:0},this.options.ranges&&(this.yylloc.range=[0,0]),this.offset=0,this},input:function(){var o=this._input[0];this.yytext+=o,this.yyleng++,this.offset++,this.match+=o,this.matched+=o;var d=o.match(/(?:\r\n?|\n).*/g);return d?(this.yylineno++,this.yylloc.last_line++):this.yylloc.last_column++,this.options.ranges&&this.yylloc.range[1]++,this._input=this._input.slice(1),o},unput:function(o){var d=o.length,a=o.split(/(?:\r\n?|\n)/g);this._input=o+this._input,this.yytext=this.yytext.substr(0,this.yytext.length-d),this.offset-=d;var _=this.match.split(/(?:\r\n?|\n)/g);this.match=this.match.substr(0,this.match.length-1),this.matched=this.matched.substr(0,this.matched.length-1),a.length-1&&(this.yylineno-=a.length-1);var e=this.yylloc.range;return this.yylloc={first_line:this.yylloc.first_line,last_line:this.yylineno+1,first_column:this.yylloc.first_column,last_column:a?(a.length===_.length?this.yylloc.first_column:0)+_[_.length-a.length].length-a[0].length:this.yylloc.first_column-d},this.options.ranges&&(this.yylloc.range=[e[0],e[0]+this.yyleng-d]),this.yyleng=this.yytext.length,this},more:function(){return this._more=!0,this},reject:function(){if(this.options.backtrack_lexer)this._backtrack=!0;else return this.parseError("Lexical error on line "+(this.yylineno+1)+`. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).
`+this.showPosition(),{text:"",token:null,line:this.yylineno});return this},less:function(o){this.unput(this.match.slice(o))},pastInput:function(){var o=this.matched.substr(0,this.matched.length-this.match.length);return(o.length>20?"...":"")+o.substr(-20).replace(/\n/g,"")},upcomingInput:function(){var o=this.match;return o.length<20&&(o+=this._input.substr(0,20-o.length)),(o.substr(0,20)+(o.length>20?"...":"")).replace(/\n/g,"")},showPosition:function(){var o=this.pastInput(),d=new Array(o.length+1).join("-");return o+this.upcomingInput()+`
`+d+"^"},test_match:function(o,d){var a,_,e;if(this.options.backtrack_lexer&&(e={yylineno:this.yylineno,yylloc:{first_line:this.yylloc.first_line,last_line:this.last_line,first_column:this.yylloc.first_column,last_column:this.yylloc.last_column},yytext:this.yytext,match:this.match,matches:this.matches,matched:this.matched,yyleng:this.yyleng,offset:this.offset,_more:this._more,_input:this._input,yy:this.yy,conditionStack:this.conditionStack.slice(0),done:this.done},this.options.ranges&&(e.yylloc.range=this.yylloc.range.slice(0))),_=o[0].match(/(?:\r\n?|\n).*/g),_&&(this.yylineno+=_.length),this.yylloc={first_line:this.yylloc.last_line,last_line:this.yylineno+1,first_column:this.yylloc.last_column,last_column:_?_[_.length-1].length-_[_.length-1].match(/\r?\n?/)[0].length:this.yylloc.last_column+o[0].length},this.yytext+=o[0],this.match+=o[0],this.matches=o,this.yyleng=this.yytext.length,this.options.ranges&&(this.yylloc.range=[this.offset,this.offset+=this.yyleng]),this._more=!1,this._backtrack=!1,this._input=this._input.slice(o[0].length),this.matched+=o[0],a=this.performAction.call(this,this.yy,this,d,this.conditionStack[this.conditionStack.length-1]),this.done&&this._input&&(this.done=!1),a)return a;if(this._backtrack){for(var C in e)this[C]=e[C];return!1}return!1},next:function(){if(this.done)return this.EOF;this._input||(this.done=!0);var o,d,a,_;this._more||(this.yytext="",this.match="");for(var e=this._currentRules(),C=0;C<e.length;C++)if(a=this._input.match(this.rules[e[C]]),a&&(!d||a[0].length>d[0].length)){if(d=a,_=C,this.options.backtrack_lexer){if(o=this.test_match(a,e[C]),o!==!1)return o;if(this._backtrack){d=!1;continue}else return!1}else if(!this.options.flex)break}return d?(o=this.test_match(d,e[_]),o!==!1?o:!1):this._input===""?this.EOF:this.parseError("Lexical error on line "+(this.yylineno+1)+`. Unrecognized text.
`+this.showPosition(),{text:"",token:null,line:this.yylineno})},lex:function(){var o=this.next();return o||this.lex()},begin:function(o){this.conditionStack.push(o)},popState:function(){var o=this.conditionStack.length-1;return o>0?this.conditionStack.pop():this.conditionStack[0]},_currentRules:function(){return this.conditionStack.length&&this.conditionStack[this.conditionStack.length-1]?this.conditions[this.conditionStack[this.conditionStack.length-1]].rules:this.conditions.INITIAL.rules},topState:function(o){return o=this.conditionStack.length-1-Math.abs(o||0),o>=0?this.conditionStack[o]:"INITIAL"},pushState:function(o){this.begin(o)},stateStackSize:function(){return this.conditionStack.length},options:{"case-insensitive":!0},performAction:function(o,d,a,_){switch(a){case 0:return this.begin("acc_title"),19;case 1:return this.popState(),"acc_title_value";case 2:return this.begin("acc_descr"),21;case 3:return this.popState(),"acc_descr_value";case 4:this.begin("acc_descr_multiline");break;case 5:this.popState();break;case 6:return"acc_descr_multiline_value";case 7:return 13;case 8:break;case 9:break;case 10:return 5;case 11:return 39;case 12:return 32;case 13:return 37;case 14:return 41;case 15:return 42;case 16:return 43;case 17:return 44;case 18:return 34;case 19:return 28;case 20:return 29;case 21:return 36;case 22:return 31;case 23:return 26;case 24:return 9;case 25:return 9;case 26:return 8;case 27:return"CARET";case 28:this.begin("options");break;case 29:this.popState();break;case 30:return 12;case 31:return 35;case 32:this.begin("string");break;case 33:this.popState();break;case 34:return 33;case 35:return 30;case 36:return 45;case 37:return 7}},rules:[/^(?:accTitle\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*:\s*)/i,/^(?:(?!\n||)*[^\n]*)/i,/^(?:accDescr\s*\{\s*)/i,/^(?:[\}])/i,/^(?:[^\}]*)/i,/^(?:(\r?\n)+)/i,/^(?:#[^\n]*)/i,/^(?:%[^\n]*)/i,/^(?:gitGraph\b)/i,/^(?:commit(?=\s|$))/i,/^(?:id:)/i,/^(?:type:)/i,/^(?:msg:)/i,/^(?:NORMAL\b)/i,/^(?:REVERSE\b)/i,/^(?:HIGHLIGHT\b)/i,/^(?:tag:)/i,/^(?:branch(?=\s|$))/i,/^(?:order:)/i,/^(?:merge(?=\s|$))/i,/^(?:cherry-pick(?=\s|$))/i,/^(?:checkout(?=\s|$))/i,/^(?:LR\b)/i,/^(?:TB\b)/i,/^(?::)/i,/^(?:\^)/i,/^(?:options\r?\n)/i,/^(?:[ \r\n\t]+end\b)/i,/^(?:[\s\S]+(?=[ \r\n\t]+end))/i,/^(?:["]["])/i,/^(?:["])/i,/^(?:["])/i,/^(?:[^"]*)/i,/^(?:[0-9]+(?=\s|$))/i,/^(?:\w([-\./\w]*[-\w])?)/i,/^(?:$)/i,/^(?:\s+)/i],conditions:{acc_descr_multiline:{rules:[5,6],inclusive:!1},acc_descr:{rules:[3],inclusive:!1},acc_title:{rules:[1],inclusive:!1},options:{rules:[29,30],inclusive:!1},string:{rules:[33,34],inclusive:!1},INITIAL:{rules:[0,2,4,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,31,32,35,36,37,38],inclusive:!0}}};return P}();re.lexer=_e;function ae(){this.yy={}}return ae.prototype=re,re.Parser=ae,new ae}();le.parser=le;const Ne=le;let ee=M().gitGraph.mainBranchName,He=M().gitGraph.mainBranchOrder,w={},A=null,K={};K[ee]={name:ee,order:He};let E={};E[ee]=A;let R=ee,be="LR",Y=0;function he(){return Ge({length:7})}function De(i,n){const h=Object.create(null);return i.reduce((y,c)=>{const s=n(c);return h[s]||(h[s]=!0,y.push(c)),y},[])}const je=function(i){be=i};let de={};const qe=function(i){I.debug("options str",i),i=i&&i.trim(),i=i||"{}";try{de=JSON.parse(i)}catch(n){I.error("error while parsing gitGraph options",n.message)}},Ye=function(){return de},Fe=function(i,n,h,y){I.debug("Entering commit:",i,n,h,y),n=G.sanitizeText(n,M()),i=G.sanitizeText(i,M()),y=G.sanitizeText(y,M());const c={id:n||Y+"-"+he(),message:i,seq:Y++,type:h||X.NORMAL,tag:y||"",parents:A==null?[]:[A.id],branch:R};A=c,w[c.id]=c,E[R]=c.id,I.debug("in pushCommit "+c.id)},ze=function(i,n){if(i=G.sanitizeText(i,M()),E[i]===void 0)E[i]=A!=null?A.id:null,K[i]={name:i,order:n?parseInt(n,10):null},fe(i),I.debug("in createBranch");else{let h=new Error('Trying to create an existing branch. (Help: Either use a new name if you want create a new branch or try using "checkout '+i+'")');throw h.hash={text:"branch "+i,token:"branch "+i,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"checkout '+i+'"']},h}},Ue=function(i,n,h,y){i=G.sanitizeText(i,M()),n=G.sanitizeText(n,M());const c=w[E[R]],s=w[E[i]];if(R===i){let l=new Error('Incorrect usage of "merge". Cannot merge a branch to itself');throw l.hash={text:"merge "+i,token:"merge "+i,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},l}else if(c===void 0||!c){let l=new Error('Incorrect usage of "merge". Current branch ('+R+")has no commits");throw l.hash={text:"merge "+i,token:"merge "+i,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["commit"]},l}else if(E[i]===void 0){let l=new Error('Incorrect usage of "merge". Branch to be merged ('+i+") does not exist");throw l.hash={text:"merge "+i,token:"merge "+i,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch "+i]},l}else if(s===void 0||!s){let l=new Error('Incorrect usage of "merge". Branch to be merged ('+i+") has no commits");throw l.hash={text:"merge "+i,token:"merge "+i,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"commit"']},l}else if(c===s){let l=new Error('Incorrect usage of "merge". Both branches have same head');throw l.hash={text:"merge "+i,token:"merge "+i,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["branch abc"]},l}else if(n&&w[n]!==void 0){let l=new Error('Incorrect usage of "merge". Commit with id:'+n+" already exists, use different custom Id");throw l.hash={text:"merge "+i+n+h+y,token:"merge "+i+n+h+y,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["merge "+i+" "+n+"_UNIQUE "+h+" "+y]},l}const p={id:n||Y+"-"+he(),message:"merged branch "+i+" into "+R,seq:Y++,parents:[A==null?null:A.id,E[i]],branch:R,type:X.MERGE,customType:h,customId:!!n,tag:y||""};A=p,w[p.id]=p,E[R]=p.id,I.debug(E),I.debug("in mergeBranch")},Ke=function(i,n,h){if(I.debug("Entering cherryPick:",i,n,h),i=G.sanitizeText(i,M()),n=G.sanitizeText(n,M()),h=G.sanitizeText(h,M()),!i||w[i]===void 0){let s=new Error('Incorrect usage of "cherryPick". Source commit id should exist and provided');throw s.hash={text:"cherryPick "+i+" "+n,token:"cherryPick "+i+" "+n,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},s}let y=w[i],c=y.branch;if(y.type===X.MERGE){let s=new Error('Incorrect usage of "cherryPick". Source commit should not be a merge commit');throw s.hash={text:"cherryPick "+i+" "+n,token:"cherryPick "+i+" "+n,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},s}if(!n||w[n]===void 0){if(c===R){let l=new Error('Incorrect usage of "cherryPick". Source commit is already on current branch');throw l.hash={text:"cherryPick "+i+" "+n,token:"cherryPick "+i+" "+n,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},l}const s=w[E[R]];if(s===void 0||!s){let l=new Error('Incorrect usage of "cherry-pick". Current branch ('+R+")has no commits");throw l.hash={text:"cherryPick "+i+" "+n,token:"cherryPick "+i+" "+n,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:["cherry-pick abc"]},l}const p={id:Y+"-"+he(),message:"cherry-picked "+y+" into "+R,seq:Y++,parents:[A==null?null:A.id,y.id],branch:R,type:X.CHERRY_PICK,tag:h??"cherry-pick:"+y.id};A=p,w[p.id]=p,E[R]=p.id,I.debug(E),I.debug("in cherryPick")}},fe=function(i){if(i=G.sanitizeText(i,M()),E[i]===void 0){let n=new Error('Trying to checkout branch which is not yet created. (Help try using "branch '+i+'")');throw n.hash={text:"checkout "+i,token:"checkout "+i,line:"1",loc:{first_line:1,last_line:1,first_column:1,last_column:1},expected:['"branch '+i+'"']},n}else{R=i;const n=E[R];A=w[n]}};function pe(i,n,h){const y=i.indexOf(n);y===-1?i.push(h):i.splice(y,1,h)}function ke(i){const n=i.reduce((c,s)=>c.seq>s.seq?c:s,i[0]);let h="";i.forEach(function(c){c===n?h+="	*":h+="	|"});const y=[h,n.id,n.seq];for(let c in E)E[c]===n.id&&y.push(c);if(I.debug(y.join(" ")),n.parents&&n.parents.length==2){const c=w[n.parents[0]];pe(i,n,c),i.push(w[n.parents[1]])}else{if(n.parents.length==0)return;{const c=w[n.parents];pe(i,n,c)}}i=De(i,c=>c.id),ke(i)}const Xe=function(){I.debug(w);const i=$e()[0];ke([i])},Je=function(){w={},A=null;let i=M().gitGraph.mainBranchName,n=M().gitGraph.mainBranchOrder;E={},E[i]=null,K={},K[i]={name:i,order:n},R=i,Y=0,Ie()},Qe=function(){return Object.values(K).map((i,n)=>i.order!==null?i:{...i,order:parseFloat(`0.${n}`,10)}).sort((i,n)=>i.order-n.order).map(({name:i})=>({name:i}))},Ze=function(){return E},Ve=function(){return w},$e=function(){const i=Object.keys(w).map(function(n){return w[n]});return i.forEach(function(n){I.debug(n.id)}),i.sort((n,h)=>n.seq-h.seq),i},We=function(){return R},et=function(){return be},tt=function(){return A},X={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},it={getConfig:()=>M().gitGraph,setDirection:je,setOptions:qe,getOptions:Ye,commit:Fe,branch:ze,merge:Ue,cherryPick:Ke,checkout:fe,prettyPrint:Xe,clear:Je,getBranchesAsObjArray:Qe,getBranches:Ze,getCommits:Ve,getCommitsArray:$e,getCurrentBranch:We,getDirection:et,getHead:tt,setAccTitle:Re,getAccTitle:Me,getAccDescription:ve,setAccDescription:Ae,setDiagramTitle:Ce,getDiagramTitle:Oe,commitType:X};let z={};const S={NORMAL:0,REVERSE:1,HIGHLIGHT:2,MERGE:3,CHERRY_PICK:4},q=8;let L={},J={},te=[],Q=0,v="LR";const rt=()=>{L={},J={},z={},Q=0,te=[],v="LR"},xe=i=>{const n=document.createElementNS("http://www.w3.org/2000/svg","text");let h=[];typeof i=="string"?h=i.split(/\\n|\n|<br\s*\/?>/gi):Array.isArray(i)?h=i:h=[];for(const y of h){const c=document.createElementNS("http://www.w3.org/2000/svg","tspan");c.setAttributeNS("http://www.w3.org/XML/1998/namespace","xml:space","preserve"),c.setAttribute("dy","1em"),c.setAttribute("x","0"),c.setAttribute("class","row"),c.textContent=y.trim(),n.appendChild(c)}return n},ge=(i,n,h)=>{const y=M().gitGraph,c=i.append("g").attr("class","commit-bullets"),s=i.append("g").attr("class","commit-labels");let p=0;v==="TB"&&(p=30),Object.keys(n).sort((l,m)=>n[l].seq-n[m].seq).forEach(l=>{const m=n[l],g=v==="TB"?p+10:L[m.branch].pos,r=v==="TB"?L[m.branch].pos:p+10;if(h){let f,k=m.customType!==void 0&&m.customType!==""?m.customType:m.type;switch(k){case S.NORMAL:f="commit-normal";break;case S.REVERSE:f="commit-reverse";break;case S.HIGHLIGHT:f="commit-highlight";break;case S.MERGE:f="commit-merge";break;case S.CHERRY_PICK:f="commit-cherry-pick";break;default:f="commit-normal"}if(k===S.HIGHLIGHT){const b=c.append("rect");b.attr("x",r-10),b.attr("y",g-10),b.attr("height",20),b.attr("width",20),b.attr("class",`commit ${m.id} commit-highlight${L[m.branch].index%q} ${f}-outer`),c.append("rect").attr("x",r-6).attr("y",g-6).attr("height",12).attr("width",12).attr("class",`commit ${m.id} commit${L[m.branch].index%q} ${f}-inner`)}else if(k===S.CHERRY_PICK)c.append("circle").attr("cx",r).attr("cy",g).attr("r",10).attr("class",`commit ${m.id} ${f}`),c.append("circle").attr("cx",r-3).attr("cy",g+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${m.id} ${f}`),c.append("circle").attr("cx",r+3).attr("cy",g+2).attr("r",2.75).attr("fill","#fff").attr("class",`commit ${m.id} ${f}`),c.append("line").attr("x1",r+3).attr("y1",g+1).attr("x2",r).attr("y2",g-5).attr("stroke","#fff").attr("class",`commit ${m.id} ${f}`),c.append("line").attr("x1",r-3).attr("y1",g+1).attr("x2",r).attr("y2",g-5).attr("stroke","#fff").attr("class",`commit ${m.id} ${f}`);else{const b=c.append("circle");if(b.attr("cx",r),b.attr("cy",g),b.attr("r",m.type===S.MERGE?9:10),b.attr("class",`commit ${m.id} commit${L[m.branch].index%q}`),k===S.MERGE){const u=c.append("circle");u.attr("cx",r),u.attr("cy",g),u.attr("r",6),u.attr("class",`commit ${f} ${m.id} commit${L[m.branch].index%q}`)}k===S.REVERSE&&c.append("path").attr("d",`M ${r-5},${g-5}L${r+5},${g+5}M${r-5},${g+5}L${r+5},${g-5}`).attr("class",`commit ${f} ${m.id} commit${L[m.branch].index%q}`)}}if(v==="TB"?J[m.id]={x:r,y:p+10}:J[m.id]={x:p+10,y:g},h){if(m.type!==S.CHERRY_PICK&&(m.customId&&m.type===S.MERGE||m.type!==S.MERGE)&&y.showCommitLabel){const f=s.append("g"),k=f.insert("rect").attr("class","commit-label-bkg"),b=f.append("text").attr("x",p).attr("y",g+25).attr("class","commit-label").text(m.id);let u=b.node().getBBox();if(k.attr("x",p+10-u.width/2-2).attr("y",g+13.5).attr("width",u.width+2*2).attr("height",u.height+2*2),v==="TB"&&(k.attr("x",r-(u.width+4*4+5)).attr("y",g-12),b.attr("x",r-(u.width+4*4)).attr("y",g+u.height-12)),v!=="TB"&&b.attr("x",p+10-u.width/2),y.rotateCommitLabel)if(v==="TB")b.attr("transform","rotate(-45, "+r+", "+g+")"),k.attr("transform","rotate(-45, "+r+", "+g+")");else{let $=-7.5-(u.width+10)/25*9.5,x=10+u.width/25*8.5;f.attr("transform","translate("+$+", "+x+") rotate(-45, "+p+", "+g+")")}}if(m.tag){const f=s.insert("polygon"),k=s.append("circle"),b=s.append("text").attr("y",g-16).attr("class","tag-label").text(m.tag);let u=b.node().getBBox();b.attr("x",p+10-u.width/2);const $=u.height/2,x=g-19.2;f.attr("class","tag-label-bkg").attr("points",`
          ${p-u.width/2-4/2},${x+2}
          ${p-u.width/2-4/2},${x-2}
          ${p+10-u.width/2-4},${x-$-2}
          ${p+10+u.width/2+4},${x-$-2}
          ${p+10+u.width/2+4},${x+$+2}
          ${p+10-u.width/2-4},${x+$+2}`),k.attr("cx",p-u.width/2+4/2).attr("cy",x).attr("r",1.5).attr("class","tag-hole"),v==="TB"&&(f.attr("class","tag-label-bkg").attr("points",`
            ${r},${p+2}
            ${r},${p-2}
            ${r+10},${p-$-2}
            ${r+10+u.width+4},${p-$-2}
            ${r+10+u.width+4},${p+$+2}
            ${r+10},${p+$+2}`).attr("transform","translate(12,12) rotate(45, "+r+","+p+")"),k.attr("cx",r+4/2).attr("cy",p).attr("transform","translate(12,12) rotate(45, "+r+","+p+")"),b.attr("x",r+5).attr("y",p+3).attr("transform","translate(14,14) rotate(45, "+r+","+p+")"))}}p+=50,p>Q&&(Q=p)})},at=(i,n,h)=>Object.keys(h).filter(y=>h[y].branch===n.branch&&h[y].seq>i.seq&&h[y].seq<n.seq).length>0,U=(i,n,h=0)=>{const y=i+Math.abs(i-n)/2;if(h>5)return y;if(te.every(s=>Math.abs(s-y)>=10))return te.push(y),y;const c=Math.abs(i-n);return U(i,n-c/5,h+1)},ct=(i,n,h,y)=>{const c=J[n.id],s=J[h.id],p=at(n,h,y);let l="",m="",g=0,r=0,f=L[h.branch].index,k;if(p){l="A 10 10, 0, 0, 0,",m="A 10 10, 0, 0, 1,",g=10,r=10,f=L[h.branch].index;const b=c.y<s.y?U(c.y,s.y):U(s.y,c.y),u=c.x<s.x?U(c.x,s.x):U(s.x,c.x);v==="TB"?c.x<s.x?k=`M ${c.x} ${c.y} L ${u-g} ${c.y} ${m} ${u} ${c.y+r} L ${u} ${s.y-g} ${l} ${u+r} ${s.y} L ${s.x} ${s.y}`:k=`M ${c.x} ${c.y} L ${u+g} ${c.y} ${l} ${u} ${c.y+r} L ${u} ${s.y-g} ${m} ${u-r} ${s.y} L ${s.x} ${s.y}`:c.y<s.y?k=`M ${c.x} ${c.y} L ${c.x} ${b-g} ${l} ${c.x+r} ${b} L ${s.x-g} ${b} ${m} ${s.x} ${b+r} L ${s.x} ${s.y}`:k=`M ${c.x} ${c.y} L ${c.x} ${b+g} ${m} ${c.x+r} ${b} L ${s.x-g} ${b} ${l} ${s.x} ${b-r} L ${s.x} ${s.y}`}else v==="TB"?(c.x<s.x&&(l="A 20 20, 0, 0, 0,",m="A 20 20, 0, 0, 1,",g=20,r=20,f=L[h.branch].index,k=`M ${c.x} ${c.y} L ${s.x-g} ${c.y} ${m} ${s.x} ${c.y+r} L ${s.x} ${s.y}`),c.x>s.x&&(l="A 20 20, 0, 0, 0,",m="A 20 20, 0, 0, 1,",g=20,r=20,f=L[n.branch].index,k=`M ${c.x} ${c.y} L ${c.x} ${s.y-g} ${m} ${c.x-r} ${s.y} L ${s.x} ${s.y}`),c.x===s.x&&(f=L[n.branch].index,k=`M ${c.x} ${c.y} L ${c.x+g} ${c.y} ${l} ${c.x+r} ${s.y+g} L ${s.x} ${s.y}`)):(c.y<s.y&&(l="A 20 20, 0, 0, 0,",g=20,r=20,f=L[h.branch].index,k=`M ${c.x} ${c.y} L ${c.x} ${s.y-g} ${l} ${c.x+r} ${s.y} L ${s.x} ${s.y}`),c.y>s.y&&(l="A 20 20, 0, 0, 0,",g=20,r=20,f=L[n.branch].index,k=`M ${c.x} ${c.y} L ${s.x-g} ${c.y} ${l} ${s.x} ${c.y-r} L ${s.x} ${s.y}`),c.y===s.y&&(f=L[n.branch].index,k=`M ${c.x} ${c.y} L ${c.x} ${s.y-g} ${l} ${c.x+r} ${s.y} L ${s.x} ${s.y}`));i.append("path").attr("d",k).attr("class","arrow arrow"+f%q)},nt=(i,n)=>{const h=i.append("g").attr("class","commit-arrows");Object.keys(n).forEach(y=>{const c=n[y];c.parents&&c.parents.length>0&&c.parents.forEach(s=>{ct(h,n[s],c,n)})})},st=(i,n)=>{const h=M().gitGraph,y=i.append("g");n.forEach((c,s)=>{const p=s%q,l=L[c.name].pos,m=y.append("line");m.attr("x1",0),m.attr("y1",l),m.attr("x2",Q),m.attr("y2",l),m.attr("class","branch branch"+p),v==="TB"&&(m.attr("y1",30),m.attr("x1",l),m.attr("y2",Q),m.attr("x2",l)),te.push(l);let g=c.name;const r=xe(g),f=y.insert("rect"),k=y.insert("g").attr("class","branchLabel").insert("g").attr("class","label branch-label"+p);k.node().appendChild(r);let b=r.getBBox();f.attr("class","branchLabelBkg label"+p).attr("rx",4).attr("ry",4).attr("x",-b.width-4-(h.rotateCommitLabel===!0?30:0)).attr("y",-b.height/2+8).attr("width",b.width+18).attr("height",b.height+4),k.attr("transform","translate("+(-b.width-14-(h.rotateCommitLabel===!0?30:0))+", "+(l-b.height/2-1)+")"),v==="TB"&&(f.attr("x",l-b.width/2-10).attr("y",0),k.attr("transform","translate("+(l-b.width/2-5)+", 0)")),v!=="TB"&&f.attr("transform","translate(-19, "+(l-b.height/2)+")")})},ot=function(i,n,h,y){rt();const c=M(),s=c.gitGraph;I.debug("in gitgraph renderer",i+`
`,"id:",n,h),z=y.db.getCommits();const p=y.db.getBranchesAsObjArray();v=y.db.getDirection();const l=Se(`[id="${n}"]`);let m=0;p.forEach((g,r)=>{const f=xe(g.name),k=l.append("g"),b=k.insert("g").attr("class","branchLabel"),u=b.insert("g").attr("class","label branch-label");u.node().appendChild(f);let $=f.getBBox();L[g.name]={pos:m,index:r},m+=50+(s.rotateCommitLabel?40:0)+(v==="TB"?$.width/2:0),u.remove(),b.remove(),k.remove()}),ge(l,z,!1),s.showBranches&&st(l,p),nt(l,z),ge(l,z,!0),Be.insertTitle(l,"gitTitleText",s.titleTopMargin,y.db.getDiagramTitle()),Pe(void 0,l,s.diagramPadding,s.useMaxWidth??c.useMaxWidth)},lt={draw:ot},ht=i=>`
  .commit-id,
  .commit-msg,
  .branch-label {
    fill: lightgrey;
    color: lightgrey;
    font-family: 'trebuchet ms', verdana, arial, sans-serif;
    font-family: var(--mermaid-font-family);
  }
  ${[0,1,2,3,4,5,6,7].map(n=>`
        .branch-label${n} { fill: ${i["gitBranchLabel"+n]}; }
        .commit${n} { stroke: ${i["git"+n]}; fill: ${i["git"+n]}; }
        .commit-highlight${n} { stroke: ${i["gitInv"+n]}; fill: ${i["gitInv"+n]}; }
        .label${n}  { fill: ${i["git"+n]}; }
        .arrow${n} { stroke: ${i["git"+n]}; }
        `).join(`
`)}

  .branch {
    stroke-width: 1;
    stroke: ${i.lineColor};
    stroke-dasharray: 2;
  }
  .commit-label { font-size: ${i.commitLabelFontSize}; fill: ${i.commitLabelColor};}
  .commit-label-bkg { font-size: ${i.commitLabelFontSize}; fill: ${i.commitLabelBackground}; opacity: 0.5; }
  .tag-label { font-size: ${i.tagLabelFontSize}; fill: ${i.tagLabelColor};}
  .tag-label-bkg { fill: ${i.tagLabelBackground}; stroke: ${i.tagLabelBorder}; }
  .tag-hole { fill: ${i.textColor}; }

  .commit-merge {
    stroke: ${i.primaryColor};
    fill: ${i.primaryColor};
  }
  .commit-reverse {
    stroke: ${i.primaryColor};
    fill: ${i.primaryColor};
    stroke-width: 3;
  }
  .commit-highlight-outer {
  }
  .commit-highlight-inner {
    stroke: ${i.primaryColor};
    fill: ${i.primaryColor};
  }

  .arrow { stroke-width: 8; stroke-linecap: round; fill: none}
  .gitTitleText {
    text-anchor: middle;
    font-size: 18px;
    fill: ${i.textColor};
  }
`,mt=ht,gt={parser:Ne,db:it,renderer:lt,styles:mt};export{gt as diagram};
