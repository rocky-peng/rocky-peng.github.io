import{_ as t,$ as r,a0 as o,a1 as e,a3 as s,a4 as n,a5 as i,a2 as a,w as d}from"./framework-8c4427da.js";const c={},u=i(`<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景" aria-hidden="true">#</a> 背景</h2><ol><li>Docker 容器添加端口映射后，会自动添加系统防火墙规则，将端口开放给所有ip访问。</li><li>使用 firewall-cmd 命令无法查看和管理 Docker 添加的防火墙规则。</li><li>使用 iptables 能查看该规则，但对其管理无效（firewalld 底层认识 iptables ，重启 firewalld 服务规则复原）</li></ol><h2 id="原因" tabindex="-1"><a class="header-anchor" href="#原因" aria-hidden="true">#</a> 原因</h2><p>docker 会自动添加一个优先级最高的针对这个映射端口全开放规则。</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案" aria-hidden="true">#</a> 解决方案</h2><ol><li><p>开启防火墙的 masquerade 包转发功能</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>centos 系统安装好后运行于主机模式，并没有开启包转发功能。
即系统只处理目的地为本机的数据包，不会转发发往其他地址的数据包。
在内核中有相应配置选项 net.ipv4.ip_forward 默认设置为 <span class="token number">0</span>。
可以通过命令 <span class="token function">sysctl</span> <span class="token assign-left variable">net.ipv4.ip_forward</span><span class="token operator">=</span><span class="token number">1</span> 手动开启包转发功能。
防火墙的 masquerade 功能进行地址伪装（NAT），
私网访问公网或公网访问私网都需要开启此功能来进行地址转换，否则无法正常互访。
通过命令 firewall-cmd --add-masquerade 开启此功能，
开启之后 net.ipv4.ip_forward 的值自动被设置为1，即 centos 启用包转发。
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>在 docke r启动时添加参数来禁止 docker 对本机防火墙的操作。</p></li></ol><h2 id="具体步骤" tabindex="-1"><a class="header-anchor" href="#具体步骤" aria-hidden="true">#</a> 具体步骤</h2><ol><li><p>增加内核配置项参数，在 <strong>/etc/sysctl.conf</strong> 新增 <strong>net.ipv4.ip_forward=1</strong> ，执行 <strong>sysctl -p</strong> 使配置生效。</p></li><li><p>执行命令 <strong>firewall-cmd --permanent --zone=public --add-masquerade</strong> ，开启防火墙的masquerade功能。</p></li><li><p>在 <strong>/lib/systemd/system/docker.service</strong> 追加docker服务启动参数–iptables=false</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/bin/dockerd <span class="token parameter variable">-H</span> fd:// <span class="token parameter variable">--containerd</span><span class="token operator">=</span>/run/containerd/containerd.sock <span class="token parameter variable">--iptables</span><span class="token operator">=</span>false
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>执行<strong>systemctl daemon-reload</strong>和<strong>systemctl restart docker</strong>重启服务或直接reboot</p></li></ol><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,10),p=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),E=e("hr",null,null,-1),h=e("hr",null,null,-1),m=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),a("：什么事情可以让你，放下尊严低声下气？抄作业。 "),e("br"),e("br"),e("img",{src:"https://images.pexels.com/photos/8777831/pexels-photo-8777831.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"A diverse group of friends, including a person in a wheelchair, enjoying quality time outdoors in Portugal.",loading:"lazy"})])],-1);function B(f,_){const l=d("RouterLink");return r(),o("div",null,[u,e("ul",null,[e("li",null,[s(l,{to:"/software/unclassified/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F.html"},{default:n(()=>[a("记一次内存泄漏")]),_:1})]),e("li",null,[s(l,{to:"/software/unclassified/KVM%20%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85.html"},{default:n(()=>[a("KVM 虚拟机安装")]),_:1})]),e("li",null,[s(l,{to:"/other/%E5%BE%AE%E5%8D%9A%E5%85%B3%E6%B3%A8%E5%85%B3%E7%B3%BB%E5%A6%82%E4%BD%95%E5%AE%9E%E7%8E%B0.html"},{default:n(()=>[a("微博关注关系如何实现")]),_:1})]),e("li",null,[s(l,{to:"/other/MySQL%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:n(()=>[a("MySQL高可用")]),_:1})]),e("li",null,[s(l,{to:"/other/%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85Google%20BBR.html"},{default:n(()=>[a("如何安装Google BBR")]),_:1})]),e("li",null,[s(l,{to:"/other/%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E6%8B%BC%E6%8E%A5%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%90%97%EF%BC%9F.html"},{default:n(()=>[a("你真的会拼接字符串吗？")]),_:1})]),e("li",null,[s(l,{to:"/other/%E6%95%B0%E6%8D%AE%E5%90%8C%E6%AD%A5%E6%96%B9%E6%A1%88.html"},{default:n(()=>[a("数据同步方案")]),_:1})]),e("li",null,[s(l,{to:"/software/unclassified/%E5%88%B6%E4%BD%9CKVM%20ES%E9%95%9C%E5%83%8F%E6%96%87%E4%BB%B6.html"},{default:n(()=>[a("制作KVM ES镜像文件")]),_:1})]),e("li",null,[s(l,{to:"/other/Spring%20Boot%E5%8D%87%E7%BA%A7%E5%88%B02%206%20x%E8%B8%A9%E7%9A%84%E5%9D%91.html"},{default:n(()=>[a("Spring Boot升级到2 6 x踩的坑")]),_:1})]),e("li",null,[s(l,{to:"/software/jvm/JVM%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86.html"},{default:n(()=>[a("JVM异常处理")]),_:1})]),e("li",null,[s(l,{to:"/software/unclassified/Markdown%E8%BD%AF%E4%BB%B6%E6%AF%94%E5%AF%B9.html"},{default:n(()=>[a("Markdown软件比对")]),_:1})]),e("li",null,[s(l,{to:"/other/WebSocket%20SpringBoot%20Demo.html"},{default:n(()=>[a("WebSocket SpringBoot Demo")]),_:1})])]),p,E,h,m])}const v=t(c,[["render",B],["__file","CentOS7下Docker端口映射后防火墙失效.html.vue"]]);export{v as default};
