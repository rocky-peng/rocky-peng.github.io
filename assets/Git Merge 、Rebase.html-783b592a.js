import{_ as r,$ as d,a0 as n,a1 as e,a3 as i,a4 as l,a5 as s,a2 as a,w as o}from"./framework-b3a0f150.js";const c={},h=s('<h1 id="git-merge-、rebase" tabindex="-1"><a class="header-anchor" href="#git-merge-、rebase" aria-hidden="true">#</a> Git Merge 、Rebase</h1><h2 id="git-merge-a" tabindex="-1"><a class="header-anchor" href="#git-merge-a" aria-hidden="true">#</a> <strong>git merge a</strong></h2><p>会找到两个分支的共同祖先、以及两个分支各自最新的提交，然后进行三方合并，并且在对合并中修改的内容形成一个新的commit</p><h2 id="git-rebase-a" tabindex="-1"><a class="header-anchor" href="#git-rebase-a" aria-hidden="true">#</a> <strong>git rebase a</strong></h2><p>也就是变基，即把当前分支的祖先更改为a分支最新的提交。此时a为<strong>基分支</strong>，当前分支为**待变基分支。**git会从两个分支的祖先开始提取待变基分支的提交，然后把当前分支指针指向基分支最新提交，然后应用刚才提取到的修改（即：以a为基底合并当前分支代码）</p><p><strong>rebase与merge的功能都是合并代码</strong></p><p>现在假设有两个分支：dev 和 dev-pqs （dev-pqs是模拟各个开发人员的开发分支）</p><p>dev-pqs基于dev分支拉出，然后进行了 A B两个提交</p><p>然后dev分支分支有个新的提交 M（比如是其他开发人员合并上去的），如下图</p><figure><img src="https://cdn.justdopay.top/notion/md5-7ee058faf958872e49825ee139b46a85.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h2 id="把dev-pqs的代码合并到dev" tabindex="-1"><a class="header-anchor" href="#把dev-pqs的代码合并到dev" aria-hidden="true">#</a> 把dev-pqs的代码合并到dev</h2><h3 id="merge" tabindex="-1"><a class="header-anchor" href="#merge" aria-hidden="true">#</a> merge</h3><ol><li>切换当前分支为dev-pqs</li><li>执行git merge dev （后续应该再切换到dev分支，然后把dev-pqs合并到dev，这个步骤就省略了，因为如果有冲突，冲突已经在1、2两个步骤解决掉了，也可以直接执行这两个步骤）</li></ol><p>结果如下：</p><figure><img src="https://cdn.justdopay.top/notion/md5-5f76033e4a96ff5ebc4dd0889fafbe34.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h3 id="rebase" tabindex="-1"><a class="header-anchor" href="#rebase" aria-hidden="true">#</a> rebase</h3><ol><li>切换当前分支为 dev-pqs</li><li>执行 git rebase dev （后续应该再切换到dev分支，然后把dev-pqs合并到dev，这个步骤就省略了，因为如果有冲突，冲突已经在1、2两个步骤解决掉了，也可以直接执行这两个步骤）</li></ol><p>rebase前，dev-pqs分支的祖先是dev那个提交，rebase后，祖先就更改为dev的最新提交，也就是m那次提交。如下图：</p><figure><img src="https://cdn.justdopay.top/notion/md5-8b5ea2514439c08c59d915aeca8e72b0.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><h2 id="区别" tabindex="-1"><a class="header-anchor" href="#区别" aria-hidden="true">#</a> 区别</h2><ol><li>merge操作通常会生成一个新的commit，已提交的commit的版本号不会发生编号</li><li>merge后分支的祖先信息不会丢失</li><li>merge操作后的结果能提现出时间线</li><li>rebase操作后分支祖先信息会丢失，如上图看不出dev-pqs的祖先</li><li>rebase同时会更改commit的版本号，比如上面的A、B两个提交的版本号就发生了变化。A: 11e75—&gt;c78c B: 68b0—&gt;106d</li><li>rebase操作后并不是按照时间线排列（当然可以根据提交时间判断）</li></ol><h2 id="merge还是rebase" tabindex="-1"><a class="header-anchor" href="#merge还是rebase" aria-hidden="true">#</a> merge还是rebase?</h2><p>根据上面的区别，再根据公司、项目实际情况选择使用即可</p><h2 id="git-pull" tabindex="-1"><a class="header-anchor" href="#git-pull" aria-hidden="true">#</a> git pull</h2><p>git pull 等效于 git fetch + git merge</p><p>git pull -r 等效于 git pull -rebase 又等效于 git fetch + git rebase</p><h2 id="idea的rebase操作" tabindex="-1"><a class="header-anchor" href="#idea的rebase操作" aria-hidden="true">#</a> idea的rebase操作</h2><figure><img src="https://cdn.justdopay.top/notion/md5-cdd8d72339d573499dc776d5a970319d.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p>点击红框”rebase dev-pqs onto dev” 就相当于在执行 git rebase dev，一样的效果。 这个”onto”感觉很形象，有点体现出以dev为基底的感觉</p><h2 id="idea设置" tabindex="-1"><a class="header-anchor" href="#idea设置" aria-hidden="true">#</a> idea设置</h2><figure><img src="https://cdn.justdopay.top/notion/md5-b558ba217c6076d0b70c8e922c37b5c7.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>',33),g=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),p=e("hr",null,null,-1),u=e("hr",null,null,-1),f=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),a("：女为悦己者容，男为悦己者穷! "),e("br"),e("br"),e("img",{src:"https://images.pexels.com/photos/577585/pexels-photo-577585.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Eyeglasses reflecting computer code on a monitor, ideal for technology and programming themes.",loading:"lazy"})])],-1);function m(b,E){const t=o("RouterLink");return d(),n("div",null,[h,e("ul",null,[e("li",null,[i(t,{to:"/software/unclassified/RSA%20%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E5%A4%9A%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88.html"},{default:l(()=>[a("RSA 加密解密多语言实现方案")]),_:1})]),e("li",null,[i(t,{to:"/software/unclassified/%E8%AE%B0%E4%B8%80%E6%AC%A1%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F.html"},{default:l(()=>[a("记一次内存泄漏")]),_:1})]),e("li",null,[i(t,{to:"/other/%E6%98%AF%E6%97%B6%E5%80%99%E4%BD%BF%E7%94%A8MapStruct%E6%9B%BF%E4%BB%A3BeanUtils%E4%BA%86.html"},{default:l(()=>[a("是时候使用MapStruct替代BeanUtils了")]),_:1})]),e("li",null,[i(t,{to:"/other/Sublime%20Text%20%E6%A0%BC%E5%BC%8F%E5%8C%96JSON.html"},{default:l(()=>[a("Sublime Text 格式化JSON")]),_:1})]),e("li",null,[i(t,{to:"/other/Cornell%20Notes%20System.html"},{default:l(()=>[a("Cornell Notes System")]),_:1})]),e("li",null,[i(t,{to:"/software/java-basic/IO%E7%9B%B8%E5%85%B3.html"},{default:l(()=>[a("IO相关")]),_:1})]),e("li",null,[i(t,{to:"/software/unclassified/linux_no_space_left_on_device.html"},{default:l(()=>[a("linux_no_space_left_on_device")]),_:1})]),e("li",null,[i(t,{to:"/software/unclassified/%E5%A4%9A%E5%8F%B0centos%E6%9C%8D%E5%8A%A1%E5%99%A8%EF%BC%8C%E6%96%87%E4%BB%B6%E4%BA%92%E7%9B%B8%E5%A4%87%E4%BB%BD.html"},{default:l(()=>[a("多台centos服务器，文件互相备份")]),_:1})]),e("li",null,[i(t,{to:"/software/middleware/mysql/MySQL%E7%B4%A2%E5%BC%95.html"},{default:l(()=>[a("MySQL索引")]),_:1})]),e("li",null,[i(t,{to:"/software/jvm/JVM%E6%9D%82%E9%A1%B9.html"},{default:l(()=>[a("JVM杂项")]),_:1})]),e("li",null,[i(t,{to:"/software/java-basic/ReentrantLock%E6%BA%90%E7%A0%81%E8%A7%A3%E8%AF%BB.html"},{default:l(()=>[a("ReentrantLock源码解读")]),_:1})]),e("li",null,[i(t,{to:"/other/CentOS7%E4%B8%8BDocker%E7%AB%AF%E5%8F%A3%E6%98%A0%E5%B0%84%E5%90%8E%E9%98%B2%E7%81%AB%E5%A2%99%E5%A4%B1%E6%95%88.html"},{default:l(()=>[a("CentOS7下Docker端口映射后防火墙失效")]),_:1})])]),g,p,u,f])}const _=r(c,[["render",m],["__file","Git Merge 、Rebase.html.vue"]]);export{_ as default};
