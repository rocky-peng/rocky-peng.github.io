import{_ as i,$ as r,a0 as c,a1 as a,a2 as e,a3 as n,a4 as o,a5 as p,w as s}from"./framework-8c4427da.js";const d={},u=p(`<h2 id="一-循环依赖异常" tabindex="-1"><a class="header-anchor" href="#一-循环依赖异常" aria-hidden="true">#</a> 一：循环依赖异常</h2><p>比如某个ServiceA 内部引用了自身，目的是为了防止事务注解失效</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ServiceA</span> <span class="token punctuation">{</span>
	
	<span class="token annotation punctuation">@Autowired</span>
	<span class="token keyword">private</span> <span class="token class-name">ServiceA</span> serviceA<span class="token punctuation">;</span>

	<span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这种做法在spring boot 2.6.0之前是没有问题的。</p><p>现在技术升级，把spring boot的版本从2.3.12.RELEASE升级到了2.6.0，然后出现了下面的提示：</p><blockquote><p>Relying upon circular references is discouraged and they are prohibited by default. Update your application to remove the dependency cycle between beans. As a last resort, it may be possible to break the cycle automatically by setting spring.main.allow-circular-references to tr</p></blockquote><p>采用的解决方案就是，</p><p>**方案一：**不直接注入自身，转而注入ApplicationContext，然后在使用的地方通过getBean的方式获取实例对象</p><p>**方案二：**使用 <code>XXX xxx = (XXX)AopContext.*currentProxy*()</code> 这个方法会放回当前类的代理对象，内部是通过threadlocal来存储。通过这个方式也能达到相同目的</p><h2 id="二-url中的双斜杠出现404" tabindex="-1"><a class="header-anchor" href="#二-url中的双斜杠出现404" aria-hidden="true">#</a> 二：url中的双斜杠出现404</h2><p>在升级前，<strong>代码中</strong>如果某个接口地中中有两个双斜杠，是能正常执行的。比如代码中某个接口的url拼接起来是：/api//xxx/xxx 用api/xxx/xxx可以正常访问</p><p>升级到2.6.x后会不在代码中去掉双斜杠的情况下，用api/xxx/xxx访问就会404，导致接口异常</p><h2 id="三-nacos的shared-config配置不生效" tabindex="-1"><a class="header-anchor" href="#三-nacos的shared-config配置不生效" aria-hidden="true">#</a> 三：nacos的shared-config配置不生效</h2><p>在spring boot 2.4.0之前采用类似下面的配置即可</p><figure><img src="https://cdn.justdopay.top/notion/md5-47f92655d02085f5a7eb3d130366ae7a.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p>但升级后2.4.0之后的版本后下面的配置是跑步起来的，会提示：</p><figure><img src="https://cdn.justdopay.top/notion/md5-3217309c59519fe70978caaefa146023.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure><p><strong>升级后正确的配置</strong>类似下面：</p><figure><img src="https://cdn.justdopay.top/notion/md5-91d47a5d51b8ce0f41ea139605e8edde.png" alt="Untitled" tabindex="0" loading="lazy"><figcaption>Untitled</figcaption></figure>`,19),h={href:"https://github.com/alibaba/spring-cloud-alibaba/pull/2349#top",target:"_blank",rel:"noopener noreferrer"},E=a("br",null,null,-1),g=a("h2",{id:"系统推荐",tabindex:"-1"},[a("a",{class:"header-anchor",href:"#系统推荐","aria-hidden":"true"},"#"),e(" 系统推荐")],-1),f=a("p",null,[a("br"),a("br"),a("br"),a("br"),a("br"),a("br")],-1),b=a("hr",null,null,-1),m=a("hr",null,null,-1),_=a("ul",null,[a("li",null,[a("strong",null,"随机毒鸡汤"),e("：出场顺序很重要，去迟了也没关系，毕竟大Boss都是最后出场。 "),a("br"),a("br"),a("img",{src:"https://images.pexels.com/photos/32000418/pexels-photo-32000418.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Falcate Orange tip butterfly - female",loading:"lazy"})])],-1);function x(B,A){const l=s("ExternalLinkIcon"),t=s("RouterLink");return r(),c("div",null,[u,a("p",null,[e("扩展看："),a("a",h,[e("https://github.com/alibaba/spring-cloud-alibaba/pull/2349#top"),n(l)])]),E,g,a("ul",null,[a("li",null,[n(t,{to:"/software/unclassified/Cordova+Umi%E9%A1%B9%E7%9B%AE%E6%90%AD%E5%BB%BA%E6%AD%A5%E9%AA%A4.html"},{default:o(()=>[e("Cordova+Umi项目搭建步骤")]),_:1})]),a("li",null,[n(t,{to:"/other/Nacos-Spring%20Gateway-Spring%20boot%E6%97%A0%E6%84%9F%E5%8F%91%E5%B8%83.html"},{default:o(()=>[e("Nacos-Spring Gateway-Spring boot无感发布")]),_:1})]),a("li",null,[n(t,{to:"/other/MySQL%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:o(()=>[e("MySQL高可用")]),_:1})]),a("li",null,[n(t,{to:"/other/PostgreSQL%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD.html"},{default:o(()=>[e("PostgreSQL定时备份")]),_:1})]),a("li",null,[n(t,{to:"/other/MongoDB%E9%AB%98%E5%8F%AF%E7%94%A8.html"},{default:o(()=>[e("MongoDB高可用")]),_:1})]),a("li",null,[n(t,{to:"/other/%E6%8F%90%E5%8F%96Docker%E9%95%9C%E5%83%8F%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6.html"},{default:o(()=>[e("提取Docker镜像中的文件")]),_:1})]),a("li",null,[n(t,{to:"/software/shodowsocks/ShadowsockServer.html"},{default:o(()=>[e("ShadowsockServer")]),_:1})]),a("li",null,[n(t,{to:"/software/unclassified/%E4%B9%B1%E4%B8%83%E5%85%AB%E7%B3%9F%E7%9A%84%E7%AC%94%E8%AE%B0.html"},{default:o(()=>[e("乱七八糟的笔记")]),_:1})]),a("li",null,[n(t,{to:"/software/shodowsocks/ShadowsockServerUpdatePort.html"},{default:o(()=>[e("ShadowsockServerUpdatePort")]),_:1})]),a("li",null,[n(t,{to:"/software/unclassified/index%E6%96%B9%E6%B3%95%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E8%AE%B0%E5%BD%95.html"},{default:o(()=>[e("index方法压力测试记录")]),_:1})]),a("li",null,[n(t,{to:"/other/PGSQL%E7%9A%84json%E5%92%8C%20jsonb%20%E8%AF%BB%E5%86%99%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95.html"},{default:o(()=>[e("PGSQL的json和 jsonb 读写性能测试")]),_:1})]),a("li",null,[n(t,{to:"/software/middleware/mysql/MySQL%E4%B8%89%E5%A4%A7%E6%97%A5%E5%BF%97.html"},{default:o(()=>[e("MySQL三大日志")]),_:1})])]),f,b,m,_])}const v=i(d,[["render",x],["__file","Spring Boot升级到2 6 x踩的坑.html.vue"]]);export{v as default};
