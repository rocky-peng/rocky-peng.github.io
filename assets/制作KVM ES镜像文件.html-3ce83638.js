import{_ as i,$ as r,a0 as c,a1 as s,a2 as a,a3 as e,a4 as t,a5 as p,w as l}from"./framework-8c4427da.js";const u={},d={href:"https://note.youdao.com/ynoteshare1/index.html?id=d641f8e6125142a0c2f19a9b416534ac&type=note?auto",target:"_blank",rel:"noopener noreferrer"},m=p(`<ol><li>进入centos服务器，上传es的安装文件到服务器并解压到/usr/share/elasticsearch目录，然后已root用户执行下面步骤：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adduser elastic

<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft nofile 125536&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard nofile 125536&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft nproc  8096&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard nproc  8096&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf


<span class="token builtin class-name">echo</span> <span class="token string">&quot;vm.max_map_count=522144&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token function">sysctl</span> <span class="token parameter variable">-p</span>

<span class="token function">chown</span> <span class="token parameter variable">-R</span> elastic:elastic /usr/share/elasticsearch

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要开启 bootstrap.memory_lock: true，则还需要执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard memlock unlimited&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft memlock unlimited&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改jvm.options文件</p><p>已elastic用户修改es的配置文件，然后执行 bin/elasticsearch -d</p><h2 id="编写自启动脚本" tabindex="-1"><a class="header-anchor" href="#编写自启动脚本" aria-hidden="true">#</a> 编写自启动脚本</h2><ol><li>vi /usr/lib/systemd/system/elasticsearch.service</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>elasticsearch <span class="token function">service</span>
  
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">User</span><span class="token operator">=</span>elastic
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/share/elasticsearch/bin/elasticsearch
  
<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>systemctl enable elasticsearch</p></li><li><p>systemctl start elasticsearch</p></li></ol><h2 id="docker部署" tabindex="-1"><a class="header-anchor" href="#docker部署" aria-hidden="true">#</a> Docker部署</h2><p>由于需要sshd服务，所以我们没有直接使用es7.4.1的docker镜像，而是使用的一个centos的docker镜像</p><p>然后同样执行上面的步骤，然后启动docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network create <span class="token parameter variable">-d</span> macvlan  <span class="token parameter variable">--subnet</span><span class="token operator">=</span><span class="token number">172.26</span>.43.0/24 <span class="token parameter variable">--gateway</span><span class="token operator">=</span><span class="token number">172.26</span>.43.129 <span class="token parameter variable">-o</span> <span class="token assign-left variable">parent</span><span class="token operator">=</span>bond0 mynet   

<span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">TZ</span><span class="token operator">=</span><span class="token string">&quot;Asia/Shanghai&quot;</span> <span class="token parameter variable">--name</span> es172_26_43_136 <span class="token parameter variable">-h</span> es172_26_43_136 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--network</span><span class="token operator">=</span>mynet <span class="token parameter variable">--ip</span> <span class="token number">172.26</span>.43.136 <span class="token parameter variable">--cpus</span><span class="token operator">=</span><span class="token number">15</span> <span class="token parameter variable">--memory</span><span class="token operator">=</span>27g --memory-swap<span class="token operator">=</span>27g <span class="token parameter variable">--ulimit</span> <span class="token assign-left variable">memlock</span><span class="token operator">=</span>-1:-1 <span class="token parameter variable">--privileged</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">ES_JAVA_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Xms13g -Xmx13g&quot;</span> <span class="token parameter variable">-v</span> /opt/es/es-172.26.43.136/elasticsearch-7.4.1:/usr/share/elasticsearch <span class="token parameter variable">-v</span> /opt/es/es-172.26.43.136/backups:/opt/csbit/backups csbit-elasticsearch /usr/sbin/init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：这里虽然限制了cpus为15，但是进入到容器内部执行lscpu仍然会显示40个（和宿主机一样的）</p><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,17),v=s("p",null,[s("br"),s("br"),s("br"),s("br"),s("br"),s("br")],-1),b=s("hr",null,null,-1),E=s("hr",null,null,-1),h=s("ul",null,[s("li",null,[s("strong",null,"随机毒鸡汤"),a("：最难的不是不原谅，而是不知从何原谅。 "),s("br"),s("br"),s("img",{src:"https://images.pexels.com/photos/31416984/pexels-photo-31416984.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Modern interior of an art gallery in Tokyo, Japan, showcasing stunning architectural design.",loading:"lazy"})])],-1);function k(g,B){const o=l("ExternalLinkIcon"),n=l("RouterLink");return r(),c("div",null,[s("p",null,[a("安装KVM，创建centos虚拟机的步骤，参考："),s("a",d,[a("https://note.youdao.com/ynoteshare1/index.html?id=d641f8e6125142a0c2f19a9b416534ac&type=note?auto"),e(o)])]),m,s("ul",null,[s("li",null,[e(n,{to:"/other/%E5%85%8D%E8%B4%B9https%E8%AF%81%E4%B9%A6%E3%80%81%E8%87%AA%E5%8A%A8%E7%BB%AD%E6%9C%9F.html"},{default:t(()=>[a("免费https证书、自动续期")]),_:1})]),s("li",null,[e(n,{to:"/software/spring/Spring%20Cloud%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E6%8A%80%E6%9C%AF%E6%A6%82%E8%A7%88%E3%80%90Finchley%20%E7%89%88%E3%80%91.html"},{default:t(()=>[a("Spring Cloud（一）：服务治理技术概览【Finchley 版】")]),_:1})]),s("li",null,[e(n,{to:"/other/Censys%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%AD%A6%E4%B9%A0.html"},{default:t(()=>[a("Censys搜索引擎学习")]),_:1})]),s("li",null,[e(n,{to:"/other/K8S%20%E6%97%A0%E6%84%9F%E5%8F%91%E5%B8%83.html"},{default:t(()=>[a("K8S 无感发布")]),_:1})]),s("li",null,[e(n,{to:"/other/Sublime%20Text%20%E6%A0%BC%E5%BC%8F%E5%8C%96JSON.html"},{default:t(()=>[a("Sublime Text 格式化JSON")]),_:1})]),s("li",null,[e(n,{to:"/other/%E9%AB%98%E5%8F%AF%E7%94%A8%E9%80%9A%E7%94%A8%E6%96%B9%E6%A1%88.html"},{default:t(()=>[a("高可用通用方案")]),_:1})]),s("li",null,[e(n,{to:"/software/unclassified/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9git%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E4%B8%AD%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1.html"},{default:t(()=>[a("批量修改git历史记录中的用户名和邮箱")]),_:1})]),s("li",null,[e(n,{to:"/software/java-basic/%E4%B8%8D%E9%87%8D%E5%90%AF%20JVM%EF%BC%8C%E5%A6%82%E4%BD%95%E6%9B%BF%E6%8D%A2%E6%8E%89%E5%B7%B2%E7%BB%8F%E5%8A%A0%E8%BD%BD%E7%9A%84%E7%B1%BB%EF%BC%9F.html"},{default:t(()=>[a("不重启 JVM，如何替换掉已经加载的类？")]),_:1})]),s("li",null,[e(n,{to:"/software/java-basic/Java%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80.html"},{default:t(()=>[a("Java面试基础")]),_:1})]),s("li",null,[e(n,{to:"/other/PostgreSQL%20JSON%E7%B1%BB%E5%9E%8B%E5%AD%97%E6%AE%B5%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C.html"},{default:t(()=>[a("PostgreSQL JSON类型字段常用操作")]),_:1})]),s("li",null,[e(n,{to:"/software/docker/Docker%E8%B7%A8%E4%B8%BB%E6%9C%BA%E9%80%9A%E4%BF%A1%E6%96%B9%E6%A1%88.html"},{default:t(()=>[a("Docker跨主机通信方案")]),_:1})]),s("li",null,[e(n,{to:"/software/unclassified/BBR%E5%8A%A0%E9%80%9F.html"},{default:t(()=>[a("BBR加速")]),_:1})])]),v,b,E,h])}const _=i(u,[["render",k],["__file","制作KVM ES镜像文件.html.vue"]]);export{_ as default};
