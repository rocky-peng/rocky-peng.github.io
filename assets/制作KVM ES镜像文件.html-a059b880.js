import{_ as r,$ as o,a0 as c,a1 as a,a2 as s,a3 as e,a4 as t,a5 as p,w as l}from"./framework-16d560c6.js";const u={},d={href:"https://note.youdao.com/ynoteshare1/index.html?id=d641f8e6125142a0c2f19a9b416534ac&type=note?auto",target:"_blank",rel:"noopener noreferrer"},m=p(`<ol><li>进入centos服务器，上传es的安装文件到服务器并解压到/usr/share/elasticsearch目录，然后已root用户执行下面步骤：</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>adduser elastic

<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft nofile 125536&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard nofile 125536&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft nproc  8096&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard nproc  8096&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf


<span class="token builtin class-name">echo</span> <span class="token string">&quot;vm.max_map_count=522144&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/sysctl.conf
<span class="token function">sysctl</span> <span class="token parameter variable">-p</span>

<span class="token function">chown</span> <span class="token parameter variable">-R</span> elastic:elastic /usr/share/elasticsearch

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果需要开启 bootstrap.memory_lock: true，则还需要执行：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">echo</span> <span class="token string">&quot;* hard memlock unlimited&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf 
<span class="token builtin class-name">echo</span> <span class="token string">&quot;* soft memlock unlimited&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/security/limits.conf 
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>修改jvm.options文件</p><p>已elastic用户修改es的配置文件，然后执行 bin/elasticsearch -d</p><h2 id="编写自启动脚本" tabindex="-1"><a class="header-anchor" href="#编写自启动脚本" aria-hidden="true">#</a> 编写自启动脚本</h2><ol><li>vi /usr/lib/systemd/system/elasticsearch.service</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token punctuation">[</span>Unit<span class="token punctuation">]</span>
<span class="token assign-left variable">Description</span><span class="token operator">=</span>elasticsearch <span class="token function">service</span>
  
<span class="token punctuation">[</span>Service<span class="token punctuation">]</span>
<span class="token assign-left variable">User</span><span class="token operator">=</span>elastic
<span class="token assign-left variable">ExecStart</span><span class="token operator">=</span>/usr/share/elasticsearch/bin/elasticsearch
  
<span class="token punctuation">[</span>Install<span class="token punctuation">]</span>
<span class="token assign-left variable">WantedBy</span><span class="token operator">=</span>multi-user.target
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li><p>systemctl enable elasticsearch</p></li><li><p>systemctl start elasticsearch</p></li></ol><h2 id="docker部署" tabindex="-1"><a class="header-anchor" href="#docker部署" aria-hidden="true">#</a> Docker部署</h2><p>由于需要sshd服务，所以我们没有直接使用es7.4.1的docker镜像，而是使用的一个centos的docker镜像</p><p>然后同样执行上面的步骤，然后启动docker</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> network create <span class="token parameter variable">-d</span> macvlan  <span class="token parameter variable">--subnet</span><span class="token operator">=</span><span class="token number">172.26</span>.43.0/24 <span class="token parameter variable">--gateway</span><span class="token operator">=</span><span class="token number">172.26</span>.43.129 <span class="token parameter variable">-o</span> <span class="token assign-left variable">parent</span><span class="token operator">=</span>bond0 mynet   

<span class="token function">docker</span> run <span class="token parameter variable">-itd</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">TZ</span><span class="token operator">=</span><span class="token string">&quot;Asia/Shanghai&quot;</span> <span class="token parameter variable">--name</span> es172_26_43_136 <span class="token parameter variable">-h</span> es172_26_43_136 <span class="token parameter variable">--restart</span><span class="token operator">=</span>always <span class="token parameter variable">--network</span><span class="token operator">=</span>mynet <span class="token parameter variable">--ip</span> <span class="token number">172.26</span>.43.136 <span class="token parameter variable">--cpus</span><span class="token operator">=</span><span class="token number">15</span> <span class="token parameter variable">--memory</span><span class="token operator">=</span>27g --memory-swap<span class="token operator">=</span>27g <span class="token parameter variable">--ulimit</span> <span class="token assign-left variable">memlock</span><span class="token operator">=</span>-1:-1 <span class="token parameter variable">--privileged</span> <span class="token parameter variable">-e</span> <span class="token assign-left variable">ES_JAVA_OPTS</span><span class="token operator">=</span><span class="token string">&quot;-Xms13g -Xmx13g&quot;</span> <span class="token parameter variable">-v</span> /opt/es/es-172.26.43.136/elasticsearch-7.4.1:/usr/share/elasticsearch <span class="token parameter variable">-v</span> /opt/es/es-172.26.43.136/backups:/opt/csbit/backups csbit-elasticsearch /usr/sbin/init
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>注意：这里虽然限制了cpus为15，但是进入到容器内部执行lscpu仍然会显示40个（和宿主机一样的）</p><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,17),b=a("p",null,[a("br"),a("br"),a("br"),a("br"),a("br"),a("br")],-1),v=a("hr",null,null,-1),h=a("hr",null,null,-1),k=a("ul",null,[a("li",null,[a("strong",null,"随机毒鸡汤"),s("：十八岁生日，爸爸送了我一辆车，可惜被别人扫码骑走了。 "),a("br"),a("br"),a("img",{src:"https://tuapi.eees.cc/api.php?category=fengjing&type=302&uuid=44856299-b225-411b-98e8-30661faccab2",alt:"",loading:"lazy"})])],-1);function E(g,f){const i=l("ExternalLinkIcon"),n=l("RouterLink");return o(),c("div",null,[a("p",null,[s("安装KVM，创建centos虚拟机的步骤，参考："),a("a",d,[s("https://note.youdao.com/ynoteshare1/index.html?id=d641f8e6125142a0c2f19a9b416534ac&type=note?auto"),e(i)])]),m,a("ul",null,[a("li",null,[e(n,{to:"/software/unclassified/RSA%20%E5%8A%A0%E5%AF%86%E8%A7%A3%E5%AF%86%E5%A4%9A%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88.html"},{default:t(()=>[s("RSA 加密解密多语言实现方案")]),_:1})]),a("li",null,[e(n,{to:"/software/middleware/mysql/MySQL%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html"},{default:t(()=>[s("MySQL常用命令")]),_:1})]),a("li",null,[e(n,{to:"/software/spring/Spring%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%85%B3%E9%94%AE%E7%82%B9.html"},{default:t(()=>[s("Spring框架源码关键点")]),_:1})]),a("li",null,[e(n,{to:"/other/K8S%20%E6%97%A0%E6%84%9F%E5%8F%91%E5%B8%83.html"},{default:t(()=>[s("K8S 无感发布")]),_:1})]),a("li",null,[e(n,{to:"/software/maccms/MAC%20CMS.html"},{default:t(()=>[s("MAC CMS")]),_:1})]),a("li",null,[e(n,{to:"/software/unclassified/%E6%89%B9%E9%87%8F%E4%BF%AE%E6%94%B9git%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E4%B8%AD%E7%9A%84%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1.html"},{default:t(()=>[s("批量修改git历史记录中的用户名和邮箱")]),_:1})]),a("li",null,[e(n,{to:"/software/unclassified/Flutter%E5%BC%80%E5%8F%91%E9%9C%80%E8%A6%81%E6%B6%89%E5%8F%8A%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9%E5%A4%A7%E7%BA%B2.html"},{default:t(()=>[s("Flutter开发需要涉及的知识点大纲")]),_:1})]),a("li",null,[e(n,{to:"/other/Git%20Merge%20%E3%80%81Rebase.html"},{default:t(()=>[s("Git Merge 、Rebase")]),_:1})]),a("li",null,[e(n,{to:"/other/vuepress/vuepress-theme-hope%E4%BD%BF%E7%94%A8%E5%BF%83%E5%BE%97.html"},{default:t(()=>[s("vuepress-theme-hope使用心得")]),_:1})]),a("li",null,[e(n,{to:"/software/middleware/mysql/%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1Seata.html"},{default:t(()=>[s("分布式事务Seata")]),_:1})]),a("li",null,[e(n,{to:"/other/Nginx%E7%9A%84%E5%8F%8C%E5%90%91%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE.html"},{default:t(()=>[s("Nginx的双向认证配置")]),_:1})]),a("li",null,[e(n,{to:"/software/unclassified/%E5%89%8D%E5%90%8E%E7%AB%AF%E5%B8%B8%E7%94%A8%E6%8A%80%E6%9C%AF.html"},{default:t(()=>[s("前后端常用技术")]),_:1})])]),b,v,h,k])}const A=r(u,[["render",E],["__file","制作KVM ES镜像文件.html.vue"]]);export{A as default};
