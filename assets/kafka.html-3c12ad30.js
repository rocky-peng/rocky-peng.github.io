import{_ as t,$ as o,a0 as s,a2 as a,a4 as r,a1 as e}from"./framework-294a1fec.js";const f={},i=r('<ol><li>kafka的副本是针对分区的。也就是说不同分区的leader可能是不一样的。</li><li></li></ol><h2 id="新消费组" tabindex="-1"><a class="header-anchor" href="#新消费组" aria-hidden="true">#</a> 新消费组</h2><h3 id="设置-auto-offset-reset-config-earliest" tabindex="-1"><a class="header-anchor" href="#设置-auto-offset-reset-config-earliest" aria-hidden="true">#</a> 设置：AUTO_OFFSET_RESET_CONFIG earliest</h3><p>第一次启动，从最开始的offset开始消费。然后不改动任何代码和配置重启，还是从最开始的offset开始消费，多次启动，仍然是从最开始的offset开始消费。</p><p>也就是说，新的消费组如果设置了earliest，kafka是不会记录消费位置的</p><h3 id="设置-auto-offset-reset-config-none" tabindex="-1"><a class="header-anchor" href="#设置-auto-offset-reset-config-none" aria-hidden="true">#</a> 设置：AUTO_OFFSET_RESET_CONFIG none</h3><p>启动则报错</p><h3 id="设置-auto-offset-reset-config-earliest-1" tabindex="-1"><a class="header-anchor" href="#设置-auto-offset-reset-config-earliest-1" aria-hidden="true">#</a> 设置：AUTO_OFFSET_RESET_CONFIG earliest</h3><p>第一次启动，从最新的offset开始消费。同时offset会实时更新。然后关闭，此时的offset为B。然后不改动任何代码和配置多次重启后，消费的offset不会实时更新，所以多次重启可能会重复消费</p><h3 id="不配置auto-offset-reset-config" tabindex="-1"><a class="header-anchor" href="#不配置auto-offset-reset-config" aria-hidden="true">#</a> 不配置AUTO_OFFSET_RESET_CONFIG</h3><p>第一次启动，从最新的offset开始消费。同时offset会实时更新。然后关闭，此时的offset为B。然后不改动任何代码和配置多次重启后，消费的offset不会实时更新，所以多次重启可能会重复消费</p><br>',12),n=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),d=e("hr",null,null,-1),l=e("hr",null,null,-1),c=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),a("：今天下决心做个废物，可没想到这行的竞争，竟如此激烈。 "),e("br"),e("br"),e("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=507eda88-8dd7-497a-9c23-e7a3e89b03b3",alt:"",loading:"lazy"})])],-1);function h(_,u){return o(),s("div",null,[i,a(" ## 系统推荐 - [Censys搜索引擎学习](../../../other/Censys搜索引擎学习.md) - [提取Docker镜像中的文件](../../../other/提取Docker镜像中的文件.md) - [K8S 无感发布](../../../other/K8S 无感发布.md) - [搭建基于docker的elk平台来分析java日志](../es/搭建基于docker的elk平台来分析java日志.md) - [JVM杂项](../../jvm/JVM杂项.md) - [RocketMQ](RocketMQ.md) - [分布式问题](../../unclassified/分布式问题.md) - [K8S常用命令](../../../other/K8S常用命令.md) "),n,d,l,c])}const k=t(f,[["render",h],["__file","kafka.html.vue"]]);export{k as default};
