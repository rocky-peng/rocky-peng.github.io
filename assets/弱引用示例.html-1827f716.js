const t=JSON.parse('{"key":"v-0ffde5f8","path":"/software/java-basic/%E5%BC%B1%E5%BC%95%E7%94%A8%E7%A4%BA%E4%BE%8B.html","title":"弱引用示例","lang":"zh-CN","frontmatter":{"title":"弱引用示例","date":"2017-03-10T00:00:00.000Z","description":"代码如下： 上面的代码唯一不同的地方就是str采用的是new String(\\"str1\\")的方式，而str2采用的是直接赋值的的方式。 后者会把字符串写入常量池中，而前者不会，所以导致输出结果不同。 系统推荐 MyBatis JVM垃圾收集器 ES6.2.3(3节点)数据迁移到ES7.4.1(5节点) 提取Docker镜像中的文件 kafka 搭建基于docker的elk平台来分析java日志 InnoDB存储引擎 Java面试基础 RocketMQ intro 表单重复提交解决方案 https和http混用解决办法","head":[["link",{"rel":"canonical","href":"https://justsoso.fun/software/java-basic/%E5%BC%B1%E5%BC%95%E7%94%A8%E7%A4%BA%E4%BE%8B.html"}],["meta",{"property":"og:url","content":"https://justsoso.fun/software/java-basic/%E5%BC%B1%E5%BC%95%E7%94%A8%E7%A4%BA%E4%BE%8B.html"}],["meta",{"property":"og:site_name","content":"技术加油站"}],["meta",{"property":"og:title","content":"弱引用示例"}],["meta",{"property":"og:description","content":"代码如下： 上面的代码唯一不同的地方就是str采用的是new String(\\"str1\\")的方式，而str2采用的是直接赋值的的方式。 后者会把字符串写入常量池中，而前者不会，所以导致输出结果不同。 系统推荐 MyBatis JVM垃圾收集器 ES6.2.3(3节点)数据迁移到ES7.4.1(5节点) 提取Docker镜像中的文件 kafka 搭建基于docker的elk平台来分析java日志 InnoDB存储引擎 Java面试基础 RocketMQ intro 表单重复提交解决方案 https和http混用解决办法"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-02-01T00:38:42.000Z"}],["meta",{"property":"article:published_time","content":"2017-03-10T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-02-01T00:38:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"弱引用示例\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2017-03-10T00:00:00.000Z\\",\\"dateModified\\":\\"2025-02-01T00:38:42.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"系统推荐","slug":"系统推荐","link":"#系统推荐","children":[]}],"git":{"createdTime":1671976155000,"updatedTime":1738370322000,"contributors":[{"name":"rocky-peng","email":"rocky.peng@qq.com","commits":425},{"name":"rocky.peng","email":"rocky.peng@qq.com","commits":22}]},"readingTime":{"minutes":1.42,"words":426},"filePathRelative":"software/java-basic/弱引用示例.md","localizedDate":"2017年3月10日","excerpt":"<p>代码如下：</p>\\n<figure><img src=\\"https://cdn.justdopay.com/xiaoshujiang/1629079150623.png\\" alt=\\"\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption></figcaption></figure>\\n<p>上面的代码唯一不同的地方就是str采用的是new String(\\"str1\\")的方式，而str2采用的是直接赋值的的方式。\\n后者会把字符串写入常量池中，而前者不会，所以导致输出结果不同。</p>\\n<hr>\\n<br>\\n<h2> 系统推荐</h2>\\n<ul>\\n<li><a href=\\"/software/unclassified/MyBatis.html\\" target=\\"blank\\">MyBatis</a></li>\\n<li><a href=\\"/software/jvm/JVM%E5%9E%83%E5%9C%BE%E6%94%B6%E9%9B%86%E5%99%A8.html\\" target=\\"blank\\">JVM垃圾收集器</a></li>\\n<li><a href=\\"/software/middleware/es/ES6.2.3(3%E8%8A%82%E7%82%B9)%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB%E5%88%B0ES7.4.1(5%E8%8A%82%E7%82%B9).html\\" target=\\"blank\\">ES6.2.3(3节点)数据迁移到ES7.4.1(5节点)</a></li>\\n<li><a href=\\"/other/%E6%8F%90%E5%8F%96Docker%E9%95%9C%E5%83%8F%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6.html\\" target=\\"blank\\">提取Docker镜像中的文件</a></li>\\n<li><a href=\\"/software/middleware/mq/kafka.html\\" target=\\"blank\\">kafka</a></li>\\n<li><a href=\\"/software/middleware/es/%E6%90%AD%E5%BB%BA%E5%9F%BA%E4%BA%8Edocker%E7%9A%84elk%E5%B9%B3%E5%8F%B0%E6%9D%A5%E5%88%86%E6%9E%90java%E6%97%A5%E5%BF%97.html\\" target=\\"blank\\">搭建基于docker的elk平台来分析java日志</a></li>\\n<li><a href=\\"/software/middleware/mysql/InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.html\\" target=\\"blank\\">InnoDB存储引擎</a></li>\\n<li><a href=\\"/software/java-basic/Java%E9%9D%A2%E8%AF%95%E5%9F%BA%E7%A1%80.html\\" target=\\"blank\\">Java面试基础</a></li>\\n<li><a href=\\"/software/middleware/mq/RocketMQ.html\\" target=\\"blank\\">RocketMQ</a></li>\\n<li><a href=\\"/intro.html\\" target=\\"blank\\">intro</a></li>\\n<li><a href=\\"/software/unclassified/%E8%A1%A8%E5%8D%95%E9%87%8D%E5%A4%8D%E6%8F%90%E4%BA%A4%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88.html\\" target=\\"blank\\">表单重复提交解决方案</a></li>\\n<li><a href=\\"/other/https%E5%92%8Chttp%E6%B7%B7%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html\\" target=\\"blank\\">https和http混用解决办法</a></li>\\n</ul>","copyright":{},"autoDesc":true}');export{t as data};
