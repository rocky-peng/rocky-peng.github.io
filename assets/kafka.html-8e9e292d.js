import{_ as n,$ as f,a0 as i,a1 as e,a3 as a,a4 as r,a2 as t,a5 as d,w as l}from"./framework-3895bb24.js";const h={},E=d('<ol><li>kafka的副本是针对分区的。也就是说不同分区的leader可能是不一样的。</li><li></li></ol><h2 id="新消费组" tabindex="-1"><a class="header-anchor" href="#新消费组" aria-hidden="true">#</a> 新消费组</h2><h3 id="设置-auto-offset-reset-config-earliest" tabindex="-1"><a class="header-anchor" href="#设置-auto-offset-reset-config-earliest" aria-hidden="true">#</a> 设置：AUTO_OFFSET_RESET_CONFIG earliest</h3><p>第一次启动，从最开始的offset开始消费。然后不改动任何代码和配置重启，还是从最开始的offset开始消费，多次启动，仍然是从最开始的offset开始消费。</p><p>也就是说，新的消费组如果设置了earliest，kafka是不会记录消费位置的</p><h3 id="设置-auto-offset-reset-config-none" tabindex="-1"><a class="header-anchor" href="#设置-auto-offset-reset-config-none" aria-hidden="true">#</a> 设置：AUTO_OFFSET_RESET_CONFIG none</h3><p>启动则报错</p><h3 id="设置-auto-offset-reset-config-earliest-1" tabindex="-1"><a class="header-anchor" href="#设置-auto-offset-reset-config-earliest-1" aria-hidden="true">#</a> 设置：AUTO_OFFSET_RESET_CONFIG earliest</h3><p>第一次启动，从最新的offset开始消费。同时offset会实时更新。然后关闭，此时的offset为B。然后不改动任何代码和配置多次重启后，消费的offset不会实时更新，所以多次重启可能会重复消费</p><h3 id="不配置auto-offset-reset-config" tabindex="-1"><a class="header-anchor" href="#不配置auto-offset-reset-config" aria-hidden="true">#</a> 不配置AUTO_OFFSET_RESET_CONFIG</h3><p>第一次启动，从最新的offset开始消费。同时offset会实时更新。然后关闭，此时的offset为B。然后不改动任何代码和配置多次重启后，消费的offset不会实时更新，所以多次重启可能会重复消费</p><br><br><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>',15),c={href:"http://xn--oor20vgqcczg.md",target:"_blank",rel:"noopener noreferrer"},u=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),_=e("hr",null,null,-1),p=e("hr",null,null,-1),A=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),t("：有很多事，介于不说委屈，说了矫情之间。 "),e("br"),e("br"),e("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=bbe2f48d-d790-4323-a44d-ac95d28ec8d2",alt:"",loading:"lazy"})])],-1);function B(b,g){const o=l("RouterLink"),s=l("ExternalLinkIcon");return f(),i("div",null,[E,e("ul",null,[e("li",null,[a(o,{to:"/software/java-basic/%E5%BC%B1%E5%BC%95%E7%94%A8%E7%A4%BA%E4%BE%8B.html"},{default:r(()=>[t("弱引用示例")]),_:1})]),e("li",null,[a(o,{to:"/software/spring/Spring%E6%A1%86%E6%9E%B6%E6%BA%90%E7%A0%81%E5%85%B3%E9%94%AE%E7%82%B9.html"},{default:r(()=>[t("Spring框架源码关键点")]),_:1})]),e("li",null,[t("[K8S 无感发布](../../../other/K8S "),e("a",c,[t("无感发布.md"),a(s)]),t(")")]),e("li",null,[a(o,{to:"/software/middleware/mysql/MySQL%E9%94%81%E3%80%81%E4%BA%8B%E5%8A%A1%E3%80%81%E9%9A%94%E7%A6%BB%E7%BA%A7%E5%88%AB.html"},{default:r(()=>[t("MySQL锁、事务、隔离级别")]),_:1})]),e("li",null,[a(o,{to:"/other/Arthas%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95.html"},{default:r(()=>[t("Arthas使用记录")]),_:1})]),e("li",null,[a(o,{to:"/software/unclassified/%E7%AE%80%E6%98%93%E7%89%88%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83&%E5%88%9D%E6%8E%A2%E5%8E%9F%E7%90%86.html"},{default:r(()=>[t("简易版配置中心&初探原理")]),_:1})]),e("li",null,[a(o,{to:"/software/unclassified/gperftools.html"},{default:r(()=>[t("gperftools")]),_:1})]),e("li",null,[a(o,{to:"/software/raft/raft%E5%8D%8F%E8%AE%AE.html"},{default:r(()=>[t("raft协议")]),_:1})])]),u,_,p,A])}const F=n(h,[["render",B],["__file","kafka.html.vue"]]);export{F as default};
