const e=JSON.parse('{"key":"v-47411aa8","path":"/software/unclassified/%E6%9D%82%E8%AE%B0.html","title":"杂记","lang":"zh-CN","frontmatter":{"title":"杂记","date":"2022-04-16T00:00:00.000Z","description":"top、htop命令显示的res列， 这个res展示的是操作系统看到的进程使用内存，至于进程到底有没有吧这些res内存使用完，只有进程自己知道。（甚至于res的值可以大于物理内存总量） 这也就解释了，为什么某个java进程dump出来的堆文件比如只有1G，但是res显示却大于1G，比如显示2G,3G甚至更高 如上图，htop命令显示进程4529使用了3.6G内存，但通过dump文件只有100m样子，也就是上图显示的used的大小， 而res显示的内存和上图中的total显示的内存基本一直。","head":[["link",{"rel":"canonical","href":"https://justsoso.fun/software/unclassified/%E6%9D%82%E8%AE%B0.html"}],["meta",{"property":"og:url","content":"https://justsoso.fun/software/unclassified/%E6%9D%82%E8%AE%B0.html"}],["meta",{"property":"og:site_name","content":"技术加油站"}],["meta",{"property":"og:title","content":"杂记"}],["meta",{"property":"og:description","content":"top、htop命令显示的res列， 这个res展示的是操作系统看到的进程使用内存，至于进程到底有没有吧这些res内存使用完，只有进程自己知道。（甚至于res的值可以大于物理内存总量） 这也就解释了，为什么某个java进程dump出来的堆文件比如只有1G，但是res显示却大于1G，比如显示2G,3G甚至更高 如上图，htop命令显示进程4529使用了3.6G内存，但通过dump文件只有100m样子，也就是上图显示的used的大小， 而res显示的内存和上图中的total显示的内存基本一直。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-05T20:15:44.000Z"}],["meta",{"property":"article:published_time","content":"2022-04-16T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-05T20:15:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"杂记\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-04-16T00:00:00.000Z\\",\\"dateModified\\":\\"2024-09-05T20:15:44.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"top、htop命令显示的res列，","slug":"top、htop命令显示的res列","link":"#top、htop命令显示的res列","children":[]},{"level":2,"title":"dump文件会包含直接内存的信息吗？","slug":"dump文件会包含直接内存的信息吗","link":"#dump文件会包含直接内存的信息吗","children":[]},{"level":2,"title":"dump文件包含了哪些内存信息？","slug":"dump文件包含了哪些内存信息","link":"#dump文件包含了哪些内存信息","children":[]},{"level":2,"title":"/proc/meminfo","slug":"proc-meminfo","link":"#proc-meminfo","children":[]},{"level":2,"title":"/proc/pid/maps和/proc/pid/smaps","slug":"proc-pid-maps和-proc-pid-smaps","link":"#proc-pid-maps和-proc-pid-smaps","children":[]},{"level":2,"title":"/proc/pid/status","slug":"proc-pid-status","link":"#proc-pid-status","children":[]},{"level":2,"title":"gdb attach pid","slug":"gdb-attach-pid","link":"#gdb-attach-pid","children":[]},{"level":2,"title":"青年代和老年的的占比","slug":"青年代和老年的的占比","link":"#青年代和老年的的占比","children":[]},{"level":2,"title":"青年代中survivor和eden区的占比","slug":"青年代中survivor和eden区的占比","link":"#青年代中survivor和eden区的占比","children":[]},{"level":2,"title":"Linux系统调用mmap与munmap","slug":"linux系统调用mmap与munmap","link":"#linux系统调用mmap与munmap","children":[]},{"level":2,"title":"Java NMT (Native Memory Tracking)","slug":"java-nmt-native-memory-tracking","link":"#java-nmt-native-memory-tracking","children":[]},{"level":2,"title":"mmap/malloc","slug":"mmap-malloc","link":"#mmap-malloc","children":[]},{"level":2,"title":"为什么mmap能减少内存拷贝？","slug":"为什么mmap能减少内存拷贝","link":"#为什么mmap能减少内存拷贝","children":[]},{"level":2,"title":"看个好玩的","slug":"看个好玩的","link":"#看个好玩的","children":[]},{"level":2,"title":"cookie的domain属性","slug":"cookie的domain属性","link":"#cookie的domain属性","children":[]},{"level":2,"title":"localStorage","slug":"localstorage","link":"#localstorage","children":[]},{"level":2,"title":"SSO( Single Sign On ) 单点登陆","slug":"sso-single-sign-on-单点登陆","link":"#sso-single-sign-on-单点登陆","children":[]},{"level":2,"title":"系统推荐","slug":"系统推荐","link":"#系统推荐","children":[]}],"git":{"createdTime":1672234484000,"updatedTime":1725567344000,"contributors":[{"name":"rocky-peng","email":"rocky.peng@qq.com","commits":46},{"name":"rocky.peng","email":"rocky.peng@qq.com","commits":22}]},"readingTime":{"minutes":8.92,"words":2675},"filePathRelative":"software/unclassified/杂记.md","localizedDate":"2022年4月16日","excerpt":"<h2> top、htop命令显示的res列，</h2>\\n<p>这个res展示的是操作系统看到的进程使用内存，至于进程到底有没有吧这些res内存使用完，只有进程自己知道。（甚至于res的值可以大于物理内存总量）\\n这也就解释了，为什么某个java进程dump出来的堆文件比如只有1G，但是res显示却大于1G，比如显示2G,3G甚至更高\\n<img src=\\"https://cdn.justdopay.com/pasteimageintomarkdown/2022-08-25/276298691412800.png\\" alt=\\"\\" loading=\\"lazy\\">\\n如上图，htop命令显示进程4529使用了3.6G内存，但通过dump文件只有100m样子，也就是上图显示的used的大小，\\n而res显示的内存和上图中的total显示的内存基本一直。</p>","copyright":{},"autoDesc":true}');export{e as data};
