import{_ as e,$ as l,a0 as o,a1 as n,a3 as t,a4 as p,a5 as c,a2 as s,w as i}from"./framework-b3a0f150.js";const u={},r=c(`<p>已很经典的菜单为例，假设结构如下：</p><ul><li>id</li><li>parent_id</li><li>name</li><li>xxx1</li><li>xxx2</li><li>….</li></ul><p>按照一比一构造一个类（只增加一个children字段）：</p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token annotation punctuation">@Data</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XXXX</span><span class="token punctuation">{</span>
	<span class="token keyword">private</span> <span class="token class-name">Long</span> id<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">Long</span> parentId<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> xxx1<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">String</span> xxx2<span class="token punctuation">;</span>

	<span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> children<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> <span class="token function">treeMenu</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> xxxxs <span class="token operator">=</span> xxxxDao<span class="token punctuation">.</span><span class="token function">menuList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//第一步分组</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> parentId2Children <span class="token operator">=</span>
        xxxxs<span class="token punctuation">.</span><span class="token function">stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">collect</span><span class="token punctuation">(</span><span class="token class-name">Collectors</span><span class="token punctuation">.</span><span class="token function">groupingBy</span><span class="token punctuation">(</span>i <span class="token operator">-&gt;</span> i<span class="token punctuation">.</span><span class="token function">getParentId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token comment">//第二步构造树</span>
    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> roots <span class="token operator">=</span> parentId2Children<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token number">0L</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">buildTree</span><span class="token punctuation">(</span>roots<span class="token punctuation">,</span> parentId2Children<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token keyword">return</span> roots<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">buildTree</span><span class="token punctuation">(</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> parents<span class="token punctuation">,</span>
    <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">List</span><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span><span class="token punctuation">&gt;</span></span> parentId2Children<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token class-name">CollUtil</span><span class="token punctuation">.</span><span class="token function">isEmpty</span><span class="token punctuation">(</span>parents<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    parents<span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token class-name">Comparator</span><span class="token punctuation">.</span><span class="token function">comparing</span><span class="token punctuation">(</span><span class="token constant">XXXX</span><span class="token operator">::</span><span class="token function">getId</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token constant">XXXX</span> parent <span class="token operator">:</span> parents<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span>XXXX<span class="token punctuation">&gt;</span></span> children <span class="token operator">=</span> parentId2Children<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span>parent<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        parent<span class="token punctuation">.</span><span class="token function">setChildren</span><span class="token punctuation">(</span>children<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token function">buildTree</span><span class="token punctuation">(</span>children<span class="token punctuation">,</span> parentId2Children<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>`,7),k=n("p",null,[n("br"),n("br"),n("br"),n("br"),n("br"),n("br")],-1),d=n("hr",null,null,-1),v=n("hr",null,null,-1),m=n("ul",null,[n("li",null,[n("strong",null,"随机毒鸡汤"),s("：钱其实不是被你花了，只是换一种方式陪伴你。 "),n("br"),n("br"),n("img",{src:"https://tuapi.eees.cc/api.php?category=biying&type=302&uuid=23073a01-255a-4bfe-b178-809334573b68",alt:"",loading:"lazy"})])],-1);function E(b,h){const a=i("RouterLink");return l(),o("div",null,[r,n("ul",null,[n("li",null,[t(a,{to:"/other/Notion%E7%AC%94%E8%AE%B0%E5%AE%9A%E6%97%B6%E5%A4%87%E4%BB%BD.html"},{default:p(()=>[s("Notion笔记定时备份")]),_:1})]),n("li",null,[t(a,{to:"/other/Censys%E6%90%9C%E7%B4%A2%E5%BC%95%E6%93%8E%E5%AD%A6%E4%B9%A0.html"},{default:p(()=>[s("Censys搜索引擎学习")]),_:1})]),n("li",null,[t(a,{to:"/software/java-basic/IO%E7%9B%B8%E5%85%B3.html"},{default:p(()=>[s("IO相关")]),_:1})]),n("li",null,[t(a,{to:"/other/Spring%20RetryTemplate.html"},{default:p(()=>[s("Spring RetryTemplate")]),_:1})]),n("li",null,[t(a,{to:"/software/unclassified/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8C%B9%E9%85%8D%E7%AC%AC%E5%87%A0%E4%B8%AA%E7%AC%A6%E5%8F%B7%E9%97%AE%E9%A2%98.html"},{default:p(()=>[s("正则表达式匹配第几个符号问题")]),_:1})]),n("li",null,[t(a,{to:"/software/unclassified/%E7%BA%BF%E4%B8%8AFullGC%E9%A2%91%E7%B9%81%E7%9A%84%E6%8E%92%E6%9F%A5.html"},{default:p(()=>[s("线上FullGC频繁的排查")]),_:1})]),n("li",null,[t(a,{to:"/other/%E9%AB%98%E5%8F%AF%E7%94%A8%E9%80%9A%E7%94%A8%E6%96%B9%E6%A1%88.html"},{default:p(()=>[s("高可用通用方案")]),_:1})]),n("li",null,[t(a,{to:"/other/Paxos%E7%AE%97%E6%B3%95.html"},{default:p(()=>[s("Paxos算法")]),_:1})]),n("li",null,[t(a,{to:"/software/middleware/mysql/InnoDB%E5%AD%98%E5%82%A8%E5%BC%95%E6%93%8E.html"},{default:p(()=>[s("InnoDB存储引擎")]),_:1})]),n("li",null,[t(a,{to:"/software/unclassified/index%E6%96%B9%E6%B3%95%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95%E8%AE%B0%E5%BD%95.html"},{default:p(()=>[s("index方法压力测试记录")]),_:1})]),n("li",null,[t(a,{to:"/other/Git%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1.html"},{default:p(()=>[s("Git历史记录修改用户名和邮箱")]),_:1})]),n("li",null,[t(a,{to:"/other/Docker%E9%9A%90%E5%B0%84%E7%9A%84%E7%AB%AF%E5%8F%A3%E5%A4%96%E7%BD%91%E4%B8%8D%E8%83%BD%E8%AE%BF%E9%97%AE.html"},{default:p(()=>[s("Docker隐射的端口外网不能访问")]),_:1})])]),k,d,v,m])}const B=e(u,[["render",E],["__file","数组转树形结构只需两步.html.vue"]]);export{B as default};
