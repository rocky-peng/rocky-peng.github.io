import{_ as n,$ as o,a0 as r,a1 as e,a3 as s,a4 as l,a5 as i,a2 as a,w as d}from"./framework-b3a0f150.js";const u={},E=i('<h2 id="方法一" tabindex="-1"><a class="header-anchor" href="#方法一" aria-hidden="true">#</a> 方法一</h2><p>比较通用</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">find</span> ./ <span class="token parameter variable">-name</span> <span class="token string">&quot;*keyword*&quot;</span> <span class="token operator">|</span> <span class="token keyword">while</span> <span class="token builtin class-name">read</span> f<span class="token punctuation">;</span> <span class="token keyword">do</span> <span class="token function">mv</span> <span class="token variable">$f</span> <span class="token variable">${f<span class="token operator">/</span>keyword<span class="token operator">/</span>targetword}</span><span class="token punctuation">;</span> <span class="token keyword">done</span>\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>命令解释：找出文件名中有 keyword 字符串的文件，然后通过mv命令把 keyword替换为targetword</p><br><h2 id="系统推荐" tabindex="-1"><a class="header-anchor" href="#系统推荐" aria-hidden="true">#</a> 系统推荐</h2>',6),c=e("p",null,[e("br"),e("br"),e("br"),e("br"),e("br"),e("br")],-1),h=e("hr",null,null,-1),p=e("hr",null,null,-1),_=e("ul",null,[e("li",null,[e("strong",null,"随机毒鸡汤"),a("：心有猛虎，细嗅蔷薇，蔷薇说我口气好大。 "),e("br"),e("br"),e("img",{src:"https://images.pexels.com/photos/16143144/pexels-photo-16143144.jpeg?auto=compress&cs=tinysrgb&h=650&w=940",alt:"Serene view of the Summer Palace with its historical architecture reflecting in the lake at sunset.",loading:"lazy"})])],-1);function m(f,A){const t=d("RouterLink");return o(),r("div",null,[E,e("ul",null,[e("li",null,[s(t,{to:"/software/java-basic/synchronized%E5%8E%9F%E7%90%86%E6%B7%B1%E5%BA%A6%E5%89%96%E6%9E%90.html"},{default:l(()=>[a("synchronized原理深度剖析")]),_:1})]),e("li",null,[s(t,{to:"/other/CloudFlare%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E8%AF%81%E4%B9%A6%E7%9A%84%E4%BD%BF%E7%94%A8.html"},{default:l(()=>[a("CloudFlare 客户端证书的使用")]),_:1})]),e("li",null,[s(t,{to:"/software/unclassified/NGINX.html"},{default:l(()=>[a("NGINX")]),_:1})]),e("li",null,[s(t,{to:"/software/shodowsocks/ShadowsockServer.html"},{default:l(()=>[a("ShadowsockServer")]),_:1})]),e("li",null,[s(t,{to:"/software/unclassified/Flutter%E5%BC%80%E5%8F%91%E9%9C%80%E8%A6%81%E6%B6%89%E5%8F%8A%E7%9A%84%E7%9F%A5%E8%AF%86%E7%82%B9%E5%A4%A7%E7%BA%B2.html"},{default:l(()=>[a("Flutter开发需要涉及的知识点大纲")]),_:1})]),e("li",null,[s(t,{to:"/software/middleware/mysql/MySQL%E7%B4%A2%E5%BC%95.html"},{default:l(()=>[a("MySQL索引")]),_:1})]),e("li",null,[s(t,{to:"/software/middleware/mysql/MySQL%E4%B8%89%E5%A4%A7%E6%97%A5%E5%BF%97.html"},{default:l(()=>[a("MySQL三大日志")]),_:1})]),e("li",null,[s(t,{to:"/other/Nginx%E7%9A%84%E5%8F%8C%E5%90%91%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE.html"},{default:l(()=>[a("Nginx的双向认证配置")]),_:1})]),e("li",null,[s(t,{to:"/other/Git%E5%8E%86%E5%8F%B2%E8%AE%B0%E5%BD%95%E4%BF%AE%E6%94%B9%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1.html"},{default:l(()=>[a("Git历史记录修改用户名和邮箱")]),_:1})]),e("li",null,[s(t,{to:"/other/Hbase%20%E6%80%BB%E8%A7%88.html"},{default:l(()=>[a("Hbase 总览")]),_:1})]),e("li",null,[s(t,{to:"/other/https%E5%92%8Chttp%E6%B7%B7%E7%94%A8%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95.html"},{default:l(()=>[a("https和http混用解决办法")]),_:1})]),e("li",null,[s(t,{to:"/software/linux/Linux.html"},{default:l(()=>[a("Linux")]),_:1})])]),c,h,p,_])}const k=n(u,[["render",m],["__file","批量替换文件名中的指定字符串.html.vue"]]);export{k as default};
